//
// unittest_optimize_for.pb.m
// 
// Generated by the objc protocol buffer compiler plugin.  DO NOT EDIT!
// source: google/protobuf/unittest_optimize_for.proto
//

#import "unittest_optimize_for.pb.h"

// @@protoc_insertion_point(imports)

@implementation UnittestOptimizeForRoot

static PBExtensionField* TestOptimizedForSize_testExtension = nil;
static PBExtensionField* TestOptimizedForSize_testExtension2 = nil;
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [UnittestOptimizeForRoot class]) {
    TestOptimizedForSize_testExtension =
      [PBExtensionField extensionWithType:PBExtensionTypeInt32
                            extendedClass:[TestOptimizedForSize class]
                              fieldNumber:1234
                             defaultValue:@(0)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    TestOptimizedForSize_testExtension2 =
      [PBExtensionField extensionWithType:PBExtensionTypeMessage
                            extendedClass:[TestOptimizedForSize class]
                              fieldNumber:1235
                             defaultValue:[TestRequiredOptimizedForSize defaultInstance]
                      messageOrGroupClass:[TestRequiredOptimizedForSize class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [UnittestRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}

+ (void)registerAllExtensions:(PBMutableExtensionRegistry*)registry {
  [registry addExtension:TestOptimizedForSize_testExtension];
  [registry addExtension:TestOptimizedForSize_testExtension2];
}


@end


#pragma mark - TestOptimizedForSize

@interface TestOptimizedForSize ()

@property int32_t i;
@property (strong) ForeignMessage* msg;

@end

@implementation TestOptimizedForSize {
  BOOL _hasI:1;
  BOOL _hasMsg:1;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
    _i = 0;
    _msg = [ForeignMessage defaultInstance];
  return self;
}

+ (instancetype)defaultInstance {
  static id _sharedObject = nil;
  static dispatch_once_t onceToken;
  dispatch_once(&onceToken, ^{
    _sharedObject = [[self alloc] init];
  });
  return _sharedObject;
}

- (BOOL)hasI {
  return !!_hasI;
}
- (void)setHasI:(BOOL)value {
  _hasI = !!value;
}
- (BOOL)hasMsg {
  return !!_hasMsg;
}
- (void)setHasMsg:(BOOL)value {
  _hasMsg = !!value;
}


+ (PBExtensionField *)testExtension {
  return TestOptimizedForSize_testExtension;
}
+ (PBExtensionField *)testExtension2 {
  return TestOptimizedForSize_testExtension2;
}


- (BOOL)isInitialized {
  if (!self.extensionsAreInitialized) {
    return NO;
  }
  return YES;
}

- (void)writeToCodedOutputStream:(PBCodedOutputStream*)output {
  if (self.hasI) {
    [output writeInt32:1 value:self.i];
  }
  if (self.hasMsg) {
    [output writeMessage:19 value:self.msg];
  }
  [self writeExtensionsToCodedOutputStream:output
                                      from:1000
                                        to:536870912];
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t)serializedSize {
  int32_t size_ = _cachedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasI) {
    size_ += computeInt32Size(1, self.i);
  }
  if (self.hasMsg) {
    size_ += computeMessageSize(19, self.msg);
  }
  size_ += [self extensionsSerializedSize];
  size_ += self.unknownFields.serializedSize;
  _cachedSerializedSize = size_;
  return size_;
}


+ (TestOptimizedForSize_Builder*)builder {
  return [[TestOptimizedForSize_Builder alloc] init];
}
+ (TestOptimizedForSize_Builder*)builderWithPrototype:(TestOptimizedForSize*)prototype {
  return [[TestOptimizedForSize builder] mergeFrom:prototype];
}
- (TestOptimizedForSize_Builder*)builder {
  return [TestOptimizedForSize builder];
}
- (TestOptimizedForSize_Builder*)toBuilder {
  return [TestOptimizedForSize builderWithPrototype:self];
}

- (void)writeDescriptionTo:(NSMutableString*)output withIndent:(NSString*)indent {
  NSUInteger listCount; listCount = 0;
  if (self.hasI) {
    [output appendFormat:@"%@%@: %@\n", indent, @"i", @(self.i)];
  }
  if (self.hasMsg) {
    [output appendFormat:@"%@%@ {\n", indent, @"msg"];
    [self.msg writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self writeExtensionDescriptionToMutableString:(NSMutableString*)output
                                            from:1000
                                              to:536870912
                                      withIndent:indent];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}

- (BOOL)isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TestOptimizedForSize class]]) {
    return NO;
  }
  TestOptimizedForSize *otherMessage = other;
  return
      self.hasI == otherMessage.hasI &&
      (!self.hasI || self.i == otherMessage.i) &&
      self.hasMsg == otherMessage.hasMsg &&
      (!self.hasMsg || [self.msg isEqual:otherMessage.msg]) &&
      [self isEqualExtensionsInOther:otherMessage from:1000 to:536870912] &&

      (self.unknownFields == otherMessage.unknownFields ||
       (self.unknownFields != nil &&
       [self.unknownFields isEqual:otherMessage.unknownFields]));
}

- (NSUInteger)hash {
  NSUInteger hashCode; hashCode = 7;
  NSUInteger listCount; listCount = 0;
  if (self.hasI) {
    hashCode = hashCode * 31 + [@(self.i) hash];
  }
  if (self.hasMsg) {
    hashCode = hashCode * 31 + [self.msg hash];
  }
  hashCode = hashCode * 31 + [self hashExtensionsFrom:1000 to:536870912];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}

@end


@implementation TestOptimizedForSize_Builder {
  TestOptimizedForSize* _result;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  _result = [[TestOptimizedForSize alloc] init];
  return self;
}

- (PBExtendableMessage*)internalGetResult {
  return _result;
}
- (instancetype)clear {
  _result = [[TestOptimizedForSize alloc] init];
  return self;
}
- (instancetype)clone {
  return [[[TestOptimizedForSize_Builder alloc] init] mergeFrom:_result];
}

- (TestOptimizedForSize*)defaultMessageInstance {
  return [TestOptimizedForSize defaultInstance];
}

- (TestOptimizedForSize*)build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TestOptimizedForSize*)buildPartial {
  TestOptimizedForSize* partial = _result;
  _result = nil;
  return partial;
}

- (instancetype)mergeFrom:(TestOptimizedForSize*)other {
  if (other == [TestOptimizedForSize defaultInstance]) {
    return self;
  }
  if (other.hasI) {
    [self setI:other.i];
  }
  if (other.hasMsg) {
    [self mergeMsg:other.msg];
  }
  [self mergeExtensionFields:other];
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (instancetype)mergeFromCodedInputStream:(PBCodedInputStream*)input
                        extensionRegistry:(PBExtensionRegistry*)extensionRegistry
{
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input
                       unknownFields:unknownFields
                   extensionRegistry:extensionRegistry
                                 tag:tag])
        {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setI:[input readInt32]];
        break;
      }
      case 154: {
        ForeignMessage_Builder* subBuilder = [ForeignMessage builder];
        if (self.hasMsg) {
          [subBuilder mergeFrom:self.msg];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMsg:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL)hasI {
  return _result.hasI;
}
- (int32_t) i {
  return _result.i;
}
- (instancetype)setI:(int32_t)value {
  _result.hasI = YES;
  _result.i = value;
  return self;
}
- (instancetype)clearI {
  _result.hasI = NO;
  _result.i = 0;
  return self;
}
- (BOOL)hasMsg {
  return _result.hasMsg;
}
- (ForeignMessage*)msg {
  return _result.msg;
}
- (instancetype)setMsg:(ForeignMessage*)value {
  _result.hasMsg = YES;
  _result.msg = value;
  return self;
}
- (instancetype)setMsgBuilder:(ForeignMessage_Builder*)builderForValue {
  return [self setMsg:[builderForValue build]];
}
- (instancetype)mergeMsg:(ForeignMessage*)value {
  if (_result.hasMsg &&
      _result.msg != [ForeignMessage defaultInstance]) {
    _result.msg =
      [[[ForeignMessage builderWithPrototype:_result.msg] mergeFrom:value] buildPartial];
  } else {
    _result.msg = value;
  }
  _result.hasMsg = YES;
  return self;
}
- (instancetype)clearMsg {
  _result.hasMsg = NO;
  _result.msg = [ForeignMessage defaultInstance];
  return self;
}

@end


#pragma mark - TestRequiredOptimizedForSize

@interface TestRequiredOptimizedForSize ()

@property int32_t x;

@end

@implementation TestRequiredOptimizedForSize {
  BOOL _hasX:1;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
    _x = 0;
  return self;
}

+ (instancetype)defaultInstance {
  static id _sharedObject = nil;
  static dispatch_once_t onceToken;
  dispatch_once(&onceToken, ^{
    _sharedObject = [[self alloc] init];
  });
  return _sharedObject;
}

- (BOOL)hasX {
  return !!_hasX;
}
- (void)setHasX:(BOOL)value {
  _hasX = !!value;
}


- (BOOL)isInitialized {
  if (!self.hasX) {
    return NO;
  }
  return YES;
}

- (void)writeToCodedOutputStream:(PBCodedOutputStream*)output {
  if (self.hasX) {
    [output writeInt32:1 value:self.x];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t)serializedSize {
  int32_t size_ = _cachedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasX) {
    size_ += computeInt32Size(1, self.x);
  }
  size_ += self.unknownFields.serializedSize;
  _cachedSerializedSize = size_;
  return size_;
}


+ (TestRequiredOptimizedForSize_Builder*)builder {
  return [[TestRequiredOptimizedForSize_Builder alloc] init];
}
+ (TestRequiredOptimizedForSize_Builder*)builderWithPrototype:(TestRequiredOptimizedForSize*)prototype {
  return [[TestRequiredOptimizedForSize builder] mergeFrom:prototype];
}
- (TestRequiredOptimizedForSize_Builder*)builder {
  return [TestRequiredOptimizedForSize builder];
}
- (TestRequiredOptimizedForSize_Builder*)toBuilder {
  return [TestRequiredOptimizedForSize builderWithPrototype:self];
}

- (void)writeDescriptionTo:(NSMutableString*)output withIndent:(NSString*)indent {
  NSUInteger listCount; listCount = 0;
  if (self.hasX) {
    [output appendFormat:@"%@%@: %@\n", indent, @"x", @(self.x)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}

- (BOOL)isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TestRequiredOptimizedForSize class]]) {
    return NO;
  }
  TestRequiredOptimizedForSize *otherMessage = other;
  return
      self.hasX == otherMessage.hasX &&
      (!self.hasX || self.x == otherMessage.x) &&
      (self.unknownFields == otherMessage.unknownFields ||
       (self.unknownFields != nil &&
       [self.unknownFields isEqual:otherMessage.unknownFields]));
}

- (NSUInteger)hash {
  NSUInteger hashCode; hashCode = 7;
  NSUInteger listCount; listCount = 0;
  if (self.hasX) {
    hashCode = hashCode * 31 + [@(self.x) hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}

@end


@implementation TestRequiredOptimizedForSize_Builder {
  TestRequiredOptimizedForSize* _result;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  _result = [[TestRequiredOptimizedForSize alloc] init];
  return self;
}

- (PBGeneratedMessage*)internalGetResult {
  return _result;
}
- (instancetype)clear {
  _result = [[TestRequiredOptimizedForSize alloc] init];
  return self;
}
- (instancetype)clone {
  return [[[TestRequiredOptimizedForSize_Builder alloc] init] mergeFrom:_result];
}

- (TestRequiredOptimizedForSize*)defaultMessageInstance {
  return [TestRequiredOptimizedForSize defaultInstance];
}

- (TestRequiredOptimizedForSize*)build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TestRequiredOptimizedForSize*)buildPartial {
  TestRequiredOptimizedForSize* partial = _result;
  _result = nil;
  return partial;
}

- (instancetype)mergeFrom:(TestRequiredOptimizedForSize*)other {
  if (other == [TestRequiredOptimizedForSize defaultInstance]) {
    return self;
  }
  if (other.hasX) {
    [self setX:other.x];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (instancetype)mergeFromCodedInputStream:(PBCodedInputStream*)input
                        extensionRegistry:(PBExtensionRegistry*)extensionRegistry
{
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input
                       unknownFields:unknownFields
                   extensionRegistry:extensionRegistry
                                 tag:tag])
        {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setX:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL)hasX {
  return _result.hasX;
}
- (int32_t) x {
  return _result.x;
}
- (instancetype)setX:(int32_t)value {
  _result.hasX = YES;
  _result.x = value;
  return self;
}
- (instancetype)clearX {
  _result.hasX = NO;
  _result.x = 0;
  return self;
}

@end


#pragma mark - TestOptionalOptimizedForSize

@interface TestOptionalOptimizedForSize ()

@property (strong) TestRequiredOptimizedForSize* o;

@end

@implementation TestOptionalOptimizedForSize {
  BOOL _hasO:1;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
    _o = [TestRequiredOptimizedForSize defaultInstance];
  return self;
}

+ (instancetype)defaultInstance {
  static id _sharedObject = nil;
  static dispatch_once_t onceToken;
  dispatch_once(&onceToken, ^{
    _sharedObject = [[self alloc] init];
  });
  return _sharedObject;
}

- (BOOL)hasO {
  return !!_hasO;
}
- (void)setHasO:(BOOL)value {
  _hasO = !!value;
}



- (BOOL)isInitialized {
  if (self.hasO) {
    if (!self.o.isInitialized) {
      return NO;
    }
  }
  return YES;
}

- (void)writeToCodedOutputStream:(PBCodedOutputStream*)output {
  if (self.hasO) {
    [output writeMessage:1 value:self.o];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t)serializedSize {
  int32_t size_ = _cachedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasO) {
    size_ += computeMessageSize(1, self.o);
  }
  size_ += self.unknownFields.serializedSize;
  _cachedSerializedSize = size_;
  return size_;
}


+ (TestOptionalOptimizedForSize_Builder*)builder {
  return [[TestOptionalOptimizedForSize_Builder alloc] init];
}
+ (TestOptionalOptimizedForSize_Builder*)builderWithPrototype:(TestOptionalOptimizedForSize*)prototype {
  return [[TestOptionalOptimizedForSize builder] mergeFrom:prototype];
}
- (TestOptionalOptimizedForSize_Builder*)builder {
  return [TestOptionalOptimizedForSize builder];
}
- (TestOptionalOptimizedForSize_Builder*)toBuilder {
  return [TestOptionalOptimizedForSize builderWithPrototype:self];
}

- (void)writeDescriptionTo:(NSMutableString*)output withIndent:(NSString*)indent {
  NSUInteger listCount; listCount = 0;
  if (self.hasO) {
    [output appendFormat:@"%@%@ {\n", indent, @"o"];
    [self.o writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}

- (BOOL)isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TestOptionalOptimizedForSize class]]) {
    return NO;
  }
  TestOptionalOptimizedForSize *otherMessage = other;
  return
      self.hasO == otherMessage.hasO &&
      (!self.hasO || [self.o isEqual:otherMessage.o]) &&
      (self.unknownFields == otherMessage.unknownFields ||
       (self.unknownFields != nil &&
       [self.unknownFields isEqual:otherMessage.unknownFields]));
}

- (NSUInteger)hash {
  NSUInteger hashCode; hashCode = 7;
  NSUInteger listCount; listCount = 0;
  if (self.hasO) {
    hashCode = hashCode * 31 + [self.o hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}

@end


@implementation TestOptionalOptimizedForSize_Builder {
  TestOptionalOptimizedForSize* _result;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  _result = [[TestOptionalOptimizedForSize alloc] init];
  return self;
}

- (PBGeneratedMessage*)internalGetResult {
  return _result;
}
- (instancetype)clear {
  _result = [[TestOptionalOptimizedForSize alloc] init];
  return self;
}
- (instancetype)clone {
  return [[[TestOptionalOptimizedForSize_Builder alloc] init] mergeFrom:_result];
}

- (TestOptionalOptimizedForSize*)defaultMessageInstance {
  return [TestOptionalOptimizedForSize defaultInstance];
}

- (TestOptionalOptimizedForSize*)build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TestOptionalOptimizedForSize*)buildPartial {
  TestOptionalOptimizedForSize* partial = _result;
  _result = nil;
  return partial;
}

- (instancetype)mergeFrom:(TestOptionalOptimizedForSize*)other {
  if (other == [TestOptionalOptimizedForSize defaultInstance]) {
    return self;
  }
  if (other.hasO) {
    [self mergeO:other.o];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (instancetype)mergeFromCodedInputStream:(PBCodedInputStream*)input
                        extensionRegistry:(PBExtensionRegistry*)extensionRegistry
{
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input
                       unknownFields:unknownFields
                   extensionRegistry:extensionRegistry
                                 tag:tag])
        {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TestRequiredOptimizedForSize_Builder* subBuilder = [TestRequiredOptimizedForSize builder];
        if (self.hasO) {
          [subBuilder mergeFrom:self.o];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setO:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL)hasO {
  return _result.hasO;
}
- (TestRequiredOptimizedForSize*)o {
  return _result.o;
}
- (instancetype)setO:(TestRequiredOptimizedForSize*)value {
  _result.hasO = YES;
  _result.o = value;
  return self;
}
- (instancetype)setOBuilder:(TestRequiredOptimizedForSize_Builder*)builderForValue {
  return [self setO:[builderForValue build]];
}
- (instancetype)mergeO:(TestRequiredOptimizedForSize*)value {
  if (_result.hasO &&
      _result.o != [TestRequiredOptimizedForSize defaultInstance]) {
    _result.o =
      [[[TestRequiredOptimizedForSize builderWithPrototype:_result.o] mergeFrom:value] buildPartial];
  } else {
    _result.o = value;
  }
  _result.hasO = YES;
  return self;
}
- (instancetype)clearO {
  _result.hasO = NO;
  _result.o = [TestRequiredOptimizedForSize defaultInstance];
  return self;
}

@end


// @@protoc_insertion_point(global_scope)
