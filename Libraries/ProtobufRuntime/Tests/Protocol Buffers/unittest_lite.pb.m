//
// unittest_lite.pb.m
// 
// Generated by the objc protocol buffer compiler plugin.  DO NOT EDIT!
// source: google/protobuf/unittest_lite.proto
//

#import "unittest_lite.pb.h"

// @@protoc_insertion_point(imports)

@implementation UnittestLiteRoot

static PBExtensionField* UnittestLiteRoot_optionalInt32ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_optionalInt64ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_optionalUint32ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_optionalUint64ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_optionalSint32ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_optionalSint64ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_optionalFixed32ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_optionalFixed64ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_optionalSfixed32ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_optionalSfixed64ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_optionalFloatExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_optionalDoubleExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_optionalBoolExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_optionalStringExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_optionalBytesExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_OptionalGroupExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_optionalNestedMessageExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_optionalForeignMessageExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_optionalImportMessageExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_optionalNestedEnumExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_optionalForeignEnumExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_optionalImportEnumExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_optionalStringPieceExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_optionalCordExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_optionalPublicImportMessageExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_optionalLazyMessageExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_repeatedInt32ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_repeatedInt64ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_repeatedUint32ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_repeatedUint64ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_repeatedSint32ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_repeatedSint64ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_repeatedFixed32ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_repeatedFixed64ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_repeatedSfixed32ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_repeatedSfixed64ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_repeatedFloatExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_repeatedDoubleExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_repeatedBoolExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_repeatedStringExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_repeatedBytesExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_RepeatedGroupExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_repeatedNestedMessageExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_repeatedForeignMessageExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_repeatedImportMessageExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_repeatedNestedEnumExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_repeatedForeignEnumExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_repeatedImportEnumExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_repeatedStringPieceExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_repeatedCordExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_repeatedLazyMessageExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_defaultInt32ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_defaultInt64ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_defaultUint32ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_defaultUint64ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_defaultSint32ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_defaultSint64ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_defaultFixed32ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_defaultFixed64ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_defaultSfixed32ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_defaultSfixed64ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_defaultFloatExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_defaultDoubleExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_defaultBoolExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_defaultStringExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_defaultBytesExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_defaultNestedEnumExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_defaultForeignEnumExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_defaultImportEnumExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_defaultStringPieceExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_defaultCordExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_packedInt32ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_packedInt64ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_packedUint32ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_packedUint64ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_packedSint32ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_packedSint64ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_packedFixed32ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_packedFixed64ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_packedSfixed32ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_packedSfixed64ExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_packedFloatExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_packedDoubleExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_packedBoolExtensionLite = nil;
static PBExtensionField* UnittestLiteRoot_packedEnumExtensionLite = nil;
static PBExtensionField* TestNestedExtensionLite_nestedExtension = nil;
static PBExtensionField* TestParsingMergeLite_optionalExt = nil;
static PBExtensionField* TestParsingMergeLite_repeatedExt = nil;
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [UnittestLiteRoot class]) {
    UnittestLiteRoot_optionalInt32ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeInt32
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:1
                             defaultValue:@(0)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_optionalInt64ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeInt64
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:2
                             defaultValue:@(0L)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_optionalUint32ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeUInt32
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:3
                             defaultValue:@(0)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_optionalUint64ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeUInt64
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:4
                             defaultValue:@(0L)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_optionalSint32ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeSInt32
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:5
                             defaultValue:@(0)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_optionalSint64ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeSInt64
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:6
                             defaultValue:@(0L)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_optionalFixed32ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeFixed32
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:7
                             defaultValue:@(0)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_optionalFixed64ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeFixed64
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:8
                             defaultValue:@(0L)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_optionalSfixed32ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeSFixed32
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:9
                             defaultValue:@(0)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_optionalSfixed64ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeSFixed64
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:10
                             defaultValue:@(0L)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_optionalFloatExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeFloat
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:11
                             defaultValue:@(0)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_optionalDoubleExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeDouble
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:12
                             defaultValue:@(0)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_optionalBoolExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeBool
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:13
                             defaultValue:@(NO)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_optionalStringExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeString
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:14
                             defaultValue:@""
                      messageOrGroupClass:[NSString class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_optionalBytesExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeBytes
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:15
                             defaultValue:[NSData data]
                      messageOrGroupClass:[NSData class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_OptionalGroupExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeGroup
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:16
                             defaultValue:[OptionalGroup_extension_lite defaultInstance]
                      messageOrGroupClass:[OptionalGroup_extension_lite class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_optionalNestedMessageExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeMessage
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:18
                             defaultValue:[TestAllTypesLite_NestedMessage defaultInstance]
                      messageOrGroupClass:[TestAllTypesLite_NestedMessage class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_optionalForeignMessageExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeMessage
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:19
                             defaultValue:[ForeignMessageLite defaultInstance]
                      messageOrGroupClass:[ForeignMessageLite class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_optionalImportMessageExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeMessage
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:20
                             defaultValue:[ImportMessageLite defaultInstance]
                      messageOrGroupClass:[ImportMessageLite class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_optionalNestedEnumExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeEnum
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:21
                             defaultValue:@(TestAllTypesLite_NestedEnumFOO)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_optionalForeignEnumExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeEnum
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:22
                             defaultValue:@(ForeignEnumLiteFOREIGNLITEFOO)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_optionalImportEnumExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeEnum
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:23
                             defaultValue:@(ImportEnumLiteIMPORTLITEFOO)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_optionalStringPieceExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeString
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:24
                             defaultValue:@""
                      messageOrGroupClass:[NSString class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_optionalCordExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeString
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:25
                             defaultValue:@""
                      messageOrGroupClass:[NSString class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_optionalPublicImportMessageExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeMessage
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:26
                             defaultValue:[PublicImportMessageLite defaultInstance]
                      messageOrGroupClass:[PublicImportMessageLite class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_optionalLazyMessageExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeMessage
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:27
                             defaultValue:[TestAllTypesLite_NestedMessage defaultInstance]
                      messageOrGroupClass:[TestAllTypesLite_NestedMessage class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_repeatedInt32ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeInt32
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:31
                             defaultValue:[PBArray arrayWithValueType:PBArrayValueTypeInt32]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_repeatedInt64ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeInt64
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:32
                             defaultValue:[PBArray arrayWithValueType:PBArrayValueTypeInt64]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_repeatedUint32ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeUInt32
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:33
                             defaultValue:[PBArray arrayWithValueType:PBArrayValueTypeUInt32]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_repeatedUint64ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeUInt64
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:34
                             defaultValue:[PBArray arrayWithValueType:PBArrayValueTypeUInt64]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_repeatedSint32ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeSInt32
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:35
                             defaultValue:[PBArray arrayWithValueType:PBArrayValueTypeInt32]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_repeatedSint64ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeSInt64
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:36
                             defaultValue:[PBArray arrayWithValueType:PBArrayValueTypeInt64]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_repeatedFixed32ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeFixed32
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:37
                             defaultValue:[PBArray arrayWithValueType:PBArrayValueTypeUInt32]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_repeatedFixed64ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeFixed64
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:38
                             defaultValue:[PBArray arrayWithValueType:PBArrayValueTypeUInt64]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_repeatedSfixed32ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeSFixed32
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:39
                             defaultValue:[PBArray arrayWithValueType:PBArrayValueTypeInt32]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_repeatedSfixed64ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeSFixed64
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:40
                             defaultValue:[PBArray arrayWithValueType:PBArrayValueTypeInt64]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_repeatedFloatExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeFloat
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:41
                             defaultValue:[PBArray arrayWithValueType:PBArrayValueTypeFloat]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_repeatedDoubleExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeDouble
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:42
                             defaultValue:[PBArray arrayWithValueType:PBArrayValueTypeDouble]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_repeatedBoolExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeBool
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:43
                             defaultValue:[PBArray arrayWithValueType:PBArrayValueTypeBool]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_repeatedStringExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeString
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:44
                             defaultValue:[[NSArray alloc] init]
                      messageOrGroupClass:[NSString class]
                               isRepeated:YES
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_repeatedBytesExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeBytes
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:45
                             defaultValue:[[NSArray alloc] init]
                      messageOrGroupClass:[NSData class]
                               isRepeated:YES
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_RepeatedGroupExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeGroup
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:46
                             defaultValue:[[NSArray alloc] init]
                      messageOrGroupClass:[RepeatedGroup_extension_lite class]
                               isRepeated:YES
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_repeatedNestedMessageExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeMessage
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:48
                             defaultValue:[[NSArray alloc] init]
                      messageOrGroupClass:[TestAllTypesLite_NestedMessage class]
                               isRepeated:YES
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_repeatedForeignMessageExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeMessage
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:49
                             defaultValue:[[NSArray alloc] init]
                      messageOrGroupClass:[ForeignMessageLite class]
                               isRepeated:YES
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_repeatedImportMessageExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeMessage
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:50
                             defaultValue:[[NSArray alloc] init]
                      messageOrGroupClass:[ImportMessageLite class]
                               isRepeated:YES
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_repeatedNestedEnumExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeEnum
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:51
                             defaultValue:[[NSArray alloc] init]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_repeatedForeignEnumExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeEnum
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:52
                             defaultValue:[[NSArray alloc] init]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_repeatedImportEnumExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeEnum
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:53
                             defaultValue:[[NSArray alloc] init]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_repeatedStringPieceExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeString
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:54
                             defaultValue:[[NSArray alloc] init]
                      messageOrGroupClass:[NSString class]
                               isRepeated:YES
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_repeatedCordExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeString
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:55
                             defaultValue:[[NSArray alloc] init]
                      messageOrGroupClass:[NSString class]
                               isRepeated:YES
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_repeatedLazyMessageExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeMessage
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:57
                             defaultValue:[[NSArray alloc] init]
                      messageOrGroupClass:[TestAllTypesLite_NestedMessage class]
                               isRepeated:YES
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_defaultInt32ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeInt32
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:61
                             defaultValue:@(41)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_defaultInt64ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeInt64
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:62
                             defaultValue:@(42L)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_defaultUint32ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeUInt32
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:63
                             defaultValue:@(43)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_defaultUint64ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeUInt64
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:64
                             defaultValue:@(44L)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_defaultSint32ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeSInt32
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:65
                             defaultValue:@(-45)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_defaultSint64ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeSInt64
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:66
                             defaultValue:@(46L)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_defaultFixed32ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeFixed32
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:67
                             defaultValue:@(47)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_defaultFixed64ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeFixed64
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:68
                             defaultValue:@(48L)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_defaultSfixed32ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeSFixed32
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:69
                             defaultValue:@(49)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_defaultSfixed64ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeSFixed64
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:70
                             defaultValue:@(-50L)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_defaultFloatExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeFloat
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:71
                             defaultValue:@(51.5)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_defaultDoubleExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeDouble
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:72
                             defaultValue:@(52000)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_defaultBoolExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeBool
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:73
                             defaultValue:@(YES)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_defaultStringExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeString
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:74
                             defaultValue:@"hello"
                      messageOrGroupClass:[NSString class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_defaultBytesExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeBytes
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:75
                             defaultValue:[NSData dataWithBytes:"world" length:5]
                      messageOrGroupClass:[NSData class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_defaultNestedEnumExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeEnum
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:81
                             defaultValue:@(TestAllTypesLite_NestedEnumBAR)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_defaultForeignEnumExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeEnum
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:82
                             defaultValue:@(ForeignEnumLiteFOREIGNLITEBAR)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_defaultImportEnumExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeEnum
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:83
                             defaultValue:@(ImportEnumLiteIMPORTLITEBAR)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_defaultStringPieceExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeString
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:84
                             defaultValue:@"abc"
                      messageOrGroupClass:[NSString class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_defaultCordExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeString
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:85
                             defaultValue:@"123"
                      messageOrGroupClass:[NSString class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_packedInt32ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeInt32
                            extendedClass:[TestPackedExtensionsLite class]
                              fieldNumber:90
                             defaultValue:[PBArray arrayWithValueType:PBArrayValueTypeInt32]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:YES
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_packedInt64ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeInt64
                            extendedClass:[TestPackedExtensionsLite class]
                              fieldNumber:91
                             defaultValue:[PBArray arrayWithValueType:PBArrayValueTypeInt64]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:YES
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_packedUint32ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeUInt32
                            extendedClass:[TestPackedExtensionsLite class]
                              fieldNumber:92
                             defaultValue:[PBArray arrayWithValueType:PBArrayValueTypeUInt32]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:YES
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_packedUint64ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeUInt64
                            extendedClass:[TestPackedExtensionsLite class]
                              fieldNumber:93
                             defaultValue:[PBArray arrayWithValueType:PBArrayValueTypeUInt64]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:YES
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_packedSint32ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeSInt32
                            extendedClass:[TestPackedExtensionsLite class]
                              fieldNumber:94
                             defaultValue:[PBArray arrayWithValueType:PBArrayValueTypeInt32]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:YES
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_packedSint64ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeSInt64
                            extendedClass:[TestPackedExtensionsLite class]
                              fieldNumber:95
                             defaultValue:[PBArray arrayWithValueType:PBArrayValueTypeInt64]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:YES
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_packedFixed32ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeFixed32
                            extendedClass:[TestPackedExtensionsLite class]
                              fieldNumber:96
                             defaultValue:[PBArray arrayWithValueType:PBArrayValueTypeUInt32]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:YES
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_packedFixed64ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeFixed64
                            extendedClass:[TestPackedExtensionsLite class]
                              fieldNumber:97
                             defaultValue:[PBArray arrayWithValueType:PBArrayValueTypeUInt64]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:YES
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_packedSfixed32ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeSFixed32
                            extendedClass:[TestPackedExtensionsLite class]
                              fieldNumber:98
                             defaultValue:[PBArray arrayWithValueType:PBArrayValueTypeInt32]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:YES
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_packedSfixed64ExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeSFixed64
                            extendedClass:[TestPackedExtensionsLite class]
                              fieldNumber:99
                             defaultValue:[PBArray arrayWithValueType:PBArrayValueTypeInt64]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:YES
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_packedFloatExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeFloat
                            extendedClass:[TestPackedExtensionsLite class]
                              fieldNumber:100
                             defaultValue:[PBArray arrayWithValueType:PBArrayValueTypeFloat]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:YES
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_packedDoubleExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeDouble
                            extendedClass:[TestPackedExtensionsLite class]
                              fieldNumber:101
                             defaultValue:[PBArray arrayWithValueType:PBArrayValueTypeDouble]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:YES
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_packedBoolExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeBool
                            extendedClass:[TestPackedExtensionsLite class]
                              fieldNumber:102
                             defaultValue:[PBArray arrayWithValueType:PBArrayValueTypeBool]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:YES
                   isMessageSetWireFormat:NO];
    UnittestLiteRoot_packedEnumExtensionLite =
      [PBExtensionField extensionWithType:PBExtensionTypeEnum
                            extendedClass:[TestPackedExtensionsLite class]
                              fieldNumber:103
                             defaultValue:[[NSArray alloc] init]
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:YES
                                 isPacked:YES
                   isMessageSetWireFormat:NO];
    TestNestedExtensionLite_nestedExtension =
      [PBExtensionField extensionWithType:PBExtensionTypeInt32
                            extendedClass:[TestAllExtensionsLite class]
                              fieldNumber:12345
                             defaultValue:@(0)
                      messageOrGroupClass:[NSNumber class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    TestParsingMergeLite_optionalExt =
      [PBExtensionField extensionWithType:PBExtensionTypeMessage
                            extendedClass:[TestParsingMergeLite class]
                              fieldNumber:1000
                             defaultValue:[TestAllTypesLite defaultInstance]
                      messageOrGroupClass:[TestAllTypesLite class]
                               isRepeated:NO
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    TestParsingMergeLite_repeatedExt =
      [PBExtensionField extensionWithType:PBExtensionTypeMessage
                            extendedClass:[TestParsingMergeLite class]
                              fieldNumber:1001
                             defaultValue:[[NSArray alloc] init]
                      messageOrGroupClass:[TestAllTypesLite class]
                               isRepeated:YES
                                 isPacked:NO
                   isMessageSetWireFormat:NO];
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [UnittestImportLiteRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}

+ (void)registerAllExtensions:(PBMutableExtensionRegistry*)registry {
  [registry addExtension:UnittestLiteRoot_optionalInt32ExtensionLite];
  [registry addExtension:UnittestLiteRoot_optionalInt64ExtensionLite];
  [registry addExtension:UnittestLiteRoot_optionalUint32ExtensionLite];
  [registry addExtension:UnittestLiteRoot_optionalUint64ExtensionLite];
  [registry addExtension:UnittestLiteRoot_optionalSint32ExtensionLite];
  [registry addExtension:UnittestLiteRoot_optionalSint64ExtensionLite];
  [registry addExtension:UnittestLiteRoot_optionalFixed32ExtensionLite];
  [registry addExtension:UnittestLiteRoot_optionalFixed64ExtensionLite];
  [registry addExtension:UnittestLiteRoot_optionalSfixed32ExtensionLite];
  [registry addExtension:UnittestLiteRoot_optionalSfixed64ExtensionLite];
  [registry addExtension:UnittestLiteRoot_optionalFloatExtensionLite];
  [registry addExtension:UnittestLiteRoot_optionalDoubleExtensionLite];
  [registry addExtension:UnittestLiteRoot_optionalBoolExtensionLite];
  [registry addExtension:UnittestLiteRoot_optionalStringExtensionLite];
  [registry addExtension:UnittestLiteRoot_optionalBytesExtensionLite];
  [registry addExtension:UnittestLiteRoot_OptionalGroupExtensionLite];
  [registry addExtension:UnittestLiteRoot_optionalNestedMessageExtensionLite];
  [registry addExtension:UnittestLiteRoot_optionalForeignMessageExtensionLite];
  [registry addExtension:UnittestLiteRoot_optionalImportMessageExtensionLite];
  [registry addExtension:UnittestLiteRoot_optionalNestedEnumExtensionLite];
  [registry addExtension:UnittestLiteRoot_optionalForeignEnumExtensionLite];
  [registry addExtension:UnittestLiteRoot_optionalImportEnumExtensionLite];
  [registry addExtension:UnittestLiteRoot_optionalStringPieceExtensionLite];
  [registry addExtension:UnittestLiteRoot_optionalCordExtensionLite];
  [registry addExtension:UnittestLiteRoot_optionalPublicImportMessageExtensionLite];
  [registry addExtension:UnittestLiteRoot_optionalLazyMessageExtensionLite];
  [registry addExtension:UnittestLiteRoot_repeatedInt32ExtensionLite];
  [registry addExtension:UnittestLiteRoot_repeatedInt64ExtensionLite];
  [registry addExtension:UnittestLiteRoot_repeatedUint32ExtensionLite];
  [registry addExtension:UnittestLiteRoot_repeatedUint64ExtensionLite];
  [registry addExtension:UnittestLiteRoot_repeatedSint32ExtensionLite];
  [registry addExtension:UnittestLiteRoot_repeatedSint64ExtensionLite];
  [registry addExtension:UnittestLiteRoot_repeatedFixed32ExtensionLite];
  [registry addExtension:UnittestLiteRoot_repeatedFixed64ExtensionLite];
  [registry addExtension:UnittestLiteRoot_repeatedSfixed32ExtensionLite];
  [registry addExtension:UnittestLiteRoot_repeatedSfixed64ExtensionLite];
  [registry addExtension:UnittestLiteRoot_repeatedFloatExtensionLite];
  [registry addExtension:UnittestLiteRoot_repeatedDoubleExtensionLite];
  [registry addExtension:UnittestLiteRoot_repeatedBoolExtensionLite];
  [registry addExtension:UnittestLiteRoot_repeatedStringExtensionLite];
  [registry addExtension:UnittestLiteRoot_repeatedBytesExtensionLite];
  [registry addExtension:UnittestLiteRoot_RepeatedGroupExtensionLite];
  [registry addExtension:UnittestLiteRoot_repeatedNestedMessageExtensionLite];
  [registry addExtension:UnittestLiteRoot_repeatedForeignMessageExtensionLite];
  [registry addExtension:UnittestLiteRoot_repeatedImportMessageExtensionLite];
  [registry addExtension:UnittestLiteRoot_repeatedNestedEnumExtensionLite];
  [registry addExtension:UnittestLiteRoot_repeatedForeignEnumExtensionLite];
  [registry addExtension:UnittestLiteRoot_repeatedImportEnumExtensionLite];
  [registry addExtension:UnittestLiteRoot_repeatedStringPieceExtensionLite];
  [registry addExtension:UnittestLiteRoot_repeatedCordExtensionLite];
  [registry addExtension:UnittestLiteRoot_repeatedLazyMessageExtensionLite];
  [registry addExtension:UnittestLiteRoot_defaultInt32ExtensionLite];
  [registry addExtension:UnittestLiteRoot_defaultInt64ExtensionLite];
  [registry addExtension:UnittestLiteRoot_defaultUint32ExtensionLite];
  [registry addExtension:UnittestLiteRoot_defaultUint64ExtensionLite];
  [registry addExtension:UnittestLiteRoot_defaultSint32ExtensionLite];
  [registry addExtension:UnittestLiteRoot_defaultSint64ExtensionLite];
  [registry addExtension:UnittestLiteRoot_defaultFixed32ExtensionLite];
  [registry addExtension:UnittestLiteRoot_defaultFixed64ExtensionLite];
  [registry addExtension:UnittestLiteRoot_defaultSfixed32ExtensionLite];
  [registry addExtension:UnittestLiteRoot_defaultSfixed64ExtensionLite];
  [registry addExtension:UnittestLiteRoot_defaultFloatExtensionLite];
  [registry addExtension:UnittestLiteRoot_defaultDoubleExtensionLite];
  [registry addExtension:UnittestLiteRoot_defaultBoolExtensionLite];
  [registry addExtension:UnittestLiteRoot_defaultStringExtensionLite];
  [registry addExtension:UnittestLiteRoot_defaultBytesExtensionLite];
  [registry addExtension:UnittestLiteRoot_defaultNestedEnumExtensionLite];
  [registry addExtension:UnittestLiteRoot_defaultForeignEnumExtensionLite];
  [registry addExtension:UnittestLiteRoot_defaultImportEnumExtensionLite];
  [registry addExtension:UnittestLiteRoot_defaultStringPieceExtensionLite];
  [registry addExtension:UnittestLiteRoot_defaultCordExtensionLite];
  [registry addExtension:UnittestLiteRoot_packedInt32ExtensionLite];
  [registry addExtension:UnittestLiteRoot_packedInt64ExtensionLite];
  [registry addExtension:UnittestLiteRoot_packedUint32ExtensionLite];
  [registry addExtension:UnittestLiteRoot_packedUint64ExtensionLite];
  [registry addExtension:UnittestLiteRoot_packedSint32ExtensionLite];
  [registry addExtension:UnittestLiteRoot_packedSint64ExtensionLite];
  [registry addExtension:UnittestLiteRoot_packedFixed32ExtensionLite];
  [registry addExtension:UnittestLiteRoot_packedFixed64ExtensionLite];
  [registry addExtension:UnittestLiteRoot_packedSfixed32ExtensionLite];
  [registry addExtension:UnittestLiteRoot_packedSfixed64ExtensionLite];
  [registry addExtension:UnittestLiteRoot_packedFloatExtensionLite];
  [registry addExtension:UnittestLiteRoot_packedDoubleExtensionLite];
  [registry addExtension:UnittestLiteRoot_packedBoolExtensionLite];
  [registry addExtension:UnittestLiteRoot_packedEnumExtensionLite];
  [registry addExtension:TestNestedExtensionLite_nestedExtension];
  [registry addExtension:TestParsingMergeLite_optionalExt];
  [registry addExtension:TestParsingMergeLite_repeatedExt];
}

+ (PBExtensionField *)optionalInt32ExtensionLite {
  return UnittestLiteRoot_optionalInt32ExtensionLite;
}
+ (PBExtensionField *)optionalInt64ExtensionLite {
  return UnittestLiteRoot_optionalInt64ExtensionLite;
}
+ (PBExtensionField *)optionalUint32ExtensionLite {
  return UnittestLiteRoot_optionalUint32ExtensionLite;
}
+ (PBExtensionField *)optionalUint64ExtensionLite {
  return UnittestLiteRoot_optionalUint64ExtensionLite;
}
+ (PBExtensionField *)optionalSint32ExtensionLite {
  return UnittestLiteRoot_optionalSint32ExtensionLite;
}
+ (PBExtensionField *)optionalSint64ExtensionLite {
  return UnittestLiteRoot_optionalSint64ExtensionLite;
}
+ (PBExtensionField *)optionalFixed32ExtensionLite {
  return UnittestLiteRoot_optionalFixed32ExtensionLite;
}
+ (PBExtensionField *)optionalFixed64ExtensionLite {
  return UnittestLiteRoot_optionalFixed64ExtensionLite;
}
+ (PBExtensionField *)optionalSfixed32ExtensionLite {
  return UnittestLiteRoot_optionalSfixed32ExtensionLite;
}
+ (PBExtensionField *)optionalSfixed64ExtensionLite {
  return UnittestLiteRoot_optionalSfixed64ExtensionLite;
}
+ (PBExtensionField *)optionalFloatExtensionLite {
  return UnittestLiteRoot_optionalFloatExtensionLite;
}
+ (PBExtensionField *)optionalDoubleExtensionLite {
  return UnittestLiteRoot_optionalDoubleExtensionLite;
}
+ (PBExtensionField *)optionalBoolExtensionLite {
  return UnittestLiteRoot_optionalBoolExtensionLite;
}
+ (PBExtensionField *)optionalStringExtensionLite {
  return UnittestLiteRoot_optionalStringExtensionLite;
}
+ (PBExtensionField *)optionalBytesExtensionLite {
  return UnittestLiteRoot_optionalBytesExtensionLite;
}
+ (PBExtensionField *)OptionalGroupExtensionLite {
  return UnittestLiteRoot_OptionalGroupExtensionLite;
}
+ (PBExtensionField *)optionalNestedMessageExtensionLite {
  return UnittestLiteRoot_optionalNestedMessageExtensionLite;
}
+ (PBExtensionField *)optionalForeignMessageExtensionLite {
  return UnittestLiteRoot_optionalForeignMessageExtensionLite;
}
+ (PBExtensionField *)optionalImportMessageExtensionLite {
  return UnittestLiteRoot_optionalImportMessageExtensionLite;
}
+ (PBExtensionField *)optionalNestedEnumExtensionLite {
  return UnittestLiteRoot_optionalNestedEnumExtensionLite;
}
+ (PBExtensionField *)optionalForeignEnumExtensionLite {
  return UnittestLiteRoot_optionalForeignEnumExtensionLite;
}
+ (PBExtensionField *)optionalImportEnumExtensionLite {
  return UnittestLiteRoot_optionalImportEnumExtensionLite;
}
+ (PBExtensionField *)optionalStringPieceExtensionLite {
  return UnittestLiteRoot_optionalStringPieceExtensionLite;
}
+ (PBExtensionField *)optionalCordExtensionLite {
  return UnittestLiteRoot_optionalCordExtensionLite;
}
+ (PBExtensionField *)optionalPublicImportMessageExtensionLite {
  return UnittestLiteRoot_optionalPublicImportMessageExtensionLite;
}
+ (PBExtensionField *)optionalLazyMessageExtensionLite {
  return UnittestLiteRoot_optionalLazyMessageExtensionLite;
}
+ (PBExtensionField *)repeatedInt32ExtensionLite {
  return UnittestLiteRoot_repeatedInt32ExtensionLite;
}
+ (PBExtensionField *)repeatedInt64ExtensionLite {
  return UnittestLiteRoot_repeatedInt64ExtensionLite;
}
+ (PBExtensionField *)repeatedUint32ExtensionLite {
  return UnittestLiteRoot_repeatedUint32ExtensionLite;
}
+ (PBExtensionField *)repeatedUint64ExtensionLite {
  return UnittestLiteRoot_repeatedUint64ExtensionLite;
}
+ (PBExtensionField *)repeatedSint32ExtensionLite {
  return UnittestLiteRoot_repeatedSint32ExtensionLite;
}
+ (PBExtensionField *)repeatedSint64ExtensionLite {
  return UnittestLiteRoot_repeatedSint64ExtensionLite;
}
+ (PBExtensionField *)repeatedFixed32ExtensionLite {
  return UnittestLiteRoot_repeatedFixed32ExtensionLite;
}
+ (PBExtensionField *)repeatedFixed64ExtensionLite {
  return UnittestLiteRoot_repeatedFixed64ExtensionLite;
}
+ (PBExtensionField *)repeatedSfixed32ExtensionLite {
  return UnittestLiteRoot_repeatedSfixed32ExtensionLite;
}
+ (PBExtensionField *)repeatedSfixed64ExtensionLite {
  return UnittestLiteRoot_repeatedSfixed64ExtensionLite;
}
+ (PBExtensionField *)repeatedFloatExtensionLite {
  return UnittestLiteRoot_repeatedFloatExtensionLite;
}
+ (PBExtensionField *)repeatedDoubleExtensionLite {
  return UnittestLiteRoot_repeatedDoubleExtensionLite;
}
+ (PBExtensionField *)repeatedBoolExtensionLite {
  return UnittestLiteRoot_repeatedBoolExtensionLite;
}
+ (PBExtensionField *)repeatedStringExtensionLite {
  return UnittestLiteRoot_repeatedStringExtensionLite;
}
+ (PBExtensionField *)repeatedBytesExtensionLite {
  return UnittestLiteRoot_repeatedBytesExtensionLite;
}
+ (PBExtensionField *)RepeatedGroupExtensionLite {
  return UnittestLiteRoot_RepeatedGroupExtensionLite;
}
+ (PBExtensionField *)repeatedNestedMessageExtensionLite {
  return UnittestLiteRoot_repeatedNestedMessageExtensionLite;
}
+ (PBExtensionField *)repeatedForeignMessageExtensionLite {
  return UnittestLiteRoot_repeatedForeignMessageExtensionLite;
}
+ (PBExtensionField *)repeatedImportMessageExtensionLite {
  return UnittestLiteRoot_repeatedImportMessageExtensionLite;
}
+ (PBExtensionField *)repeatedNestedEnumExtensionLite {
  return UnittestLiteRoot_repeatedNestedEnumExtensionLite;
}
+ (PBExtensionField *)repeatedForeignEnumExtensionLite {
  return UnittestLiteRoot_repeatedForeignEnumExtensionLite;
}
+ (PBExtensionField *)repeatedImportEnumExtensionLite {
  return UnittestLiteRoot_repeatedImportEnumExtensionLite;
}
+ (PBExtensionField *)repeatedStringPieceExtensionLite {
  return UnittestLiteRoot_repeatedStringPieceExtensionLite;
}
+ (PBExtensionField *)repeatedCordExtensionLite {
  return UnittestLiteRoot_repeatedCordExtensionLite;
}
+ (PBExtensionField *)repeatedLazyMessageExtensionLite {
  return UnittestLiteRoot_repeatedLazyMessageExtensionLite;
}
+ (PBExtensionField *)defaultInt32ExtensionLite {
  return UnittestLiteRoot_defaultInt32ExtensionLite;
}
+ (PBExtensionField *)defaultInt64ExtensionLite {
  return UnittestLiteRoot_defaultInt64ExtensionLite;
}
+ (PBExtensionField *)defaultUint32ExtensionLite {
  return UnittestLiteRoot_defaultUint32ExtensionLite;
}
+ (PBExtensionField *)defaultUint64ExtensionLite {
  return UnittestLiteRoot_defaultUint64ExtensionLite;
}
+ (PBExtensionField *)defaultSint32ExtensionLite {
  return UnittestLiteRoot_defaultSint32ExtensionLite;
}
+ (PBExtensionField *)defaultSint64ExtensionLite {
  return UnittestLiteRoot_defaultSint64ExtensionLite;
}
+ (PBExtensionField *)defaultFixed32ExtensionLite {
  return UnittestLiteRoot_defaultFixed32ExtensionLite;
}
+ (PBExtensionField *)defaultFixed64ExtensionLite {
  return UnittestLiteRoot_defaultFixed64ExtensionLite;
}
+ (PBExtensionField *)defaultSfixed32ExtensionLite {
  return UnittestLiteRoot_defaultSfixed32ExtensionLite;
}
+ (PBExtensionField *)defaultSfixed64ExtensionLite {
  return UnittestLiteRoot_defaultSfixed64ExtensionLite;
}
+ (PBExtensionField *)defaultFloatExtensionLite {
  return UnittestLiteRoot_defaultFloatExtensionLite;
}
+ (PBExtensionField *)defaultDoubleExtensionLite {
  return UnittestLiteRoot_defaultDoubleExtensionLite;
}
+ (PBExtensionField *)defaultBoolExtensionLite {
  return UnittestLiteRoot_defaultBoolExtensionLite;
}
+ (PBExtensionField *)defaultStringExtensionLite {
  return UnittestLiteRoot_defaultStringExtensionLite;
}
+ (PBExtensionField *)defaultBytesExtensionLite {
  return UnittestLiteRoot_defaultBytesExtensionLite;
}
+ (PBExtensionField *)defaultNestedEnumExtensionLite {
  return UnittestLiteRoot_defaultNestedEnumExtensionLite;
}
+ (PBExtensionField *)defaultForeignEnumExtensionLite {
  return UnittestLiteRoot_defaultForeignEnumExtensionLite;
}
+ (PBExtensionField *)defaultImportEnumExtensionLite {
  return UnittestLiteRoot_defaultImportEnumExtensionLite;
}
+ (PBExtensionField *)defaultStringPieceExtensionLite {
  return UnittestLiteRoot_defaultStringPieceExtensionLite;
}
+ (PBExtensionField *)defaultCordExtensionLite {
  return UnittestLiteRoot_defaultCordExtensionLite;
}
+ (PBExtensionField *)packedInt32ExtensionLite {
  return UnittestLiteRoot_packedInt32ExtensionLite;
}
+ (PBExtensionField *)packedInt64ExtensionLite {
  return UnittestLiteRoot_packedInt64ExtensionLite;
}
+ (PBExtensionField *)packedUint32ExtensionLite {
  return UnittestLiteRoot_packedUint32ExtensionLite;
}
+ (PBExtensionField *)packedUint64ExtensionLite {
  return UnittestLiteRoot_packedUint64ExtensionLite;
}
+ (PBExtensionField *)packedSint32ExtensionLite {
  return UnittestLiteRoot_packedSint32ExtensionLite;
}
+ (PBExtensionField *)packedSint64ExtensionLite {
  return UnittestLiteRoot_packedSint64ExtensionLite;
}
+ (PBExtensionField *)packedFixed32ExtensionLite {
  return UnittestLiteRoot_packedFixed32ExtensionLite;
}
+ (PBExtensionField *)packedFixed64ExtensionLite {
  return UnittestLiteRoot_packedFixed64ExtensionLite;
}
+ (PBExtensionField *)packedSfixed32ExtensionLite {
  return UnittestLiteRoot_packedSfixed32ExtensionLite;
}
+ (PBExtensionField *)packedSfixed64ExtensionLite {
  return UnittestLiteRoot_packedSfixed64ExtensionLite;
}
+ (PBExtensionField *)packedFloatExtensionLite {
  return UnittestLiteRoot_packedFloatExtensionLite;
}
+ (PBExtensionField *)packedDoubleExtensionLite {
  return UnittestLiteRoot_packedDoubleExtensionLite;
}
+ (PBExtensionField *)packedBoolExtensionLite {
  return UnittestLiteRoot_packedBoolExtensionLite;
}
+ (PBExtensionField *)packedEnumExtensionLite {
  return UnittestLiteRoot_packedEnumExtensionLite;
}

@end

BOOL ForeignEnumLiteIsValidValue(ForeignEnumLite value) {
  switch (value) {
    case ForeignEnumLiteFOREIGNLITEFOO:
    case ForeignEnumLiteFOREIGNLITEBAR:
    case ForeignEnumLiteFOREIGNLITEBAZ:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - TestAllTypesLite

BOOL TestAllTypesLite_NestedEnumIsValidValue(TestAllTypesLite_NestedEnum value) {
  switch (value) {
    case TestAllTypesLite_NestedEnumFOO:
    case TestAllTypesLite_NestedEnumBAR:
    case TestAllTypesLite_NestedEnumBAZ:
      return YES;
    default:
      return NO;
  }
}

@interface TestAllTypesLite ()

@property int32_t optionalInt32;
@property int64_t optionalInt64;
@property uint32_t optionalUint32;
@property uint64_t optionalUint64;
@property int32_t optionalSint32;
@property int64_t optionalSint64;
@property uint32_t optionalFixed32;
@property uint64_t optionalFixed64;
@property int32_t optionalSfixed32;
@property int64_t optionalSfixed64;
@property Float32 optionalFloat;
@property Float64 optionalDouble;
@property BOOL optionalBool;
@property (strong) NSString * optionalString;
@property (strong) NSData * optionalBytes;
@property (strong) TestAllTypesLite_OptionalGroup* OptionalGroup;
@property (strong) TestAllTypesLite_NestedMessage* optionalNestedMessage;
@property (strong) ForeignMessageLite* optionalForeignMessage;
@property (strong) ImportMessageLite* optionalImportMessage;
@property TestAllTypesLite_NestedEnum optionalNestedEnum;
@property ForeignEnumLite optionalForeignEnum;
@property ImportEnumLite optionalImportEnum;
@property (strong) NSString * optionalStringPiece;
@property (strong) NSString * optionalCord;
@property (strong) PublicImportMessageLite* optionalPublicImportMessage;
@property (strong) TestAllTypesLite_NestedMessage* optionalLazyMessage;
@property (strong) PBAppendableArray * repeatedInt32Array;
@property (strong) PBAppendableArray * repeatedInt64Array;
@property (strong) PBAppendableArray * repeatedUint32Array;
@property (strong) PBAppendableArray * repeatedUint64Array;
@property (strong) PBAppendableArray * repeatedSint32Array;
@property (strong) PBAppendableArray * repeatedSint64Array;
@property (strong) PBAppendableArray * repeatedFixed32Array;
@property (strong) PBAppendableArray * repeatedFixed64Array;
@property (strong) PBAppendableArray * repeatedSfixed32Array;
@property (strong) PBAppendableArray * repeatedSfixed64Array;
@property (strong) PBAppendableArray * repeatedFloatArray;
@property (strong) PBAppendableArray * repeatedDoubleArray;
@property (strong) PBAppendableArray * repeatedBoolArray;
@property (strong) NSMutableArray * repeatedStringArray;
@property (strong) NSMutableArray * repeatedBytesArray;
@property (strong) NSMutableArray *RepeatedGroupArray;
@property (strong) NSMutableArray *repeatedNestedMessageArray;
@property (strong) NSMutableArray *repeatedForeignMessageArray;
@property (strong) NSMutableArray *repeatedImportMessageArray;
@property (strong) NSMutableArray *repeatedNestedEnumArray;
@property (strong) NSMutableArray *repeatedForeignEnumArray;
@property (strong) NSMutableArray *repeatedImportEnumArray;
@property (strong) NSMutableArray * repeatedStringPieceArray;
@property (strong) NSMutableArray * repeatedCordArray;
@property (strong) NSMutableArray *repeatedLazyMessageArray;
@property int32_t defaultInt32;
@property int64_t defaultInt64;
@property uint32_t defaultUint32;
@property uint64_t defaultUint64;
@property int32_t defaultSint32;
@property int64_t defaultSint64;
@property uint32_t defaultFixed32;
@property uint64_t defaultFixed64;
@property int32_t defaultSfixed32;
@property int64_t defaultSfixed64;
@property Float32 defaultFloat;
@property Float64 defaultDouble;
@property BOOL defaultBool;
@property (strong) NSString * defaultString;
@property (strong) NSData * defaultBytes;
@property TestAllTypesLite_NestedEnum defaultNestedEnum;
@property ForeignEnumLite defaultForeignEnum;
@property ImportEnumLite defaultImportEnum;
@property (strong) NSString * defaultStringPiece;
@property (strong) NSString * defaultCord;

@end

@implementation TestAllTypesLite {
  BOOL _hasDefaultBool:1;
  BOOL _hasOptionalBool:1;
  BOOL _hasDefaultDouble:1;
  BOOL _hasOptionalDouble:1;
  BOOL _hasDefaultFloat:1;
  BOOL _hasOptionalFloat:1;
  BOOL _hasOptionalInt64:1;
  BOOL _hasDefaultInt64:1;
  BOOL _hasOptionalUint64:1;
  BOOL _hasDefaultUint64:1;
  BOOL _hasOptionalInt32:1;
  BOOL _hasDefaultInt32:1;
  BOOL _hasOptionalFixed64:1;
  BOOL _hasDefaultFixed64:1;
  BOOL _hasOptionalFixed32:1;
  BOOL _hasDefaultFixed32:1;
  BOOL _hasDefaultCord:1;
  BOOL _hasOptionalStringPiece:1;
  BOOL _hasOptionalCord:1;
  BOOL _hasOptionalString:1;
  BOOL _hasDefaultStringPiece:1;
  BOOL _hasDefaultString:1;
  BOOL _hasOptionalGroup:1;
  BOOL _hasOptionalForeignMessage:1;
  BOOL _hasOptionalImportMessage:1;
  BOOL _hasOptionalPublicImportMessage:1;
  BOOL _hasOptionalLazyMessage:1;
  BOOL _hasOptionalNestedMessage:1;
  BOOL _hasOptionalBytes:1;
  BOOL _hasDefaultBytes:1;
  BOOL _hasDefaultUint32:1;
  BOOL _hasOptionalUint32:1;
  BOOL _hasOptionalNestedEnum:1;
  BOOL _hasOptionalForeignEnum:1;
  BOOL _hasOptionalImportEnum:1;
  BOOL _hasDefaultImportEnum:1;
  BOOL _hasDefaultForeignEnum:1;
  BOOL _hasDefaultNestedEnum:1;
  BOOL _hasOptionalSfixed32:1;
  BOOL _hasDefaultSfixed32:1;
  BOOL _hasOptionalSfixed64:1;
  BOOL _hasDefaultSfixed64:1;
  BOOL _hasOptionalSint32:1;
  BOOL _hasDefaultSint32:1;
  BOOL _hasOptionalSint64:1;
  BOOL _hasDefaultSint64:1;
  PBAppendableArray *_repeatedBoolArray;
  PBAppendableArray *_repeatedDoubleArray;
  PBAppendableArray *_repeatedFloatArray;
  PBAppendableArray *_repeatedInt64Array;
  PBAppendableArray *_repeatedUint64Array;
  PBAppendableArray *_repeatedInt32Array;
  PBAppendableArray *_repeatedFixed64Array;
  PBAppendableArray *_repeatedFixed32Array;
  NSMutableArray *_repeatedStringArray;
  NSMutableArray *_repeatedStringPieceArray;
  NSMutableArray *_repeatedCordArray;
  NSMutableArray *_RepeatedGroupArray;
  NSMutableArray *_repeatedLazyMessageArray;
  NSMutableArray *_repeatedImportMessageArray;
  NSMutableArray *_repeatedForeignMessageArray;
  NSMutableArray *_repeatedNestedMessageArray;
  NSMutableArray *_repeatedBytesArray;
  PBAppendableArray *_repeatedUint32Array;
  NSMutableArray * _repeatedImportEnumArray;
  NSMutableArray * _repeatedForeignEnumArray;
  NSMutableArray * _repeatedNestedEnumArray;
  PBAppendableArray *_repeatedSfixed32Array;
  PBAppendableArray *_repeatedSfixed64Array;
  PBAppendableArray *_repeatedSint32Array;
  PBAppendableArray *_repeatedSint64Array;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
    _optionalInt32 = 0;
    _optionalInt64 = 0L;
    _optionalUint32 = 0;
    _optionalUint64 = 0L;
    _optionalSint32 = 0;
    _optionalSint64 = 0L;
    _optionalFixed32 = 0;
    _optionalFixed64 = 0L;
    _optionalSfixed32 = 0;
    _optionalSfixed64 = 0L;
    _optionalFloat = 0;
    _optionalDouble = 0;
    _optionalBool = NO;
    _optionalString = @"";
    _optionalBytes = [NSData data];
    _OptionalGroup = [TestAllTypesLite_OptionalGroup defaultInstance];
    _optionalNestedMessage = [TestAllTypesLite_NestedMessage defaultInstance];
    _optionalForeignMessage = [ForeignMessageLite defaultInstance];
    _optionalImportMessage = [ImportMessageLite defaultInstance];
    _optionalNestedEnum = TestAllTypesLite_NestedEnumFOO;
    _optionalForeignEnum = ForeignEnumLiteFOREIGNLITEFOO;
    _optionalImportEnum = ImportEnumLiteIMPORTLITEFOO;
    _optionalStringPiece = @"";
    _optionalCord = @"";
    _optionalPublicImportMessage = [PublicImportMessageLite defaultInstance];
    _optionalLazyMessage = [TestAllTypesLite_NestedMessage defaultInstance];
    _defaultInt32 = 41;
    _defaultInt64 = 42L;
    _defaultUint32 = 43;
    _defaultUint64 = 44L;
    _defaultSint32 = -45;
    _defaultSint64 = 46L;
    _defaultFixed32 = 47;
    _defaultFixed64 = 48L;
    _defaultSfixed32 = 49;
    _defaultSfixed64 = -50L;
    _defaultFloat = 51.5;
    _defaultDouble = 52000;
    _defaultBool = YES;
    _defaultString = @"hello";
    _defaultBytes = [NSData dataWithBytes:"world" length:5];
    _defaultNestedEnum = TestAllTypesLite_NestedEnumBAR;
    _defaultForeignEnum = ForeignEnumLiteFOREIGNLITEBAR;
    _defaultImportEnum = ImportEnumLiteIMPORTLITEBAR;
    _defaultStringPiece = @"abc";
    _defaultCord = @"123";
  return self;
}

+ (instancetype)defaultInstance {
  static id _sharedObject = nil;
  static dispatch_once_t onceToken;
  dispatch_once(&onceToken, ^{
    _sharedObject = [[self alloc] init];
  });
  return _sharedObject;
}

- (BOOL)hasOptionalInt32 {
  return !!_hasOptionalInt32;
}
- (void)setHasOptionalInt32:(BOOL)value {
  _hasOptionalInt32 = !!value;
}
- (BOOL)hasOptionalInt64 {
  return !!_hasOptionalInt64;
}
- (void)setHasOptionalInt64:(BOOL)value {
  _hasOptionalInt64 = !!value;
}
- (BOOL)hasOptionalUint32 {
  return !!_hasOptionalUint32;
}
- (void)setHasOptionalUint32:(BOOL)value {
  _hasOptionalUint32 = !!value;
}
- (BOOL)hasOptionalUint64 {
  return !!_hasOptionalUint64;
}
- (void)setHasOptionalUint64:(BOOL)value {
  _hasOptionalUint64 = !!value;
}
- (BOOL)hasOptionalSint32 {
  return !!_hasOptionalSint32;
}
- (void)setHasOptionalSint32:(BOOL)value {
  _hasOptionalSint32 = !!value;
}
- (BOOL)hasOptionalSint64 {
  return !!_hasOptionalSint64;
}
- (void)setHasOptionalSint64:(BOOL)value {
  _hasOptionalSint64 = !!value;
}
- (BOOL)hasOptionalFixed32 {
  return !!_hasOptionalFixed32;
}
- (void)setHasOptionalFixed32:(BOOL)value {
  _hasOptionalFixed32 = !!value;
}
- (BOOL)hasOptionalFixed64 {
  return !!_hasOptionalFixed64;
}
- (void)setHasOptionalFixed64:(BOOL)value {
  _hasOptionalFixed64 = !!value;
}
- (BOOL)hasOptionalSfixed32 {
  return !!_hasOptionalSfixed32;
}
- (void)setHasOptionalSfixed32:(BOOL)value {
  _hasOptionalSfixed32 = !!value;
}
- (BOOL)hasOptionalSfixed64 {
  return !!_hasOptionalSfixed64;
}
- (void)setHasOptionalSfixed64:(BOOL)value {
  _hasOptionalSfixed64 = !!value;
}
- (BOOL)hasOptionalFloat {
  return !!_hasOptionalFloat;
}
- (void)setHasOptionalFloat:(BOOL)value {
  _hasOptionalFloat = !!value;
}
- (BOOL)hasOptionalDouble {
  return !!_hasOptionalDouble;
}
- (void)setHasOptionalDouble:(BOOL)value {
  _hasOptionalDouble = !!value;
}
- (BOOL)hasOptionalBool {
  return !!_hasOptionalBool;
}
- (void)setHasOptionalBool:(BOOL)value {
  _hasOptionalBool = !!value;
}
- (BOOL)hasOptionalString {
  return !!_hasOptionalString;
}
- (void)setHasOptionalString:(BOOL)value {
  _hasOptionalString = !!value;
}
- (BOOL)hasOptionalBytes {
  return !!_hasOptionalBytes;
}
- (void)setHasOptionalBytes:(BOOL)value {
  _hasOptionalBytes = !!value;
}
- (BOOL)hasOptionalGroup {
  return !!_hasOptionalGroup;
}
- (void)setHasOptionalGroup:(BOOL)value {
  _hasOptionalGroup = !!value;
}

- (BOOL)hasOptionalNestedMessage {
  return !!_hasOptionalNestedMessage;
}
- (void)setHasOptionalNestedMessage:(BOOL)value {
  _hasOptionalNestedMessage = !!value;
}

- (BOOL)hasOptionalForeignMessage {
  return !!_hasOptionalForeignMessage;
}
- (void)setHasOptionalForeignMessage:(BOOL)value {
  _hasOptionalForeignMessage = !!value;
}

- (BOOL)hasOptionalImportMessage {
  return !!_hasOptionalImportMessage;
}
- (void)setHasOptionalImportMessage:(BOOL)value {
  _hasOptionalImportMessage = !!value;
}

- (BOOL)hasOptionalNestedEnum {
  return !!_hasOptionalNestedEnum;
}
- (void)setHasOptionalNestedEnum:(BOOL)value {
  _hasOptionalNestedEnum = !!value;
}
- (BOOL)hasOptionalForeignEnum {
  return !!_hasOptionalForeignEnum;
}
- (void)setHasOptionalForeignEnum:(BOOL)value {
  _hasOptionalForeignEnum = !!value;
}
- (BOOL)hasOptionalImportEnum {
  return !!_hasOptionalImportEnum;
}
- (void)setHasOptionalImportEnum:(BOOL)value {
  _hasOptionalImportEnum = !!value;
}
- (BOOL)hasOptionalStringPiece {
  return !!_hasOptionalStringPiece;
}
- (void)setHasOptionalStringPiece:(BOOL)value {
  _hasOptionalStringPiece = !!value;
}
- (BOOL)hasOptionalCord {
  return !!_hasOptionalCord;
}
- (void)setHasOptionalCord:(BOOL)value {
  _hasOptionalCord = !!value;
}
- (BOOL)hasOptionalPublicImportMessage {
  return !!_hasOptionalPublicImportMessage;
}
- (void)setHasOptionalPublicImportMessage:(BOOL)value {
  _hasOptionalPublicImportMessage = !!value;
}

- (BOOL)hasOptionalLazyMessage {
  return !!_hasOptionalLazyMessage;
}
- (void)setHasOptionalLazyMessage:(BOOL)value {
  _hasOptionalLazyMessage = !!value;
}

@dynamic repeatedInt32;
@dynamic repeatedInt64;
@dynamic repeatedUint32;
@dynamic repeatedUint64;
@dynamic repeatedSint32;
@dynamic repeatedSint64;
@dynamic repeatedFixed32;
@dynamic repeatedFixed64;
@dynamic repeatedSfixed32;
@dynamic repeatedSfixed64;
@dynamic repeatedFloat;
@dynamic repeatedDouble;
@dynamic repeatedBool;
@dynamic repeatedString;
@dynamic repeatedBytes;
@dynamic RepeatedGroup;
@dynamic repeatedNestedMessage;
@dynamic repeatedForeignMessage;
@dynamic repeatedImportMessage;
@dynamic repeatedNestedEnum;
@dynamic repeatedForeignEnum;
@dynamic repeatedImportEnum;
@dynamic repeatedStringPiece;
@dynamic repeatedCord;
@dynamic repeatedLazyMessage;
- (BOOL)hasDefaultInt32 {
  return !!_hasDefaultInt32;
}
- (void)setHasDefaultInt32:(BOOL)value {
  _hasDefaultInt32 = !!value;
}
- (BOOL)hasDefaultInt64 {
  return !!_hasDefaultInt64;
}
- (void)setHasDefaultInt64:(BOOL)value {
  _hasDefaultInt64 = !!value;
}
- (BOOL)hasDefaultUint32 {
  return !!_hasDefaultUint32;
}
- (void)setHasDefaultUint32:(BOOL)value {
  _hasDefaultUint32 = !!value;
}
- (BOOL)hasDefaultUint64 {
  return !!_hasDefaultUint64;
}
- (void)setHasDefaultUint64:(BOOL)value {
  _hasDefaultUint64 = !!value;
}
- (BOOL)hasDefaultSint32 {
  return !!_hasDefaultSint32;
}
- (void)setHasDefaultSint32:(BOOL)value {
  _hasDefaultSint32 = !!value;
}
- (BOOL)hasDefaultSint64 {
  return !!_hasDefaultSint64;
}
- (void)setHasDefaultSint64:(BOOL)value {
  _hasDefaultSint64 = !!value;
}
- (BOOL)hasDefaultFixed32 {
  return !!_hasDefaultFixed32;
}
- (void)setHasDefaultFixed32:(BOOL)value {
  _hasDefaultFixed32 = !!value;
}
- (BOOL)hasDefaultFixed64 {
  return !!_hasDefaultFixed64;
}
- (void)setHasDefaultFixed64:(BOOL)value {
  _hasDefaultFixed64 = !!value;
}
- (BOOL)hasDefaultSfixed32 {
  return !!_hasDefaultSfixed32;
}
- (void)setHasDefaultSfixed32:(BOOL)value {
  _hasDefaultSfixed32 = !!value;
}
- (BOOL)hasDefaultSfixed64 {
  return !!_hasDefaultSfixed64;
}
- (void)setHasDefaultSfixed64:(BOOL)value {
  _hasDefaultSfixed64 = !!value;
}
- (BOOL)hasDefaultFloat {
  return !!_hasDefaultFloat;
}
- (void)setHasDefaultFloat:(BOOL)value {
  _hasDefaultFloat = !!value;
}
- (BOOL)hasDefaultDouble {
  return !!_hasDefaultDouble;
}
- (void)setHasDefaultDouble:(BOOL)value {
  _hasDefaultDouble = !!value;
}
- (BOOL)hasDefaultBool {
  return !!_hasDefaultBool;
}
- (void)setHasDefaultBool:(BOOL)value {
  _hasDefaultBool = !!value;
}
- (BOOL)hasDefaultString {
  return !!_hasDefaultString;
}
- (void)setHasDefaultString:(BOOL)value {
  _hasDefaultString = !!value;
}
- (BOOL)hasDefaultBytes {
  return !!_hasDefaultBytes;
}
- (void)setHasDefaultBytes:(BOOL)value {
  _hasDefaultBytes = !!value;
}
- (BOOL)hasDefaultNestedEnum {
  return !!_hasDefaultNestedEnum;
}
- (void)setHasDefaultNestedEnum:(BOOL)value {
  _hasDefaultNestedEnum = !!value;
}
- (BOOL)hasDefaultForeignEnum {
  return !!_hasDefaultForeignEnum;
}
- (void)setHasDefaultForeignEnum:(BOOL)value {
  _hasDefaultForeignEnum = !!value;
}
- (BOOL)hasDefaultImportEnum {
  return !!_hasDefaultImportEnum;
}
- (void)setHasDefaultImportEnum:(BOOL)value {
  _hasDefaultImportEnum = !!value;
}
- (BOOL)hasDefaultStringPiece {
  return !!_hasDefaultStringPiece;
}
- (void)setHasDefaultStringPiece:(BOOL)value {
  _hasDefaultStringPiece = !!value;
}
- (BOOL)hasDefaultCord {
  return !!_hasDefaultCord;
}
- (void)setHasDefaultCord:(BOOL)value {
  _hasDefaultCord = !!value;
}

- (PBArray *)repeatedInt32 {
  return _repeatedInt32Array;
}
- (int32_t)repeatedInt32AtIndex:(NSUInteger)index {
  return [_repeatedInt32Array int32AtIndex:index];
}
- (PBArray *)repeatedInt64 {
  return _repeatedInt64Array;
}
- (int64_t)repeatedInt64AtIndex:(NSUInteger)index {
  return [_repeatedInt64Array int64AtIndex:index];
}
- (PBArray *)repeatedUint32 {
  return _repeatedUint32Array;
}
- (uint32_t)repeatedUint32AtIndex:(NSUInteger)index {
  return [_repeatedUint32Array uint32AtIndex:index];
}
- (PBArray *)repeatedUint64 {
  return _repeatedUint64Array;
}
- (uint64_t)repeatedUint64AtIndex:(NSUInteger)index {
  return [_repeatedUint64Array uint64AtIndex:index];
}
- (PBArray *)repeatedSint32 {
  return _repeatedSint32Array;
}
- (int32_t)repeatedSint32AtIndex:(NSUInteger)index {
  return [_repeatedSint32Array int32AtIndex:index];
}
- (PBArray *)repeatedSint64 {
  return _repeatedSint64Array;
}
- (int64_t)repeatedSint64AtIndex:(NSUInteger)index {
  return [_repeatedSint64Array int64AtIndex:index];
}
- (PBArray *)repeatedFixed32 {
  return _repeatedFixed32Array;
}
- (uint32_t)repeatedFixed32AtIndex:(NSUInteger)index {
  return [_repeatedFixed32Array uint32AtIndex:index];
}
- (PBArray *)repeatedFixed64 {
  return _repeatedFixed64Array;
}
- (uint64_t)repeatedFixed64AtIndex:(NSUInteger)index {
  return [_repeatedFixed64Array uint64AtIndex:index];
}
- (PBArray *)repeatedSfixed32 {
  return _repeatedSfixed32Array;
}
- (int32_t)repeatedSfixed32AtIndex:(NSUInteger)index {
  return [_repeatedSfixed32Array int32AtIndex:index];
}
- (PBArray *)repeatedSfixed64 {
  return _repeatedSfixed64Array;
}
- (int64_t)repeatedSfixed64AtIndex:(NSUInteger)index {
  return [_repeatedSfixed64Array int64AtIndex:index];
}
- (PBArray *)repeatedFloat {
  return _repeatedFloatArray;
}
- (Float32)repeatedFloatAtIndex:(NSUInteger)index {
  return [_repeatedFloatArray floatAtIndex:index];
}
- (PBArray *)repeatedDouble {
  return _repeatedDoubleArray;
}
- (Float64)repeatedDoubleAtIndex:(NSUInteger)index {
  return [_repeatedDoubleArray doubleAtIndex:index];
}
- (PBArray *)repeatedBool {
  return _repeatedBoolArray;
}
- (BOOL)repeatedBoolAtIndex:(NSUInteger)index {
  return [_repeatedBoolArray boolAtIndex:index];
}
- (NSArray *)repeatedString {
  return _repeatedStringArray;
}
- (NSString *)repeatedStringAtIndex:(NSUInteger)index {
  return _repeatedStringArray[index];
}
- (NSArray *)repeatedBytes {
  return _repeatedBytesArray;
}
- (NSData *)repeatedBytesAtIndex:(NSUInteger)index {
  return _repeatedBytesArray[index];
}
- (NSArray *)RepeatedGroup {
  return _RepeatedGroupArray;
}
- (TestAllTypesLite_RepeatedGroup*)RepeatedGroupAtIndex:(NSUInteger)index {
  return _RepeatedGroupArray[index];
}
- (NSArray *)repeatedNestedMessage {
  return _repeatedNestedMessageArray;
}
- (TestAllTypesLite_NestedMessage*)repeatedNestedMessageAtIndex:(NSUInteger)index {
  return _repeatedNestedMessageArray[index];
}
- (NSArray *)repeatedForeignMessage {
  return _repeatedForeignMessageArray;
}
- (ForeignMessageLite*)repeatedForeignMessageAtIndex:(NSUInteger)index {
  return _repeatedForeignMessageArray[index];
}
- (NSArray *)repeatedImportMessage {
  return _repeatedImportMessageArray;
}
- (ImportMessageLite*)repeatedImportMessageAtIndex:(NSUInteger)index {
  return _repeatedImportMessageArray[index];
}
- (NSArray *)repeatedNestedEnum {
  return _repeatedNestedEnumArray;
}
- (TestAllTypesLite_NestedEnum)repeatedNestedEnumAtIndex:(NSUInteger)index {
  NSNumber *value = _repeatedNestedEnumArray[index];
  return value.intValue;}
- (NSArray *)repeatedForeignEnum {
  return _repeatedForeignEnumArray;
}
- (ForeignEnumLite)repeatedForeignEnumAtIndex:(NSUInteger)index {
  NSNumber *value = _repeatedForeignEnumArray[index];
  return value.intValue;}
- (NSArray *)repeatedImportEnum {
  return _repeatedImportEnumArray;
}
- (ImportEnumLite)repeatedImportEnumAtIndex:(NSUInteger)index {
  NSNumber *value = _repeatedImportEnumArray[index];
  return value.intValue;}
- (NSArray *)repeatedStringPiece {
  return _repeatedStringPieceArray;
}
- (NSString *)repeatedStringPieceAtIndex:(NSUInteger)index {
  return _repeatedStringPieceArray[index];
}
- (NSArray *)repeatedCord {
  return _repeatedCordArray;
}
- (NSString *)repeatedCordAtIndex:(NSUInteger)index {
  return _repeatedCordArray[index];
}
- (NSArray *)repeatedLazyMessage {
  return _repeatedLazyMessageArray;
}
- (TestAllTypesLite_NestedMessage*)repeatedLazyMessageAtIndex:(NSUInteger)index {
  return _repeatedLazyMessageArray[index];
}

- (BOOL)isInitialized {
  return YES;
}

- (void)writeToCodedOutputStream:(PBCodedOutputStream*)output {
  if (self.hasOptionalInt32) {
    [output writeInt32:1 value:self.optionalInt32];
  }
  if (self.hasOptionalInt64) {
    [output writeInt64:2 value:self.optionalInt64];
  }
  if (self.hasOptionalUint32) {
    [output writeUInt32:3 value:self.optionalUint32];
  }
  if (self.hasOptionalUint64) {
    [output writeUInt64:4 value:self.optionalUint64];
  }
  if (self.hasOptionalSint32) {
    [output writeSInt32:5 value:self.optionalSint32];
  }
  if (self.hasOptionalSint64) {
    [output writeSInt64:6 value:self.optionalSint64];
  }
  if (self.hasOptionalFixed32) {
    [output writeFixed32:7 value:self.optionalFixed32];
  }
  if (self.hasOptionalFixed64) {
    [output writeFixed64:8 value:self.optionalFixed64];
  }
  if (self.hasOptionalSfixed32) {
    [output writeSFixed32:9 value:self.optionalSfixed32];
  }
  if (self.hasOptionalSfixed64) {
    [output writeSFixed64:10 value:self.optionalSfixed64];
  }
  if (self.hasOptionalFloat) {
    [output writeFloat:11 value:self.optionalFloat];
  }
  if (self.hasOptionalDouble) {
    [output writeDouble:12 value:self.optionalDouble];
  }
  if (self.hasOptionalBool) {
    [output writeBool:13 value:self.optionalBool];
  }
  if (self.hasOptionalString) {
    [output writeString:14 value:self.optionalString];
  }
  if (self.hasOptionalBytes) {
    [output writeData:15 value:self.optionalBytes];
  }
  if (self.hasOptionalGroup) {
    [output writeGroup:16 value:self.OptionalGroup];
  }
  if (self.hasOptionalNestedMessage) {
    [output writeMessage:18 value:self.optionalNestedMessage];
  }
  if (self.hasOptionalForeignMessage) {
    [output writeMessage:19 value:self.optionalForeignMessage];
  }
  if (self.hasOptionalImportMessage) {
    [output writeMessage:20 value:self.optionalImportMessage];
  }
  if (self.hasOptionalNestedEnum) {
    [output writeEnum:21 value:self.optionalNestedEnum];
  }
  if (self.hasOptionalForeignEnum) {
    [output writeEnum:22 value:self.optionalForeignEnum];
  }
  if (self.hasOptionalImportEnum) {
    [output writeEnum:23 value:self.optionalImportEnum];
  }
  if (self.hasOptionalStringPiece) {
    [output writeString:24 value:self.optionalStringPiece];
  }
  if (self.hasOptionalCord) {
    [output writeString:25 value:self.optionalCord];
  }
  if (self.hasOptionalPublicImportMessage) {
    [output writeMessage:26 value:self.optionalPublicImportMessage];
  }
  if (self.hasOptionalLazyMessage) {
    [output writeMessage:27 value:self.optionalLazyMessage];
  }
  const NSUInteger repeatedInt32ArrayCount = self.repeatedInt32Array.count;
  if (repeatedInt32ArrayCount > 0) {
    const int32_t *values = (const int32_t *)self.repeatedInt32Array.data;
    for (NSUInteger i = 0; i < repeatedInt32ArrayCount; ++i) {
      [output writeInt32:31 value:values[i]];
    }
  }
  const NSUInteger repeatedInt64ArrayCount = self.repeatedInt64Array.count;
  if (repeatedInt64ArrayCount > 0) {
    const int64_t *values = (const int64_t *)self.repeatedInt64Array.data;
    for (NSUInteger i = 0; i < repeatedInt64ArrayCount; ++i) {
      [output writeInt64:32 value:values[i]];
    }
  }
  const NSUInteger repeatedUint32ArrayCount = self.repeatedUint32Array.count;
  if (repeatedUint32ArrayCount > 0) {
    const uint32_t *values = (const uint32_t *)self.repeatedUint32Array.data;
    for (NSUInteger i = 0; i < repeatedUint32ArrayCount; ++i) {
      [output writeUInt32:33 value:values[i]];
    }
  }
  const NSUInteger repeatedUint64ArrayCount = self.repeatedUint64Array.count;
  if (repeatedUint64ArrayCount > 0) {
    const uint64_t *values = (const uint64_t *)self.repeatedUint64Array.data;
    for (NSUInteger i = 0; i < repeatedUint64ArrayCount; ++i) {
      [output writeUInt64:34 value:values[i]];
    }
  }
  const NSUInteger repeatedSint32ArrayCount = self.repeatedSint32Array.count;
  if (repeatedSint32ArrayCount > 0) {
    const int32_t *values = (const int32_t *)self.repeatedSint32Array.data;
    for (NSUInteger i = 0; i < repeatedSint32ArrayCount; ++i) {
      [output writeSInt32:35 value:values[i]];
    }
  }
  const NSUInteger repeatedSint64ArrayCount = self.repeatedSint64Array.count;
  if (repeatedSint64ArrayCount > 0) {
    const int64_t *values = (const int64_t *)self.repeatedSint64Array.data;
    for (NSUInteger i = 0; i < repeatedSint64ArrayCount; ++i) {
      [output writeSInt64:36 value:values[i]];
    }
  }
  const NSUInteger repeatedFixed32ArrayCount = self.repeatedFixed32Array.count;
  if (repeatedFixed32ArrayCount > 0) {
    const uint32_t *values = (const uint32_t *)self.repeatedFixed32Array.data;
    for (NSUInteger i = 0; i < repeatedFixed32ArrayCount; ++i) {
      [output writeFixed32:37 value:values[i]];
    }
  }
  const NSUInteger repeatedFixed64ArrayCount = self.repeatedFixed64Array.count;
  if (repeatedFixed64ArrayCount > 0) {
    const uint64_t *values = (const uint64_t *)self.repeatedFixed64Array.data;
    for (NSUInteger i = 0; i < repeatedFixed64ArrayCount; ++i) {
      [output writeFixed64:38 value:values[i]];
    }
  }
  const NSUInteger repeatedSfixed32ArrayCount = self.repeatedSfixed32Array.count;
  if (repeatedSfixed32ArrayCount > 0) {
    const int32_t *values = (const int32_t *)self.repeatedSfixed32Array.data;
    for (NSUInteger i = 0; i < repeatedSfixed32ArrayCount; ++i) {
      [output writeSFixed32:39 value:values[i]];
    }
  }
  const NSUInteger repeatedSfixed64ArrayCount = self.repeatedSfixed64Array.count;
  if (repeatedSfixed64ArrayCount > 0) {
    const int64_t *values = (const int64_t *)self.repeatedSfixed64Array.data;
    for (NSUInteger i = 0; i < repeatedSfixed64ArrayCount; ++i) {
      [output writeSFixed64:40 value:values[i]];
    }
  }
  const NSUInteger repeatedFloatArrayCount = self.repeatedFloatArray.count;
  if (repeatedFloatArrayCount > 0) {
    const Float32 *values = (const Float32 *)self.repeatedFloatArray.data;
    for (NSUInteger i = 0; i < repeatedFloatArrayCount; ++i) {
      [output writeFloat:41 value:values[i]];
    }
  }
  const NSUInteger repeatedDoubleArrayCount = self.repeatedDoubleArray.count;
  if (repeatedDoubleArrayCount > 0) {
    const Float64 *values = (const Float64 *)self.repeatedDoubleArray.data;
    for (NSUInteger i = 0; i < repeatedDoubleArrayCount; ++i) {
      [output writeDouble:42 value:values[i]];
    }
  }
  const NSUInteger repeatedBoolArrayCount = self.repeatedBoolArray.count;
  if (repeatedBoolArrayCount > 0) {
    const BOOL *values = (const BOOL *)self.repeatedBoolArray.data;
    for (NSUInteger i = 0; i < repeatedBoolArrayCount; ++i) {
      [output writeBool:43 value:values[i]];
    }
  }
  for (NSString * value in self.repeatedStringArray) {
    [output writeString:44 value:value];
  }
  for (NSData * value in self.repeatedBytesArray) {
    [output writeData:45 value:value];
  }
  for (TestAllTypesLite_RepeatedGroup *element in self.RepeatedGroupArray) {
    [output writeGroup:46 value:element];
  }
  for (TestAllTypesLite_NestedMessage *element in self.repeatedNestedMessageArray) {
    [output writeMessage:48 value:element];
  }
  for (ForeignMessageLite *element in self.repeatedForeignMessageArray) {
    [output writeMessage:49 value:element];
  }
  for (ImportMessageLite *element in self.repeatedImportMessageArray) {
    [output writeMessage:50 value:element];
  }
  for (NSNumber *element in self.repeatedNestedEnumArray) {
    [output writeEnum:51 value:element.intValue];
  }
  for (NSNumber *element in self.repeatedForeignEnumArray) {
    [output writeEnum:52 value:element.intValue];
  }
  for (NSNumber *element in self.repeatedImportEnumArray) {
    [output writeEnum:53 value:element.intValue];
  }
  for (NSString * value in self.repeatedStringPieceArray) {
    [output writeString:54 value:value];
  }
  for (NSString * value in self.repeatedCordArray) {
    [output writeString:55 value:value];
  }
  for (TestAllTypesLite_NestedMessage *element in self.repeatedLazyMessageArray) {
    [output writeMessage:57 value:element];
  }
  if (self.hasDefaultInt32) {
    [output writeInt32:61 value:self.defaultInt32];
  }
  if (self.hasDefaultInt64) {
    [output writeInt64:62 value:self.defaultInt64];
  }
  if (self.hasDefaultUint32) {
    [output writeUInt32:63 value:self.defaultUint32];
  }
  if (self.hasDefaultUint64) {
    [output writeUInt64:64 value:self.defaultUint64];
  }
  if (self.hasDefaultSint32) {
    [output writeSInt32:65 value:self.defaultSint32];
  }
  if (self.hasDefaultSint64) {
    [output writeSInt64:66 value:self.defaultSint64];
  }
  if (self.hasDefaultFixed32) {
    [output writeFixed32:67 value:self.defaultFixed32];
  }
  if (self.hasDefaultFixed64) {
    [output writeFixed64:68 value:self.defaultFixed64];
  }
  if (self.hasDefaultSfixed32) {
    [output writeSFixed32:69 value:self.defaultSfixed32];
  }
  if (self.hasDefaultSfixed64) {
    [output writeSFixed64:70 value:self.defaultSfixed64];
  }
  if (self.hasDefaultFloat) {
    [output writeFloat:71 value:self.defaultFloat];
  }
  if (self.hasDefaultDouble) {
    [output writeDouble:72 value:self.defaultDouble];
  }
  if (self.hasDefaultBool) {
    [output writeBool:73 value:self.defaultBool];
  }
  if (self.hasDefaultString) {
    [output writeString:74 value:self.defaultString];
  }
  if (self.hasDefaultBytes) {
    [output writeData:75 value:self.defaultBytes];
  }
  if (self.hasDefaultNestedEnum) {
    [output writeEnum:81 value:self.defaultNestedEnum];
  }
  if (self.hasDefaultForeignEnum) {
    [output writeEnum:82 value:self.defaultForeignEnum];
  }
  if (self.hasDefaultImportEnum) {
    [output writeEnum:83 value:self.defaultImportEnum];
  }
  if (self.hasDefaultStringPiece) {
    [output writeString:84 value:self.defaultStringPiece];
  }
  if (self.hasDefaultCord) {
    [output writeString:85 value:self.defaultCord];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t)serializedSize {
  int32_t size_ = _cachedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasOptionalInt32) {
    size_ += computeInt32Size(1, self.optionalInt32);
  }
  if (self.hasOptionalInt64) {
    size_ += computeInt64Size(2, self.optionalInt64);
  }
  if (self.hasOptionalUint32) {
    size_ += computeUInt32Size(3, self.optionalUint32);
  }
  if (self.hasOptionalUint64) {
    size_ += computeUInt64Size(4, self.optionalUint64);
  }
  if (self.hasOptionalSint32) {
    size_ += computeSInt32Size(5, self.optionalSint32);
  }
  if (self.hasOptionalSint64) {
    size_ += computeSInt64Size(6, self.optionalSint64);
  }
  if (self.hasOptionalFixed32) {
    size_ += computeFixed32Size(7, self.optionalFixed32);
  }
  if (self.hasOptionalFixed64) {
    size_ += computeFixed64Size(8, self.optionalFixed64);
  }
  if (self.hasOptionalSfixed32) {
    size_ += computeSFixed32Size(9, self.optionalSfixed32);
  }
  if (self.hasOptionalSfixed64) {
    size_ += computeSFixed64Size(10, self.optionalSfixed64);
  }
  if (self.hasOptionalFloat) {
    size_ += computeFloatSize(11, self.optionalFloat);
  }
  if (self.hasOptionalDouble) {
    size_ += computeDoubleSize(12, self.optionalDouble);
  }
  if (self.hasOptionalBool) {
    size_ += computeBoolSize(13, self.optionalBool);
  }
  if (self.hasOptionalString) {
    size_ += computeStringSize(14, self.optionalString);
  }
  if (self.hasOptionalBytes) {
    size_ += computeDataSize(15, self.optionalBytes);
  }
  if (self.hasOptionalGroup) {
    size_ += computeGroupSize(16, self.OptionalGroup);
  }
  if (self.hasOptionalNestedMessage) {
    size_ += computeMessageSize(18, self.optionalNestedMessage);
  }
  if (self.hasOptionalForeignMessage) {
    size_ += computeMessageSize(19, self.optionalForeignMessage);
  }
  if (self.hasOptionalImportMessage) {
    size_ += computeMessageSize(20, self.optionalImportMessage);
  }
  if (self.hasOptionalNestedEnum) {
    size_ += computeEnumSize(21, self.optionalNestedEnum);
  }
  if (self.hasOptionalForeignEnum) {
    size_ += computeEnumSize(22, self.optionalForeignEnum);
  }
  if (self.hasOptionalImportEnum) {
    size_ += computeEnumSize(23, self.optionalImportEnum);
  }
  if (self.hasOptionalStringPiece) {
    size_ += computeStringSize(24, self.optionalStringPiece);
  }
  if (self.hasOptionalCord) {
    size_ += computeStringSize(25, self.optionalCord);
  }
  if (self.hasOptionalPublicImportMessage) {
    size_ += computeMessageSize(26, self.optionalPublicImportMessage);
  }
  if (self.hasOptionalLazyMessage) {
    size_ += computeMessageSize(27, self.optionalLazyMessage);
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.repeatedInt32Array.count;
    const int32_t *values = (const int32_t *)self.repeatedInt32Array.data;
    for (NSUInteger i = 0; i < count_; ++i) {
      dataSize += computeInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 2 * count_;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.repeatedInt64Array.count;
    const int64_t *values = (const int64_t *)self.repeatedInt64Array.data;
    for (NSUInteger i = 0; i < count_; ++i) {
      dataSize += computeInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 2 * count_;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.repeatedUint32Array.count;
    const uint32_t *values = (const uint32_t *)self.repeatedUint32Array.data;
    for (NSUInteger i = 0; i < count_; ++i) {
      dataSize += computeUInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 2 * count_;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.repeatedUint64Array.count;
    const uint64_t *values = (const uint64_t *)self.repeatedUint64Array.data;
    for (NSUInteger i = 0; i < count_; ++i) {
      dataSize += computeUInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 2 * count_;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.repeatedSint32Array.count;
    const int32_t *values = (const int32_t *)self.repeatedSint32Array.data;
    for (NSUInteger i = 0; i < count_; ++i) {
      dataSize += computeSInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 2 * count_;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.repeatedSint64Array.count;
    const int64_t *values = (const int64_t *)self.repeatedSint64Array.data;
    for (NSUInteger i = 0; i < count_; ++i) {
      dataSize += computeSInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 2 * count_;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.repeatedFixed32Array.count;
    dataSize += 4 * count_;
    size_ += dataSize;
    size_ += 2 * count_;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.repeatedFixed64Array.count;
    dataSize += 8 * count_;
    size_ += dataSize;
    size_ += 2 * count_;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.repeatedSfixed32Array.count;
    dataSize += 4 * count_;
    size_ += dataSize;
    size_ += 2 * count_;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.repeatedSfixed64Array.count;
    dataSize += 8 * count_;
    size_ += dataSize;
    size_ += 2 * count_;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.repeatedFloatArray.count;
    dataSize += 4 * count_;
    size_ += dataSize;
    size_ += 2 * count_;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.repeatedDoubleArray.count;
    dataSize += 8 * count_;
    size_ += dataSize;
    size_ += 2 * count_;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.repeatedBoolArray.count;
    dataSize += 1 * count_;
    size_ += dataSize;
    size_ += 2 * count_;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.repeatedStringArray.count;
    for (NSString * element in self.repeatedStringArray) {
      dataSize += computeStringSizeNoTag(element);
    }
    size_ += dataSize;
    size_ += 2 * count_;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.repeatedBytesArray.count;
    for (NSData * element in self.repeatedBytesArray) {
      dataSize += computeDataSizeNoTag(element);
    }
    size_ += dataSize;
    size_ += 2 * count_;
  }
  for (TestAllTypesLite_RepeatedGroup *element in self.RepeatedGroupArray) {
    size_ += computeGroupSize(46, element);
  }
  for (TestAllTypesLite_NestedMessage *element in self.repeatedNestedMessageArray) {
    size_ += computeMessageSize(48, element);
  }
  for (ForeignMessageLite *element in self.repeatedForeignMessageArray) {
    size_ += computeMessageSize(49, element);
  }
  for (ImportMessageLite *element in self.repeatedImportMessageArray) {
    size_ += computeMessageSize(50, element);
  }
  for (NSNumber *element in self.repeatedNestedEnumArray) {
    size_ += computeEnumSize(51, element.intValue);
  }
  for (NSNumber *element in self.repeatedForeignEnumArray) {
    size_ += computeEnumSize(52, element.intValue);
  }
  for (NSNumber *element in self.repeatedImportEnumArray) {
    size_ += computeEnumSize(53, element.intValue);
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.repeatedStringPieceArray.count;
    for (NSString * element in self.repeatedStringPieceArray) {
      dataSize += computeStringSizeNoTag(element);
    }
    size_ += dataSize;
    size_ += 2 * count_;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.repeatedCordArray.count;
    for (NSString * element in self.repeatedCordArray) {
      dataSize += computeStringSizeNoTag(element);
    }
    size_ += dataSize;
    size_ += 2 * count_;
  }
  for (TestAllTypesLite_NestedMessage *element in self.repeatedLazyMessageArray) {
    size_ += computeMessageSize(57, element);
  }
  if (self.hasDefaultInt32) {
    size_ += computeInt32Size(61, self.defaultInt32);
  }
  if (self.hasDefaultInt64) {
    size_ += computeInt64Size(62, self.defaultInt64);
  }
  if (self.hasDefaultUint32) {
    size_ += computeUInt32Size(63, self.defaultUint32);
  }
  if (self.hasDefaultUint64) {
    size_ += computeUInt64Size(64, self.defaultUint64);
  }
  if (self.hasDefaultSint32) {
    size_ += computeSInt32Size(65, self.defaultSint32);
  }
  if (self.hasDefaultSint64) {
    size_ += computeSInt64Size(66, self.defaultSint64);
  }
  if (self.hasDefaultFixed32) {
    size_ += computeFixed32Size(67, self.defaultFixed32);
  }
  if (self.hasDefaultFixed64) {
    size_ += computeFixed64Size(68, self.defaultFixed64);
  }
  if (self.hasDefaultSfixed32) {
    size_ += computeSFixed32Size(69, self.defaultSfixed32);
  }
  if (self.hasDefaultSfixed64) {
    size_ += computeSFixed64Size(70, self.defaultSfixed64);
  }
  if (self.hasDefaultFloat) {
    size_ += computeFloatSize(71, self.defaultFloat);
  }
  if (self.hasDefaultDouble) {
    size_ += computeDoubleSize(72, self.defaultDouble);
  }
  if (self.hasDefaultBool) {
    size_ += computeBoolSize(73, self.defaultBool);
  }
  if (self.hasDefaultString) {
    size_ += computeStringSize(74, self.defaultString);
  }
  if (self.hasDefaultBytes) {
    size_ += computeDataSize(75, self.defaultBytes);
  }
  if (self.hasDefaultNestedEnum) {
    size_ += computeEnumSize(81, self.defaultNestedEnum);
  }
  if (self.hasDefaultForeignEnum) {
    size_ += computeEnumSize(82, self.defaultForeignEnum);
  }
  if (self.hasDefaultImportEnum) {
    size_ += computeEnumSize(83, self.defaultImportEnum);
  }
  if (self.hasDefaultStringPiece) {
    size_ += computeStringSize(84, self.defaultStringPiece);
  }
  if (self.hasDefaultCord) {
    size_ += computeStringSize(85, self.defaultCord);
  }
  size_ += self.unknownFields.serializedSize;
  _cachedSerializedSize = size_;
  return size_;
}


+ (TestAllTypesLite_Builder*)builder {
  return [[TestAllTypesLite_Builder alloc] init];
}
+ (TestAllTypesLite_Builder*)builderWithPrototype:(TestAllTypesLite*)prototype {
  return [[TestAllTypesLite builder] mergeFrom:prototype];
}
- (TestAllTypesLite_Builder*)builder {
  return [TestAllTypesLite builder];
}
- (TestAllTypesLite_Builder*)toBuilder {
  return [TestAllTypesLite builderWithPrototype:self];
}

- (void)writeDescriptionTo:(NSMutableString*)output withIndent:(NSString*)indent {
  NSUInteger listCount; listCount = 0;
  if (self.hasOptionalInt32) {
    [output appendFormat:@"%@%@: %@\n", indent, @"optionalInt32", @(self.optionalInt32)];
  }
  if (self.hasOptionalInt64) {
    [output appendFormat:@"%@%@: %@\n", indent, @"optionalInt64", @(self.optionalInt64)];
  }
  if (self.hasOptionalUint32) {
    [output appendFormat:@"%@%@: %@\n", indent, @"optionalUint32", @(self.optionalUint32)];
  }
  if (self.hasOptionalUint64) {
    [output appendFormat:@"%@%@: %@\n", indent, @"optionalUint64", @(self.optionalUint64)];
  }
  if (self.hasOptionalSint32) {
    [output appendFormat:@"%@%@: %@\n", indent, @"optionalSint32", @(self.optionalSint32)];
  }
  if (self.hasOptionalSint64) {
    [output appendFormat:@"%@%@: %@\n", indent, @"optionalSint64", @(self.optionalSint64)];
  }
  if (self.hasOptionalFixed32) {
    [output appendFormat:@"%@%@: %@\n", indent, @"optionalFixed32", @(self.optionalFixed32)];
  }
  if (self.hasOptionalFixed64) {
    [output appendFormat:@"%@%@: %@\n", indent, @"optionalFixed64", @(self.optionalFixed64)];
  }
  if (self.hasOptionalSfixed32) {
    [output appendFormat:@"%@%@: %@\n", indent, @"optionalSfixed32", @(self.optionalSfixed32)];
  }
  if (self.hasOptionalSfixed64) {
    [output appendFormat:@"%@%@: %@\n", indent, @"optionalSfixed64", @(self.optionalSfixed64)];
  }
  if (self.hasOptionalFloat) {
    [output appendFormat:@"%@%@: %@\n", indent, @"optionalFloat", @(self.optionalFloat)];
  }
  if (self.hasOptionalDouble) {
    [output appendFormat:@"%@%@: %@\n", indent, @"optionalDouble", @(self.optionalDouble)];
  }
  if (self.hasOptionalBool) {
    [output appendFormat:@"%@%@: %@\n", indent, @"optionalBool", @(self.optionalBool)];
  }
  if (self.hasOptionalString) {
    [output appendFormat:@"%@%@: %@\n", indent, @"optionalString", self.optionalString];
  }
  if (self.hasOptionalBytes) {
    [output appendFormat:@"%@%@: %@\n", indent, @"optionalBytes", self.optionalBytes];
  }
  if (self.hasOptionalGroup) {
    [output appendFormat:@"%@%@ {\n", indent, @"OptionalGroup"];
    [self.OptionalGroup writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasOptionalNestedMessage) {
    [output appendFormat:@"%@%@ {\n", indent, @"optionalNestedMessage"];
    [self.optionalNestedMessage writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasOptionalForeignMessage) {
    [output appendFormat:@"%@%@ {\n", indent, @"optionalForeignMessage"];
    [self.optionalForeignMessage writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasOptionalImportMessage) {
    [output appendFormat:@"%@%@ {\n", indent, @"optionalImportMessage"];
    [self.optionalImportMessage writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasOptionalNestedEnum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"optionalNestedEnum", @(self.optionalNestedEnum)];
  }
  if (self.hasOptionalForeignEnum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"optionalForeignEnum", @(self.optionalForeignEnum)];
  }
  if (self.hasOptionalImportEnum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"optionalImportEnum", @(self.optionalImportEnum)];
  }
  if (self.hasOptionalStringPiece) {
    [output appendFormat:@"%@%@: %@\n", indent, @"optionalStringPiece", self.optionalStringPiece];
  }
  if (self.hasOptionalCord) {
    [output appendFormat:@"%@%@: %@\n", indent, @"optionalCord", self.optionalCord];
  }
  if (self.hasOptionalPublicImportMessage) {
    [output appendFormat:@"%@%@ {\n", indent, @"optionalPublicImportMessage"];
    [self.optionalPublicImportMessage writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasOptionalLazyMessage) {
    [output appendFormat:@"%@%@ {\n", indent, @"optionalLazyMessage"];
    [self.optionalLazyMessage writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  listCount = self.repeatedInt32Array.count;
  for(int i=0; i < listCount; i++){
    [output appendFormat:@"%@%@: %@\n", indent, @"repeatedInt32", @([self.repeatedInt32Array int32AtIndex:i])];
  }
  listCount = self.repeatedInt64Array.count;
  for(int i=0; i < listCount; i++){
    [output appendFormat:@"%@%@: %@\n", indent, @"repeatedInt64", @([self.repeatedInt64Array int64AtIndex:i])];
  }
  listCount = self.repeatedUint32Array.count;
  for(int i=0; i < listCount; i++){
    [output appendFormat:@"%@%@: %@\n", indent, @"repeatedUint32", @([self.repeatedUint32Array uint32AtIndex:i])];
  }
  listCount = self.repeatedUint64Array.count;
  for(int i=0; i < listCount; i++){
    [output appendFormat:@"%@%@: %@\n", indent, @"repeatedUint64", @([self.repeatedUint64Array uint64AtIndex:i])];
  }
  listCount = self.repeatedSint32Array.count;
  for(int i=0; i < listCount; i++){
    [output appendFormat:@"%@%@: %@\n", indent, @"repeatedSint32", @([self.repeatedSint32Array int32AtIndex:i])];
  }
  listCount = self.repeatedSint64Array.count;
  for(int i=0; i < listCount; i++){
    [output appendFormat:@"%@%@: %@\n", indent, @"repeatedSint64", @([self.repeatedSint64Array int64AtIndex:i])];
  }
  listCount = self.repeatedFixed32Array.count;
  for(int i=0; i < listCount; i++){
    [output appendFormat:@"%@%@: %@\n", indent, @"repeatedFixed32", @([self.repeatedFixed32Array uint32AtIndex:i])];
  }
  listCount = self.repeatedFixed64Array.count;
  for(int i=0; i < listCount; i++){
    [output appendFormat:@"%@%@: %@\n", indent, @"repeatedFixed64", @([self.repeatedFixed64Array uint64AtIndex:i])];
  }
  listCount = self.repeatedSfixed32Array.count;
  for(int i=0; i < listCount; i++){
    [output appendFormat:@"%@%@: %@\n", indent, @"repeatedSfixed32", @([self.repeatedSfixed32Array int32AtIndex:i])];
  }
  listCount = self.repeatedSfixed64Array.count;
  for(int i=0; i < listCount; i++){
    [output appendFormat:@"%@%@: %@\n", indent, @"repeatedSfixed64", @([self.repeatedSfixed64Array int64AtIndex:i])];
  }
  listCount = self.repeatedFloatArray.count;
  for(int i=0; i < listCount; i++){
    [output appendFormat:@"%@%@: %@\n", indent, @"repeatedFloat", @([self.repeatedFloatArray floatAtIndex:i])];
  }
  listCount = self.repeatedDoubleArray.count;
  for(int i=0; i < listCount; i++){
    [output appendFormat:@"%@%@: %@\n", indent, @"repeatedDouble", @([self.repeatedDoubleArray doubleAtIndex:i])];
  }
  listCount = self.repeatedBoolArray.count;
  for(int i=0; i < listCount; i++){
    [output appendFormat:@"%@%@: %@\n", indent, @"repeatedBool", @([self.repeatedBoolArray boolAtIndex:i])];
  }
  for (NSString * element in self.repeatedStringArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"repeatedString", element];
  }
  for (NSData * element in self.repeatedBytesArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"repeatedBytes", element];
  }
  for (TestAllTypesLite_RepeatedGroup* element in self.RepeatedGroupArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"RepeatedGroup"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (TestAllTypesLite_NestedMessage* element in self.repeatedNestedMessageArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"repeatedNestedMessage"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (ForeignMessageLite* element in self.repeatedForeignMessageArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"repeatedForeignMessage"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (ImportMessageLite* element in self.repeatedImportMessageArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"repeatedImportMessage"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (NSNumber* element in self.repeatedNestedEnumArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"repeatedNestedEnum", element];
  }
  for (NSNumber* element in self.repeatedForeignEnumArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"repeatedForeignEnum", element];
  }
  for (NSNumber* element in self.repeatedImportEnumArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"repeatedImportEnum", element];
  }
  for (NSString * element in self.repeatedStringPieceArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"repeatedStringPiece", element];
  }
  for (NSString * element in self.repeatedCordArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"repeatedCord", element];
  }
  for (TestAllTypesLite_NestedMessage* element in self.repeatedLazyMessageArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"repeatedLazyMessage"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasDefaultInt32) {
    [output appendFormat:@"%@%@: %@\n", indent, @"defaultInt32", @(self.defaultInt32)];
  }
  if (self.hasDefaultInt64) {
    [output appendFormat:@"%@%@: %@\n", indent, @"defaultInt64", @(self.defaultInt64)];
  }
  if (self.hasDefaultUint32) {
    [output appendFormat:@"%@%@: %@\n", indent, @"defaultUint32", @(self.defaultUint32)];
  }
  if (self.hasDefaultUint64) {
    [output appendFormat:@"%@%@: %@\n", indent, @"defaultUint64", @(self.defaultUint64)];
  }
  if (self.hasDefaultSint32) {
    [output appendFormat:@"%@%@: %@\n", indent, @"defaultSint32", @(self.defaultSint32)];
  }
  if (self.hasDefaultSint64) {
    [output appendFormat:@"%@%@: %@\n", indent, @"defaultSint64", @(self.defaultSint64)];
  }
  if (self.hasDefaultFixed32) {
    [output appendFormat:@"%@%@: %@\n", indent, @"defaultFixed32", @(self.defaultFixed32)];
  }
  if (self.hasDefaultFixed64) {
    [output appendFormat:@"%@%@: %@\n", indent, @"defaultFixed64", @(self.defaultFixed64)];
  }
  if (self.hasDefaultSfixed32) {
    [output appendFormat:@"%@%@: %@\n", indent, @"defaultSfixed32", @(self.defaultSfixed32)];
  }
  if (self.hasDefaultSfixed64) {
    [output appendFormat:@"%@%@: %@\n", indent, @"defaultSfixed64", @(self.defaultSfixed64)];
  }
  if (self.hasDefaultFloat) {
    [output appendFormat:@"%@%@: %@\n", indent, @"defaultFloat", @(self.defaultFloat)];
  }
  if (self.hasDefaultDouble) {
    [output appendFormat:@"%@%@: %@\n", indent, @"defaultDouble", @(self.defaultDouble)];
  }
  if (self.hasDefaultBool) {
    [output appendFormat:@"%@%@: %@\n", indent, @"defaultBool", @(self.defaultBool)];
  }
  if (self.hasDefaultString) {
    [output appendFormat:@"%@%@: %@\n", indent, @"defaultString", self.defaultString];
  }
  if (self.hasDefaultBytes) {
    [output appendFormat:@"%@%@: %@\n", indent, @"defaultBytes", self.defaultBytes];
  }
  if (self.hasDefaultNestedEnum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"defaultNestedEnum", @(self.defaultNestedEnum)];
  }
  if (self.hasDefaultForeignEnum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"defaultForeignEnum", @(self.defaultForeignEnum)];
  }
  if (self.hasDefaultImportEnum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"defaultImportEnum", @(self.defaultImportEnum)];
  }
  if (self.hasDefaultStringPiece) {
    [output appendFormat:@"%@%@: %@\n", indent, @"defaultStringPiece", self.defaultStringPiece];
  }
  if (self.hasDefaultCord) {
    [output appendFormat:@"%@%@: %@\n", indent, @"defaultCord", self.defaultCord];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}

- (BOOL)isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TestAllTypesLite class]]) {
    return NO;
  }
  TestAllTypesLite *otherMessage = other;
  return
      self.hasOptionalInt32 == otherMessage.hasOptionalInt32 &&
      (!self.hasOptionalInt32 || self.optionalInt32 == otherMessage.optionalInt32) &&
      self.hasOptionalInt64 == otherMessage.hasOptionalInt64 &&
      (!self.hasOptionalInt64 || self.optionalInt64 == otherMessage.optionalInt64) &&
      self.hasOptionalUint32 == otherMessage.hasOptionalUint32 &&
      (!self.hasOptionalUint32 || self.optionalUint32 == otherMessage.optionalUint32) &&
      self.hasOptionalUint64 == otherMessage.hasOptionalUint64 &&
      (!self.hasOptionalUint64 || self.optionalUint64 == otherMessage.optionalUint64) &&
      self.hasOptionalSint32 == otherMessage.hasOptionalSint32 &&
      (!self.hasOptionalSint32 || self.optionalSint32 == otherMessage.optionalSint32) &&
      self.hasOptionalSint64 == otherMessage.hasOptionalSint64 &&
      (!self.hasOptionalSint64 || self.optionalSint64 == otherMessage.optionalSint64) &&
      self.hasOptionalFixed32 == otherMessage.hasOptionalFixed32 &&
      (!self.hasOptionalFixed32 || self.optionalFixed32 == otherMessage.optionalFixed32) &&
      self.hasOptionalFixed64 == otherMessage.hasOptionalFixed64 &&
      (!self.hasOptionalFixed64 || self.optionalFixed64 == otherMessage.optionalFixed64) &&
      self.hasOptionalSfixed32 == otherMessage.hasOptionalSfixed32 &&
      (!self.hasOptionalSfixed32 || self.optionalSfixed32 == otherMessage.optionalSfixed32) &&
      self.hasOptionalSfixed64 == otherMessage.hasOptionalSfixed64 &&
      (!self.hasOptionalSfixed64 || self.optionalSfixed64 == otherMessage.optionalSfixed64) &&
      self.hasOptionalFloat == otherMessage.hasOptionalFloat &&
      (!self.hasOptionalFloat || self.optionalFloat == otherMessage.optionalFloat) &&
      self.hasOptionalDouble == otherMessage.hasOptionalDouble &&
      (!self.hasOptionalDouble || self.optionalDouble == otherMessage.optionalDouble) &&
      self.hasOptionalBool == otherMessage.hasOptionalBool &&
      (!self.hasOptionalBool || self.optionalBool == otherMessage.optionalBool) &&
      self.hasOptionalString == otherMessage.hasOptionalString &&
      (!self.hasOptionalString || [self.optionalString isEqual:otherMessage.optionalString]) &&
      self.hasOptionalBytes == otherMessage.hasOptionalBytes &&
      (!self.hasOptionalBytes || [self.optionalBytes isEqual:otherMessage.optionalBytes]) &&
      self.hasOptionalGroup == otherMessage.hasOptionalGroup &&
      (!self.hasOptionalGroup || [self.OptionalGroup isEqual:otherMessage.OptionalGroup]) &&
      self.hasOptionalNestedMessage == otherMessage.hasOptionalNestedMessage &&
      (!self.hasOptionalNestedMessage || [self.optionalNestedMessage isEqual:otherMessage.optionalNestedMessage]) &&
      self.hasOptionalForeignMessage == otherMessage.hasOptionalForeignMessage &&
      (!self.hasOptionalForeignMessage || [self.optionalForeignMessage isEqual:otherMessage.optionalForeignMessage]) &&
      self.hasOptionalImportMessage == otherMessage.hasOptionalImportMessage &&
      (!self.hasOptionalImportMessage || [self.optionalImportMessage isEqual:otherMessage.optionalImportMessage]) &&
      self.hasOptionalNestedEnum == otherMessage.hasOptionalNestedEnum &&
      (!self.hasOptionalNestedEnum || self.optionalNestedEnum == otherMessage.optionalNestedEnum) &&
      self.hasOptionalForeignEnum == otherMessage.hasOptionalForeignEnum &&
      (!self.hasOptionalForeignEnum || self.optionalForeignEnum == otherMessage.optionalForeignEnum) &&
      self.hasOptionalImportEnum == otherMessage.hasOptionalImportEnum &&
      (!self.hasOptionalImportEnum || self.optionalImportEnum == otherMessage.optionalImportEnum) &&
      self.hasOptionalStringPiece == otherMessage.hasOptionalStringPiece &&
      (!self.hasOptionalStringPiece || [self.optionalStringPiece isEqual:otherMessage.optionalStringPiece]) &&
      self.hasOptionalCord == otherMessage.hasOptionalCord &&
      (!self.hasOptionalCord || [self.optionalCord isEqual:otherMessage.optionalCord]) &&
      self.hasOptionalPublicImportMessage == otherMessage.hasOptionalPublicImportMessage &&
      (!self.hasOptionalPublicImportMessage || [self.optionalPublicImportMessage isEqual:otherMessage.optionalPublicImportMessage]) &&
      self.hasOptionalLazyMessage == otherMessage.hasOptionalLazyMessage &&
      (!self.hasOptionalLazyMessage || [self.optionalLazyMessage isEqual:otherMessage.optionalLazyMessage]) &&
      ((self.repeatedInt32Array == nil && otherMessage.repeatedInt32Array == nil) ||
      [self.repeatedInt32Array isEqualToArray:otherMessage.repeatedInt32Array]) &&
      ((self.repeatedInt64Array == nil && otherMessage.repeatedInt64Array == nil) ||
      [self.repeatedInt64Array isEqualToArray:otherMessage.repeatedInt64Array]) &&
      ((self.repeatedUint32Array == nil && otherMessage.repeatedUint32Array == nil) ||
      [self.repeatedUint32Array isEqualToArray:otherMessage.repeatedUint32Array]) &&
      ((self.repeatedUint64Array == nil && otherMessage.repeatedUint64Array == nil) ||
      [self.repeatedUint64Array isEqualToArray:otherMessage.repeatedUint64Array]) &&
      ((self.repeatedSint32Array == nil && otherMessage.repeatedSint32Array == nil) ||
      [self.repeatedSint32Array isEqualToArray:otherMessage.repeatedSint32Array]) &&
      ((self.repeatedSint64Array == nil && otherMessage.repeatedSint64Array == nil) ||
      [self.repeatedSint64Array isEqualToArray:otherMessage.repeatedSint64Array]) &&
      ((self.repeatedFixed32Array == nil && otherMessage.repeatedFixed32Array == nil) ||
      [self.repeatedFixed32Array isEqualToArray:otherMessage.repeatedFixed32Array]) &&
      ((self.repeatedFixed64Array == nil && otherMessage.repeatedFixed64Array == nil) ||
      [self.repeatedFixed64Array isEqualToArray:otherMessage.repeatedFixed64Array]) &&
      ((self.repeatedSfixed32Array == nil && otherMessage.repeatedSfixed32Array == nil) ||
      [self.repeatedSfixed32Array isEqualToArray:otherMessage.repeatedSfixed32Array]) &&
      ((self.repeatedSfixed64Array == nil && otherMessage.repeatedSfixed64Array == nil) ||
      [self.repeatedSfixed64Array isEqualToArray:otherMessage.repeatedSfixed64Array]) &&
      ((self.repeatedFloatArray == nil && otherMessage.repeatedFloatArray == nil) ||
      [self.repeatedFloatArray isEqualToArray:otherMessage.repeatedFloatArray]) &&
      ((self.repeatedDoubleArray == nil && otherMessage.repeatedDoubleArray == nil) ||
      [self.repeatedDoubleArray isEqualToArray:otherMessage.repeatedDoubleArray]) &&
      ((self.repeatedBoolArray == nil && otherMessage.repeatedBoolArray == nil) ||
      [self.repeatedBoolArray isEqualToArray:otherMessage.repeatedBoolArray]) &&
      ((self.repeatedStringArray == nil && otherMessage.repeatedStringArray == nil) ||
      [self.repeatedStringArray isEqualToArray:otherMessage.repeatedStringArray]) &&
      ((self.repeatedBytesArray == nil && otherMessage.repeatedBytesArray == nil) ||
      [self.repeatedBytesArray isEqualToArray:otherMessage.repeatedBytesArray]) &&
      ((self.RepeatedGroupArray == nil && otherMessage.RepeatedGroupArray == nil) ||
      [self.RepeatedGroupArray isEqualToArray:otherMessage.RepeatedGroupArray]) &&
      ((self.repeatedNestedMessageArray == nil && otherMessage.repeatedNestedMessageArray == nil) ||
      [self.repeatedNestedMessageArray isEqualToArray:otherMessage.repeatedNestedMessageArray]) &&
      ((self.repeatedForeignMessageArray == nil && otherMessage.repeatedForeignMessageArray == nil) ||
      [self.repeatedForeignMessageArray isEqualToArray:otherMessage.repeatedForeignMessageArray]) &&
      ((self.repeatedImportMessageArray == nil && otherMessage.repeatedImportMessageArray == nil) ||
      [self.repeatedImportMessageArray isEqualToArray:otherMessage.repeatedImportMessageArray]) &&
      ((self.repeatedNestedEnumArray == nil && otherMessage.repeatedNestedEnumArray == nil) ||
      [self.repeatedNestedEnumArray isEqualToArray:otherMessage.repeatedNestedEnumArray]) &&
      ((self.repeatedForeignEnumArray == nil && otherMessage.repeatedForeignEnumArray == nil) ||
      [self.repeatedForeignEnumArray isEqualToArray:otherMessage.repeatedForeignEnumArray]) &&
      ((self.repeatedImportEnumArray == nil && otherMessage.repeatedImportEnumArray == nil) ||
      [self.repeatedImportEnumArray isEqualToArray:otherMessage.repeatedImportEnumArray]) &&
      ((self.repeatedStringPieceArray == nil && otherMessage.repeatedStringPieceArray == nil) ||
      [self.repeatedStringPieceArray isEqualToArray:otherMessage.repeatedStringPieceArray]) &&
      ((self.repeatedCordArray == nil && otherMessage.repeatedCordArray == nil) ||
      [self.repeatedCordArray isEqualToArray:otherMessage.repeatedCordArray]) &&
      ((self.repeatedLazyMessageArray == nil && otherMessage.repeatedLazyMessageArray == nil) ||
      [self.repeatedLazyMessageArray isEqualToArray:otherMessage.repeatedLazyMessageArray]) &&
      self.hasDefaultInt32 == otherMessage.hasDefaultInt32 &&
      (!self.hasDefaultInt32 || self.defaultInt32 == otherMessage.defaultInt32) &&
      self.hasDefaultInt64 == otherMessage.hasDefaultInt64 &&
      (!self.hasDefaultInt64 || self.defaultInt64 == otherMessage.defaultInt64) &&
      self.hasDefaultUint32 == otherMessage.hasDefaultUint32 &&
      (!self.hasDefaultUint32 || self.defaultUint32 == otherMessage.defaultUint32) &&
      self.hasDefaultUint64 == otherMessage.hasDefaultUint64 &&
      (!self.hasDefaultUint64 || self.defaultUint64 == otherMessage.defaultUint64) &&
      self.hasDefaultSint32 == otherMessage.hasDefaultSint32 &&
      (!self.hasDefaultSint32 || self.defaultSint32 == otherMessage.defaultSint32) &&
      self.hasDefaultSint64 == otherMessage.hasDefaultSint64 &&
      (!self.hasDefaultSint64 || self.defaultSint64 == otherMessage.defaultSint64) &&
      self.hasDefaultFixed32 == otherMessage.hasDefaultFixed32 &&
      (!self.hasDefaultFixed32 || self.defaultFixed32 == otherMessage.defaultFixed32) &&
      self.hasDefaultFixed64 == otherMessage.hasDefaultFixed64 &&
      (!self.hasDefaultFixed64 || self.defaultFixed64 == otherMessage.defaultFixed64) &&
      self.hasDefaultSfixed32 == otherMessage.hasDefaultSfixed32 &&
      (!self.hasDefaultSfixed32 || self.defaultSfixed32 == otherMessage.defaultSfixed32) &&
      self.hasDefaultSfixed64 == otherMessage.hasDefaultSfixed64 &&
      (!self.hasDefaultSfixed64 || self.defaultSfixed64 == otherMessage.defaultSfixed64) &&
      self.hasDefaultFloat == otherMessage.hasDefaultFloat &&
      (!self.hasDefaultFloat || self.defaultFloat == otherMessage.defaultFloat) &&
      self.hasDefaultDouble == otherMessage.hasDefaultDouble &&
      (!self.hasDefaultDouble || self.defaultDouble == otherMessage.defaultDouble) &&
      self.hasDefaultBool == otherMessage.hasDefaultBool &&
      (!self.hasDefaultBool || self.defaultBool == otherMessage.defaultBool) &&
      self.hasDefaultString == otherMessage.hasDefaultString &&
      (!self.hasDefaultString || [self.defaultString isEqual:otherMessage.defaultString]) &&
      self.hasDefaultBytes == otherMessage.hasDefaultBytes &&
      (!self.hasDefaultBytes || [self.defaultBytes isEqual:otherMessage.defaultBytes]) &&
      self.hasDefaultNestedEnum == otherMessage.hasDefaultNestedEnum &&
      (!self.hasDefaultNestedEnum || self.defaultNestedEnum == otherMessage.defaultNestedEnum) &&
      self.hasDefaultForeignEnum == otherMessage.hasDefaultForeignEnum &&
      (!self.hasDefaultForeignEnum || self.defaultForeignEnum == otherMessage.defaultForeignEnum) &&
      self.hasDefaultImportEnum == otherMessage.hasDefaultImportEnum &&
      (!self.hasDefaultImportEnum || self.defaultImportEnum == otherMessage.defaultImportEnum) &&
      self.hasDefaultStringPiece == otherMessage.hasDefaultStringPiece &&
      (!self.hasDefaultStringPiece || [self.defaultStringPiece isEqual:otherMessage.defaultStringPiece]) &&
      self.hasDefaultCord == otherMessage.hasDefaultCord &&
      (!self.hasDefaultCord || [self.defaultCord isEqual:otherMessage.defaultCord]) &&
      (self.unknownFields == otherMessage.unknownFields ||
       (self.unknownFields != nil &&
       [self.unknownFields isEqual:otherMessage.unknownFields]));
}

- (NSUInteger)hash {
  NSUInteger hashCode; hashCode = 7;
  NSUInteger listCount; listCount = 0;
  if (self.hasOptionalInt32) {
    hashCode = hashCode * 31 + [@(self.optionalInt32) hash];
  }
  if (self.hasOptionalInt64) {
    hashCode = hashCode * 31 + [@(self.optionalInt64) hash];
  }
  if (self.hasOptionalUint32) {
    hashCode = hashCode * 31 + [@(self.optionalUint32) hash];
  }
  if (self.hasOptionalUint64) {
    hashCode = hashCode * 31 + [@(self.optionalUint64) hash];
  }
  if (self.hasOptionalSint32) {
    hashCode = hashCode * 31 + [@(self.optionalSint32) hash];
  }
  if (self.hasOptionalSint64) {
    hashCode = hashCode * 31 + [@(self.optionalSint64) hash];
  }
  if (self.hasOptionalFixed32) {
    hashCode = hashCode * 31 + [@(self.optionalFixed32) hash];
  }
  if (self.hasOptionalFixed64) {
    hashCode = hashCode * 31 + [@(self.optionalFixed64) hash];
  }
  if (self.hasOptionalSfixed32) {
    hashCode = hashCode * 31 + [@(self.optionalSfixed32) hash];
  }
  if (self.hasOptionalSfixed64) {
    hashCode = hashCode * 31 + [@(self.optionalSfixed64) hash];
  }
  if (self.hasOptionalFloat) {
    hashCode = hashCode * 31 + [@(self.optionalFloat) hash];
  }
  if (self.hasOptionalDouble) {
    hashCode = hashCode * 31 + [@(self.optionalDouble) hash];
  }
  if (self.hasOptionalBool) {
    hashCode = hashCode * 31 + [@(self.optionalBool) hash];
  }
  if (self.hasOptionalString) {
    hashCode = hashCode * 31 + [self.optionalString hash];
  }
  if (self.hasOptionalBytes) {
    hashCode = hashCode * 31 + [self.optionalBytes hash];
  }
  if (self.hasOptionalGroup) {
    hashCode = hashCode * 31 + [self.OptionalGroup hash];
  }
  if (self.hasOptionalNestedMessage) {
    hashCode = hashCode * 31 + [self.optionalNestedMessage hash];
  }
  if (self.hasOptionalForeignMessage) {
    hashCode = hashCode * 31 + [self.optionalForeignMessage hash];
  }
  if (self.hasOptionalImportMessage) {
    hashCode = hashCode * 31 + [self.optionalImportMessage hash];
  }
  if (self.hasOptionalNestedEnum) {
    hashCode = hashCode * 31 + self.optionalNestedEnum;
  }
  if (self.hasOptionalForeignEnum) {
    hashCode = hashCode * 31 + self.optionalForeignEnum;
  }
  if (self.hasOptionalImportEnum) {
    hashCode = hashCode * 31 + self.optionalImportEnum;
  }
  if (self.hasOptionalStringPiece) {
    hashCode = hashCode * 31 + [self.optionalStringPiece hash];
  }
  if (self.hasOptionalCord) {
    hashCode = hashCode * 31 + [self.optionalCord hash];
  }
  if (self.hasOptionalPublicImportMessage) {
    hashCode = hashCode * 31 + [self.optionalPublicImportMessage hash];
  }
  if (self.hasOptionalLazyMessage) {
    hashCode = hashCode * 31 + [self.optionalLazyMessage hash];
  }
  listCount = self.repeatedInt32Array.count;
  for(int i=0; i < listCount; i++){
    hashCode = hashCode * 31 + [self.repeatedInt32Array int32AtIndex:i];
  }
  listCount = self.repeatedInt64Array.count;
  for(int i=0; i < listCount; i++){
    hashCode = hashCode * 31 + [self.repeatedInt64Array int64AtIndex:i];
  }
  listCount = self.repeatedUint32Array.count;
  for(int i=0; i < listCount; i++){
    hashCode = hashCode * 31 + [self.repeatedUint32Array uint32AtIndex:i];
  }
  listCount = self.repeatedUint64Array.count;
  for(int i=0; i < listCount; i++){
    hashCode = hashCode * 31 + [self.repeatedUint64Array uint64AtIndex:i];
  }
  listCount = self.repeatedSint32Array.count;
  for(int i=0; i < listCount; i++){
    hashCode = hashCode * 31 + [self.repeatedSint32Array int32AtIndex:i];
  }
  listCount = self.repeatedSint64Array.count;
  for(int i=0; i < listCount; i++){
    hashCode = hashCode * 31 + [self.repeatedSint64Array int64AtIndex:i];
  }
  listCount = self.repeatedFixed32Array.count;
  for(int i=0; i < listCount; i++){
    hashCode = hashCode * 31 + [self.repeatedFixed32Array uint32AtIndex:i];
  }
  listCount = self.repeatedFixed64Array.count;
  for(int i=0; i < listCount; i++){
    hashCode = hashCode * 31 + [self.repeatedFixed64Array uint64AtIndex:i];
  }
  listCount = self.repeatedSfixed32Array.count;
  for(int i=0; i < listCount; i++){
    hashCode = hashCode * 31 + [self.repeatedSfixed32Array int32AtIndex:i];
  }
  listCount = self.repeatedSfixed64Array.count;
  for(int i=0; i < listCount; i++){
    hashCode = hashCode * 31 + [self.repeatedSfixed64Array int64AtIndex:i];
  }
  listCount = self.repeatedFloatArray.count;
  for(int i=0; i < listCount; i++){
    hashCode = hashCode * 31 + [self.repeatedFloatArray floatAtIndex:i];
  }
  listCount = self.repeatedDoubleArray.count;
  for(int i=0; i < listCount; i++){
    hashCode = hashCode * 31 + [self.repeatedDoubleArray doubleAtIndex:i];
  }
  listCount = self.repeatedBoolArray.count;
  for(int i=0; i < listCount; i++){
    hashCode = hashCode * 31 + [self.repeatedBoolArray boolAtIndex:i];
  }
  for (NSString * element in self.repeatedStringArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (NSData * element in self.repeatedBytesArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (TestAllTypesLite_RepeatedGroup* element in self.RepeatedGroupArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (TestAllTypesLite_NestedMessage* element in self.repeatedNestedMessageArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (ForeignMessageLite* element in self.repeatedForeignMessageArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (ImportMessageLite* element in self.repeatedImportMessageArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (NSNumber* element in self.repeatedNestedEnumArray) {
    hashCode = hashCode * 31 + element.intValue;
  }
  for (NSNumber* element in self.repeatedForeignEnumArray) {
    hashCode = hashCode * 31 + element.intValue;
  }
  for (NSNumber* element in self.repeatedImportEnumArray) {
    hashCode = hashCode * 31 + element.intValue;
  }
  for (NSString * element in self.repeatedStringPieceArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (NSString * element in self.repeatedCordArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (TestAllTypesLite_NestedMessage* element in self.repeatedLazyMessageArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasDefaultInt32) {
    hashCode = hashCode * 31 + [@(self.defaultInt32) hash];
  }
  if (self.hasDefaultInt64) {
    hashCode = hashCode * 31 + [@(self.defaultInt64) hash];
  }
  if (self.hasDefaultUint32) {
    hashCode = hashCode * 31 + [@(self.defaultUint32) hash];
  }
  if (self.hasDefaultUint64) {
    hashCode = hashCode * 31 + [@(self.defaultUint64) hash];
  }
  if (self.hasDefaultSint32) {
    hashCode = hashCode * 31 + [@(self.defaultSint32) hash];
  }
  if (self.hasDefaultSint64) {
    hashCode = hashCode * 31 + [@(self.defaultSint64) hash];
  }
  if (self.hasDefaultFixed32) {
    hashCode = hashCode * 31 + [@(self.defaultFixed32) hash];
  }
  if (self.hasDefaultFixed64) {
    hashCode = hashCode * 31 + [@(self.defaultFixed64) hash];
  }
  if (self.hasDefaultSfixed32) {
    hashCode = hashCode * 31 + [@(self.defaultSfixed32) hash];
  }
  if (self.hasDefaultSfixed64) {
    hashCode = hashCode * 31 + [@(self.defaultSfixed64) hash];
  }
  if (self.hasDefaultFloat) {
    hashCode = hashCode * 31 + [@(self.defaultFloat) hash];
  }
  if (self.hasDefaultDouble) {
    hashCode = hashCode * 31 + [@(self.defaultDouble) hash];
  }
  if (self.hasDefaultBool) {
    hashCode = hashCode * 31 + [@(self.defaultBool) hash];
  }
  if (self.hasDefaultString) {
    hashCode = hashCode * 31 + [self.defaultString hash];
  }
  if (self.hasDefaultBytes) {
    hashCode = hashCode * 31 + [self.defaultBytes hash];
  }
  if (self.hasDefaultNestedEnum) {
    hashCode = hashCode * 31 + self.defaultNestedEnum;
  }
  if (self.hasDefaultForeignEnum) {
    hashCode = hashCode * 31 + self.defaultForeignEnum;
  }
  if (self.hasDefaultImportEnum) {
    hashCode = hashCode * 31 + self.defaultImportEnum;
  }
  if (self.hasDefaultStringPiece) {
    hashCode = hashCode * 31 + [self.defaultStringPiece hash];
  }
  if (self.hasDefaultCord) {
    hashCode = hashCode * 31 + [self.defaultCord hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}

@end


@implementation TestAllTypesLite_Builder {
  TestAllTypesLite* _result;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  _result = [[TestAllTypesLite alloc] init];
  return self;
}

- (PBGeneratedMessage*)internalGetResult {
  return _result;
}
- (instancetype)clear {
  _result = [[TestAllTypesLite alloc] init];
  return self;
}
- (instancetype)clone {
  return [[[TestAllTypesLite_Builder alloc] init] mergeFrom:_result];
}

- (TestAllTypesLite*)defaultMessageInstance {
  return [TestAllTypesLite defaultInstance];
}

- (TestAllTypesLite*)build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TestAllTypesLite*)buildPartial {
  TestAllTypesLite* partial = _result;
  _result = nil;
  return partial;
}

- (instancetype)mergeFrom:(TestAllTypesLite*)other {
  if (other == [TestAllTypesLite defaultInstance]) {
    return self;
  }
  if (other.hasOptionalInt32) {
    [self setOptionalInt32:other.optionalInt32];
  }
  if (other.hasOptionalInt64) {
    [self setOptionalInt64:other.optionalInt64];
  }
  if (other.hasOptionalUint32) {
    [self setOptionalUint32:other.optionalUint32];
  }
  if (other.hasOptionalUint64) {
    [self setOptionalUint64:other.optionalUint64];
  }
  if (other.hasOptionalSint32) {
    [self setOptionalSint32:other.optionalSint32];
  }
  if (other.hasOptionalSint64) {
    [self setOptionalSint64:other.optionalSint64];
  }
  if (other.hasOptionalFixed32) {
    [self setOptionalFixed32:other.optionalFixed32];
  }
  if (other.hasOptionalFixed64) {
    [self setOptionalFixed64:other.optionalFixed64];
  }
  if (other.hasOptionalSfixed32) {
    [self setOptionalSfixed32:other.optionalSfixed32];
  }
  if (other.hasOptionalSfixed64) {
    [self setOptionalSfixed64:other.optionalSfixed64];
  }
  if (other.hasOptionalFloat) {
    [self setOptionalFloat:other.optionalFloat];
  }
  if (other.hasOptionalDouble) {
    [self setOptionalDouble:other.optionalDouble];
  }
  if (other.hasOptionalBool) {
    [self setOptionalBool:other.optionalBool];
  }
  if (other.hasOptionalString) {
    [self setOptionalString:other.optionalString];
  }
  if (other.hasOptionalBytes) {
    [self setOptionalBytes:other.optionalBytes];
  }
  if (other.hasOptionalGroup) {
    [self mergeOptionalGroup:other.OptionalGroup];
  }
  if (other.hasOptionalNestedMessage) {
    [self mergeOptionalNestedMessage:other.optionalNestedMessage];
  }
  if (other.hasOptionalForeignMessage) {
    [self mergeOptionalForeignMessage:other.optionalForeignMessage];
  }
  if (other.hasOptionalImportMessage) {
    [self mergeOptionalImportMessage:other.optionalImportMessage];
  }
  if (other.hasOptionalNestedEnum) {
    [self setOptionalNestedEnum:other.optionalNestedEnum];
  }
  if (other.hasOptionalForeignEnum) {
    [self setOptionalForeignEnum:other.optionalForeignEnum];
  }
  if (other.hasOptionalImportEnum) {
    [self setOptionalImportEnum:other.optionalImportEnum];
  }
  if (other.hasOptionalStringPiece) {
    [self setOptionalStringPiece:other.optionalStringPiece];
  }
  if (other.hasOptionalCord) {
    [self setOptionalCord:other.optionalCord];
  }
  if (other.hasOptionalPublicImportMessage) {
    [self mergeOptionalPublicImportMessage:other.optionalPublicImportMessage];
  }
  if (other.hasOptionalLazyMessage) {
    [self mergeOptionalLazyMessage:other.optionalLazyMessage];
  }
  if (other.repeatedInt32Array.count > 0) {
    if (_result.repeatedInt32Array == nil) {
      _result.repeatedInt32Array = [other.repeatedInt32Array copy];
    } else {
      [_result.repeatedInt32Array appendArray:other.repeatedInt32Array];
    }
  }
  if (other.repeatedInt64Array.count > 0) {
    if (_result.repeatedInt64Array == nil) {
      _result.repeatedInt64Array = [other.repeatedInt64Array copy];
    } else {
      [_result.repeatedInt64Array appendArray:other.repeatedInt64Array];
    }
  }
  if (other.repeatedUint32Array.count > 0) {
    if (_result.repeatedUint32Array == nil) {
      _result.repeatedUint32Array = [other.repeatedUint32Array copy];
    } else {
      [_result.repeatedUint32Array appendArray:other.repeatedUint32Array];
    }
  }
  if (other.repeatedUint64Array.count > 0) {
    if (_result.repeatedUint64Array == nil) {
      _result.repeatedUint64Array = [other.repeatedUint64Array copy];
    } else {
      [_result.repeatedUint64Array appendArray:other.repeatedUint64Array];
    }
  }
  if (other.repeatedSint32Array.count > 0) {
    if (_result.repeatedSint32Array == nil) {
      _result.repeatedSint32Array = [other.repeatedSint32Array copy];
    } else {
      [_result.repeatedSint32Array appendArray:other.repeatedSint32Array];
    }
  }
  if (other.repeatedSint64Array.count > 0) {
    if (_result.repeatedSint64Array == nil) {
      _result.repeatedSint64Array = [other.repeatedSint64Array copy];
    } else {
      [_result.repeatedSint64Array appendArray:other.repeatedSint64Array];
    }
  }
  if (other.repeatedFixed32Array.count > 0) {
    if (_result.repeatedFixed32Array == nil) {
      _result.repeatedFixed32Array = [other.repeatedFixed32Array copy];
    } else {
      [_result.repeatedFixed32Array appendArray:other.repeatedFixed32Array];
    }
  }
  if (other.repeatedFixed64Array.count > 0) {
    if (_result.repeatedFixed64Array == nil) {
      _result.repeatedFixed64Array = [other.repeatedFixed64Array copy];
    } else {
      [_result.repeatedFixed64Array appendArray:other.repeatedFixed64Array];
    }
  }
  if (other.repeatedSfixed32Array.count > 0) {
    if (_result.repeatedSfixed32Array == nil) {
      _result.repeatedSfixed32Array = [other.repeatedSfixed32Array copy];
    } else {
      [_result.repeatedSfixed32Array appendArray:other.repeatedSfixed32Array];
    }
  }
  if (other.repeatedSfixed64Array.count > 0) {
    if (_result.repeatedSfixed64Array == nil) {
      _result.repeatedSfixed64Array = [other.repeatedSfixed64Array copy];
    } else {
      [_result.repeatedSfixed64Array appendArray:other.repeatedSfixed64Array];
    }
  }
  if (other.repeatedFloatArray.count > 0) {
    if (_result.repeatedFloatArray == nil) {
      _result.repeatedFloatArray = [other.repeatedFloatArray copy];
    } else {
      [_result.repeatedFloatArray appendArray:other.repeatedFloatArray];
    }
  }
  if (other.repeatedDoubleArray.count > 0) {
    if (_result.repeatedDoubleArray == nil) {
      _result.repeatedDoubleArray = [other.repeatedDoubleArray copy];
    } else {
      [_result.repeatedDoubleArray appendArray:other.repeatedDoubleArray];
    }
  }
  if (other.repeatedBoolArray.count > 0) {
    if (_result.repeatedBoolArray == nil) {
      _result.repeatedBoolArray = [other.repeatedBoolArray copy];
    } else {
      [_result.repeatedBoolArray appendArray:other.repeatedBoolArray];
    }
  }
  if (other.repeatedStringArray.count > 0) {
    if (_result.repeatedStringArray == nil) {
      _result.repeatedStringArray = [[NSMutableArray alloc] initWithArray:other.repeatedStringArray];
    } else {
      [_result.repeatedStringArray addObjectsFromArray:other.repeatedStringArray];
    }
  }
  if (other.repeatedBytesArray.count > 0) {
    if (_result.repeatedBytesArray == nil) {
      _result.repeatedBytesArray = [[NSMutableArray alloc] initWithArray:other.repeatedBytesArray];
    } else {
      [_result.repeatedBytesArray addObjectsFromArray:other.repeatedBytesArray];
    }
  }
  if (other.RepeatedGroupArray.count > 0) {
    if (_result.RepeatedGroupArray == nil) {
      _result.RepeatedGroupArray = [[NSMutableArray alloc] initWithArray:other.RepeatedGroupArray];
    } else {
      [_result.RepeatedGroupArray addObjectsFromArray:other.RepeatedGroupArray];
    }
  }
  if (other.repeatedNestedMessageArray.count > 0) {
    if (_result.repeatedNestedMessageArray == nil) {
      _result.repeatedNestedMessageArray = [[NSMutableArray alloc] initWithArray:other.repeatedNestedMessageArray];
    } else {
      [_result.repeatedNestedMessageArray addObjectsFromArray:other.repeatedNestedMessageArray];
    }
  }
  if (other.repeatedForeignMessageArray.count > 0) {
    if (_result.repeatedForeignMessageArray == nil) {
      _result.repeatedForeignMessageArray = [[NSMutableArray alloc] initWithArray:other.repeatedForeignMessageArray];
    } else {
      [_result.repeatedForeignMessageArray addObjectsFromArray:other.repeatedForeignMessageArray];
    }
  }
  if (other.repeatedImportMessageArray.count > 0) {
    if (_result.repeatedImportMessageArray == nil) {
      _result.repeatedImportMessageArray = [[NSMutableArray alloc] initWithArray:other.repeatedImportMessageArray];
    } else {
      [_result.repeatedImportMessageArray addObjectsFromArray:other.repeatedImportMessageArray];
    }
  }
  if (other.repeatedNestedEnumArray.count > 0) {
    if (_result.repeatedNestedEnumArray == nil) {
      _result.repeatedNestedEnumArray = [[NSMutableArray alloc] initWithArray:other.repeatedNestedEnumArray];
    } else {
      [_result.repeatedNestedEnumArray addObjectsFromArray:other.repeatedNestedEnumArray];
    }
  }
  if (other.repeatedForeignEnumArray.count > 0) {
    if (_result.repeatedForeignEnumArray == nil) {
      _result.repeatedForeignEnumArray = [[NSMutableArray alloc] initWithArray:other.repeatedForeignEnumArray];
    } else {
      [_result.repeatedForeignEnumArray addObjectsFromArray:other.repeatedForeignEnumArray];
    }
  }
  if (other.repeatedImportEnumArray.count > 0) {
    if (_result.repeatedImportEnumArray == nil) {
      _result.repeatedImportEnumArray = [[NSMutableArray alloc] initWithArray:other.repeatedImportEnumArray];
    } else {
      [_result.repeatedImportEnumArray addObjectsFromArray:other.repeatedImportEnumArray];
    }
  }
  if (other.repeatedStringPieceArray.count > 0) {
    if (_result.repeatedStringPieceArray == nil) {
      _result.repeatedStringPieceArray = [[NSMutableArray alloc] initWithArray:other.repeatedStringPieceArray];
    } else {
      [_result.repeatedStringPieceArray addObjectsFromArray:other.repeatedStringPieceArray];
    }
  }
  if (other.repeatedCordArray.count > 0) {
    if (_result.repeatedCordArray == nil) {
      _result.repeatedCordArray = [[NSMutableArray alloc] initWithArray:other.repeatedCordArray];
    } else {
      [_result.repeatedCordArray addObjectsFromArray:other.repeatedCordArray];
    }
  }
  if (other.repeatedLazyMessageArray.count > 0) {
    if (_result.repeatedLazyMessageArray == nil) {
      _result.repeatedLazyMessageArray = [[NSMutableArray alloc] initWithArray:other.repeatedLazyMessageArray];
    } else {
      [_result.repeatedLazyMessageArray addObjectsFromArray:other.repeatedLazyMessageArray];
    }
  }
  if (other.hasDefaultInt32) {
    [self setDefaultInt32:other.defaultInt32];
  }
  if (other.hasDefaultInt64) {
    [self setDefaultInt64:other.defaultInt64];
  }
  if (other.hasDefaultUint32) {
    [self setDefaultUint32:other.defaultUint32];
  }
  if (other.hasDefaultUint64) {
    [self setDefaultUint64:other.defaultUint64];
  }
  if (other.hasDefaultSint32) {
    [self setDefaultSint32:other.defaultSint32];
  }
  if (other.hasDefaultSint64) {
    [self setDefaultSint64:other.defaultSint64];
  }
  if (other.hasDefaultFixed32) {
    [self setDefaultFixed32:other.defaultFixed32];
  }
  if (other.hasDefaultFixed64) {
    [self setDefaultFixed64:other.defaultFixed64];
  }
  if (other.hasDefaultSfixed32) {
    [self setDefaultSfixed32:other.defaultSfixed32];
  }
  if (other.hasDefaultSfixed64) {
    [self setDefaultSfixed64:other.defaultSfixed64];
  }
  if (other.hasDefaultFloat) {
    [self setDefaultFloat:other.defaultFloat];
  }
  if (other.hasDefaultDouble) {
    [self setDefaultDouble:other.defaultDouble];
  }
  if (other.hasDefaultBool) {
    [self setDefaultBool:other.defaultBool];
  }
  if (other.hasDefaultString) {
    [self setDefaultString:other.defaultString];
  }
  if (other.hasDefaultBytes) {
    [self setDefaultBytes:other.defaultBytes];
  }
  if (other.hasDefaultNestedEnum) {
    [self setDefaultNestedEnum:other.defaultNestedEnum];
  }
  if (other.hasDefaultForeignEnum) {
    [self setDefaultForeignEnum:other.defaultForeignEnum];
  }
  if (other.hasDefaultImportEnum) {
    [self setDefaultImportEnum:other.defaultImportEnum];
  }
  if (other.hasDefaultStringPiece) {
    [self setDefaultStringPiece:other.defaultStringPiece];
  }
  if (other.hasDefaultCord) {
    [self setDefaultCord:other.defaultCord];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (instancetype)mergeFromCodedInputStream:(PBCodedInputStream*)input
                        extensionRegistry:(PBExtensionRegistry*)extensionRegistry
{
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input
                       unknownFields:unknownFields
                   extensionRegistry:extensionRegistry
                                 tag:tag])
        {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setOptionalInt32:[input readInt32]];
        break;
      }
      case 16: {
        [self setOptionalInt64:[input readInt64]];
        break;
      }
      case 24: {
        [self setOptionalUint32:[input readUInt32]];
        break;
      }
      case 32: {
        [self setOptionalUint64:[input readUInt64]];
        break;
      }
      case 40: {
        [self setOptionalSint32:[input readSInt32]];
        break;
      }
      case 48: {
        [self setOptionalSint64:[input readSInt64]];
        break;
      }
      case 61: {
        [self setOptionalFixed32:[input readFixed32]];
        break;
      }
      case 65: {
        [self setOptionalFixed64:[input readFixed64]];
        break;
      }
      case 77: {
        [self setOptionalSfixed32:[input readSFixed32]];
        break;
      }
      case 81: {
        [self setOptionalSfixed64:[input readSFixed64]];
        break;
      }
      case 93: {
        [self setOptionalFloat:[input readFloat]];
        break;
      }
      case 97: {
        [self setOptionalDouble:[input readDouble]];
        break;
      }
      case 104: {
        [self setOptionalBool:[input readBool]];
        break;
      }
      case 114: {
        [self setOptionalString:[input readString]];
        break;
      }
      case 122: {
        [self setOptionalBytes:[input readData]];
        break;
      }
      case 131: {
        TestAllTypesLite_OptionalGroup_Builder* subBuilder = [TestAllTypesLite_OptionalGroup builder];
        if (self.hasOptionalGroup) {
          [subBuilder mergeFrom:self.OptionalGroup];
        }
        [input readGroup:16 builder:subBuilder extensionRegistry:extensionRegistry];
        [self setOptionalGroup:[subBuilder buildPartial]];
        break;
      }
      case 146: {
        TestAllTypesLite_NestedMessage_Builder* subBuilder = [TestAllTypesLite_NestedMessage builder];
        if (self.hasOptionalNestedMessage) {
          [subBuilder mergeFrom:self.optionalNestedMessage];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOptionalNestedMessage:[subBuilder buildPartial]];
        break;
      }
      case 154: {
        ForeignMessageLite_Builder* subBuilder = [ForeignMessageLite builder];
        if (self.hasOptionalForeignMessage) {
          [subBuilder mergeFrom:self.optionalForeignMessage];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOptionalForeignMessage:[subBuilder buildPartial]];
        break;
      }
      case 162: {
        ImportMessageLite_Builder* subBuilder = [ImportMessageLite builder];
        if (self.hasOptionalImportMessage) {
          [subBuilder mergeFrom:self.optionalImportMessage];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOptionalImportMessage:[subBuilder buildPartial]];
        break;
      }
      case 168: {
        int32_t value = [input readEnum];
        if (TestAllTypesLite_NestedEnumIsValidValue(value)) {
          [self setOptionalNestedEnum:value];
        } else {
          [unknownFields mergeVarintField:21 value:value];
        }
        break;
      }
      case 176: {
        int32_t value = [input readEnum];
        if (ForeignEnumLiteIsValidValue(value)) {
          [self setOptionalForeignEnum:value];
        } else {
          [unknownFields mergeVarintField:22 value:value];
        }
        break;
      }
      case 184: {
        int32_t value = [input readEnum];
        if (ImportEnumLiteIsValidValue(value)) {
          [self setOptionalImportEnum:value];
        } else {
          [unknownFields mergeVarintField:23 value:value];
        }
        break;
      }
      case 194: {
        [self setOptionalStringPiece:[input readString]];
        break;
      }
      case 202: {
        [self setOptionalCord:[input readString]];
        break;
      }
      case 210: {
        PublicImportMessageLite_Builder* subBuilder = [PublicImportMessageLite builder];
        if (self.hasOptionalPublicImportMessage) {
          [subBuilder mergeFrom:self.optionalPublicImportMessage];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOptionalPublicImportMessage:[subBuilder buildPartial]];
        break;
      }
      case 218: {
        TestAllTypesLite_NestedMessage_Builder* subBuilder = [TestAllTypesLite_NestedMessage builder];
        if (self.hasOptionalLazyMessage) {
          [subBuilder mergeFrom:self.optionalLazyMessage];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOptionalLazyMessage:[subBuilder buildPartial]];
        break;
      }
      case 248: {
        [self addRepeatedInt32:[input readInt32]];
        break;
      }
      case 256: {
        [self addRepeatedInt64:[input readInt64]];
        break;
      }
      case 264: {
        [self addRepeatedUint32:[input readUInt32]];
        break;
      }
      case 272: {
        [self addRepeatedUint64:[input readUInt64]];
        break;
      }
      case 280: {
        [self addRepeatedSint32:[input readSInt32]];
        break;
      }
      case 288: {
        [self addRepeatedSint64:[input readSInt64]];
        break;
      }
      case 301: {
        [self addRepeatedFixed32:[input readFixed32]];
        break;
      }
      case 305: {
        [self addRepeatedFixed64:[input readFixed64]];
        break;
      }
      case 317: {
        [self addRepeatedSfixed32:[input readSFixed32]];
        break;
      }
      case 321: {
        [self addRepeatedSfixed64:[input readSFixed64]];
        break;
      }
      case 333: {
        [self addRepeatedFloat:[input readFloat]];
        break;
      }
      case 337: {
        [self addRepeatedDouble:[input readDouble]];
        break;
      }
      case 344: {
        [self addRepeatedBool:[input readBool]];
        break;
      }
      case 354: {
        [self addRepeatedString:[input readString]];
        break;
      }
      case 362: {
        [self addRepeatedBytes:[input readData]];
        break;
      }
      case 371: {
        TestAllTypesLite_RepeatedGroup_Builder* subBuilder = [TestAllTypesLite_RepeatedGroup builder];
        [input readGroup:46 builder:subBuilder extensionRegistry:extensionRegistry];
        [self addRepeatedGroup:[subBuilder buildPartial]];
        break;
      }
      case 386: {
        TestAllTypesLite_NestedMessage_Builder* subBuilder = [TestAllTypesLite_NestedMessage builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRepeatedNestedMessage:[subBuilder buildPartial]];
        break;
      }
      case 394: {
        ForeignMessageLite_Builder* subBuilder = [ForeignMessageLite builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRepeatedForeignMessage:[subBuilder buildPartial]];
        break;
      }
      case 402: {
        ImportMessageLite_Builder* subBuilder = [ImportMessageLite builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRepeatedImportMessage:[subBuilder buildPartial]];
        break;
      }
      case 408: {
        int32_t value = [input readEnum];
        if (TestAllTypesLite_NestedEnumIsValidValue(value)) {
          [self addRepeatedNestedEnum:value];
        } else {
          [unknownFields mergeVarintField:51 value:value];
        }
        break;
      }
      case 416: {
        int32_t value = [input readEnum];
        if (ForeignEnumLiteIsValidValue(value)) {
          [self addRepeatedForeignEnum:value];
        } else {
          [unknownFields mergeVarintField:52 value:value];
        }
        break;
      }
      case 424: {
        int32_t value = [input readEnum];
        if (ImportEnumLiteIsValidValue(value)) {
          [self addRepeatedImportEnum:value];
        } else {
          [unknownFields mergeVarintField:53 value:value];
        }
        break;
      }
      case 434: {
        [self addRepeatedStringPiece:[input readString]];
        break;
      }
      case 442: {
        [self addRepeatedCord:[input readString]];
        break;
      }
      case 458: {
        TestAllTypesLite_NestedMessage_Builder* subBuilder = [TestAllTypesLite_NestedMessage builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRepeatedLazyMessage:[subBuilder buildPartial]];
        break;
      }
      case 488: {
        [self setDefaultInt32:[input readInt32]];
        break;
      }
      case 496: {
        [self setDefaultInt64:[input readInt64]];
        break;
      }
      case 504: {
        [self setDefaultUint32:[input readUInt32]];
        break;
      }
      case 512: {
        [self setDefaultUint64:[input readUInt64]];
        break;
      }
      case 520: {
        [self setDefaultSint32:[input readSInt32]];
        break;
      }
      case 528: {
        [self setDefaultSint64:[input readSInt64]];
        break;
      }
      case 541: {
        [self setDefaultFixed32:[input readFixed32]];
        break;
      }
      case 545: {
        [self setDefaultFixed64:[input readFixed64]];
        break;
      }
      case 557: {
        [self setDefaultSfixed32:[input readSFixed32]];
        break;
      }
      case 561: {
        [self setDefaultSfixed64:[input readSFixed64]];
        break;
      }
      case 573: {
        [self setDefaultFloat:[input readFloat]];
        break;
      }
      case 577: {
        [self setDefaultDouble:[input readDouble]];
        break;
      }
      case 584: {
        [self setDefaultBool:[input readBool]];
        break;
      }
      case 594: {
        [self setDefaultString:[input readString]];
        break;
      }
      case 602: {
        [self setDefaultBytes:[input readData]];
        break;
      }
      case 648: {
        int32_t value = [input readEnum];
        if (TestAllTypesLite_NestedEnumIsValidValue(value)) {
          [self setDefaultNestedEnum:value];
        } else {
          [unknownFields mergeVarintField:81 value:value];
        }
        break;
      }
      case 656: {
        int32_t value = [input readEnum];
        if (ForeignEnumLiteIsValidValue(value)) {
          [self setDefaultForeignEnum:value];
        } else {
          [unknownFields mergeVarintField:82 value:value];
        }
        break;
      }
      case 664: {
        int32_t value = [input readEnum];
        if (ImportEnumLiteIsValidValue(value)) {
          [self setDefaultImportEnum:value];
        } else {
          [unknownFields mergeVarintField:83 value:value];
        }
        break;
      }
      case 674: {
        [self setDefaultStringPiece:[input readString]];
        break;
      }
      case 682: {
        [self setDefaultCord:[input readString]];
        break;
      }
    }
  }
}
- (BOOL)hasOptionalInt32 {
  return _result.hasOptionalInt32;
}
- (int32_t) optionalInt32 {
  return _result.optionalInt32;
}
- (instancetype)setOptionalInt32:(int32_t)value {
  _result.hasOptionalInt32 = YES;
  _result.optionalInt32 = value;
  return self;
}
- (instancetype)clearOptionalInt32 {
  _result.hasOptionalInt32 = NO;
  _result.optionalInt32 = 0;
  return self;
}
- (BOOL)hasOptionalInt64 {
  return _result.hasOptionalInt64;
}
- (int64_t) optionalInt64 {
  return _result.optionalInt64;
}
- (instancetype)setOptionalInt64:(int64_t)value {
  _result.hasOptionalInt64 = YES;
  _result.optionalInt64 = value;
  return self;
}
- (instancetype)clearOptionalInt64 {
  _result.hasOptionalInt64 = NO;
  _result.optionalInt64 = 0L;
  return self;
}
- (BOOL)hasOptionalUint32 {
  return _result.hasOptionalUint32;
}
- (uint32_t) optionalUint32 {
  return _result.optionalUint32;
}
- (instancetype)setOptionalUint32:(uint32_t)value {
  _result.hasOptionalUint32 = YES;
  _result.optionalUint32 = value;
  return self;
}
- (instancetype)clearOptionalUint32 {
  _result.hasOptionalUint32 = NO;
  _result.optionalUint32 = 0;
  return self;
}
- (BOOL)hasOptionalUint64 {
  return _result.hasOptionalUint64;
}
- (uint64_t) optionalUint64 {
  return _result.optionalUint64;
}
- (instancetype)setOptionalUint64:(uint64_t)value {
  _result.hasOptionalUint64 = YES;
  _result.optionalUint64 = value;
  return self;
}
- (instancetype)clearOptionalUint64 {
  _result.hasOptionalUint64 = NO;
  _result.optionalUint64 = 0L;
  return self;
}
- (BOOL)hasOptionalSint32 {
  return _result.hasOptionalSint32;
}
- (int32_t) optionalSint32 {
  return _result.optionalSint32;
}
- (instancetype)setOptionalSint32:(int32_t)value {
  _result.hasOptionalSint32 = YES;
  _result.optionalSint32 = value;
  return self;
}
- (instancetype)clearOptionalSint32 {
  _result.hasOptionalSint32 = NO;
  _result.optionalSint32 = 0;
  return self;
}
- (BOOL)hasOptionalSint64 {
  return _result.hasOptionalSint64;
}
- (int64_t) optionalSint64 {
  return _result.optionalSint64;
}
- (instancetype)setOptionalSint64:(int64_t)value {
  _result.hasOptionalSint64 = YES;
  _result.optionalSint64 = value;
  return self;
}
- (instancetype)clearOptionalSint64 {
  _result.hasOptionalSint64 = NO;
  _result.optionalSint64 = 0L;
  return self;
}
- (BOOL)hasOptionalFixed32 {
  return _result.hasOptionalFixed32;
}
- (uint32_t) optionalFixed32 {
  return _result.optionalFixed32;
}
- (instancetype)setOptionalFixed32:(uint32_t)value {
  _result.hasOptionalFixed32 = YES;
  _result.optionalFixed32 = value;
  return self;
}
- (instancetype)clearOptionalFixed32 {
  _result.hasOptionalFixed32 = NO;
  _result.optionalFixed32 = 0;
  return self;
}
- (BOOL)hasOptionalFixed64 {
  return _result.hasOptionalFixed64;
}
- (uint64_t) optionalFixed64 {
  return _result.optionalFixed64;
}
- (instancetype)setOptionalFixed64:(uint64_t)value {
  _result.hasOptionalFixed64 = YES;
  _result.optionalFixed64 = value;
  return self;
}
- (instancetype)clearOptionalFixed64 {
  _result.hasOptionalFixed64 = NO;
  _result.optionalFixed64 = 0L;
  return self;
}
- (BOOL)hasOptionalSfixed32 {
  return _result.hasOptionalSfixed32;
}
- (int32_t) optionalSfixed32 {
  return _result.optionalSfixed32;
}
- (instancetype)setOptionalSfixed32:(int32_t)value {
  _result.hasOptionalSfixed32 = YES;
  _result.optionalSfixed32 = value;
  return self;
}
- (instancetype)clearOptionalSfixed32 {
  _result.hasOptionalSfixed32 = NO;
  _result.optionalSfixed32 = 0;
  return self;
}
- (BOOL)hasOptionalSfixed64 {
  return _result.hasOptionalSfixed64;
}
- (int64_t) optionalSfixed64 {
  return _result.optionalSfixed64;
}
- (instancetype)setOptionalSfixed64:(int64_t)value {
  _result.hasOptionalSfixed64 = YES;
  _result.optionalSfixed64 = value;
  return self;
}
- (instancetype)clearOptionalSfixed64 {
  _result.hasOptionalSfixed64 = NO;
  _result.optionalSfixed64 = 0L;
  return self;
}
- (BOOL)hasOptionalFloat {
  return _result.hasOptionalFloat;
}
- (Float32) optionalFloat {
  return _result.optionalFloat;
}
- (instancetype)setOptionalFloat:(Float32)value {
  _result.hasOptionalFloat = YES;
  _result.optionalFloat = value;
  return self;
}
- (instancetype)clearOptionalFloat {
  _result.hasOptionalFloat = NO;
  _result.optionalFloat = 0;
  return self;
}
- (BOOL)hasOptionalDouble {
  return _result.hasOptionalDouble;
}
- (Float64) optionalDouble {
  return _result.optionalDouble;
}
- (instancetype)setOptionalDouble:(Float64)value {
  _result.hasOptionalDouble = YES;
  _result.optionalDouble = value;
  return self;
}
- (instancetype)clearOptionalDouble {
  _result.hasOptionalDouble = NO;
  _result.optionalDouble = 0;
  return self;
}
- (BOOL)hasOptionalBool {
  return _result.hasOptionalBool;
}
- (BOOL) optionalBool {
  return _result.optionalBool;
}
- (instancetype)setOptionalBool:(BOOL)value {
  _result.hasOptionalBool = YES;
  _result.optionalBool = value;
  return self;
}
- (instancetype)clearOptionalBool {
  _result.hasOptionalBool = NO;
  _result.optionalBool = NO;
  return self;
}
- (BOOL)hasOptionalString {
  return _result.hasOptionalString;
}
- (NSString *) optionalString {
  return _result.optionalString;
}
- (instancetype)setOptionalString:(NSString *)value {
  _result.hasOptionalString = YES;
  _result.optionalString = value;
  return self;
}
- (instancetype)clearOptionalString {
  _result.hasOptionalString = NO;
  _result.optionalString = @"";
  return self;
}
- (BOOL)hasOptionalBytes {
  return _result.hasOptionalBytes;
}
- (NSData *) optionalBytes {
  return _result.optionalBytes;
}
- (instancetype)setOptionalBytes:(NSData *)value {
  _result.hasOptionalBytes = YES;
  _result.optionalBytes = value;
  return self;
}
- (instancetype)clearOptionalBytes {
  _result.hasOptionalBytes = NO;
  _result.optionalBytes = [NSData data];
  return self;
}
- (BOOL)hasOptionalGroup {
  return _result.hasOptionalGroup;
}
- (TestAllTypesLite_OptionalGroup*)OptionalGroup {
  return _result.OptionalGroup;
}
- (instancetype)setOptionalGroup:(TestAllTypesLite_OptionalGroup*)value {
  _result.hasOptionalGroup = YES;
  _result.OptionalGroup = value;
  return self;
}
- (instancetype)setOptionalGroupBuilder:(TestAllTypesLite_OptionalGroup_Builder*)builderForValue {
  return [self setOptionalGroup:[builderForValue build]];
}
- (instancetype)mergeOptionalGroup:(TestAllTypesLite_OptionalGroup*)value {
  if (_result.hasOptionalGroup &&
      _result.OptionalGroup != [TestAllTypesLite_OptionalGroup defaultInstance]) {
    _result.OptionalGroup =
      [[[TestAllTypesLite_OptionalGroup builderWithPrototype:_result.OptionalGroup] mergeFrom:value] buildPartial];
  } else {
    _result.OptionalGroup = value;
  }
  _result.hasOptionalGroup = YES;
  return self;
}
- (instancetype)clearOptionalGroup {
  _result.hasOptionalGroup = NO;
  _result.OptionalGroup = [TestAllTypesLite_OptionalGroup defaultInstance];
  return self;
}
- (BOOL)hasOptionalNestedMessage {
  return _result.hasOptionalNestedMessage;
}
- (TestAllTypesLite_NestedMessage*)optionalNestedMessage {
  return _result.optionalNestedMessage;
}
- (instancetype)setOptionalNestedMessage:(TestAllTypesLite_NestedMessage*)value {
  _result.hasOptionalNestedMessage = YES;
  _result.optionalNestedMessage = value;
  return self;
}
- (instancetype)setOptionalNestedMessageBuilder:(TestAllTypesLite_NestedMessage_Builder*)builderForValue {
  return [self setOptionalNestedMessage:[builderForValue build]];
}
- (instancetype)mergeOptionalNestedMessage:(TestAllTypesLite_NestedMessage*)value {
  if (_result.hasOptionalNestedMessage &&
      _result.optionalNestedMessage != [TestAllTypesLite_NestedMessage defaultInstance]) {
    _result.optionalNestedMessage =
      [[[TestAllTypesLite_NestedMessage builderWithPrototype:_result.optionalNestedMessage] mergeFrom:value] buildPartial];
  } else {
    _result.optionalNestedMessage = value;
  }
  _result.hasOptionalNestedMessage = YES;
  return self;
}
- (instancetype)clearOptionalNestedMessage {
  _result.hasOptionalNestedMessage = NO;
  _result.optionalNestedMessage = [TestAllTypesLite_NestedMessage defaultInstance];
  return self;
}
- (BOOL)hasOptionalForeignMessage {
  return _result.hasOptionalForeignMessage;
}
- (ForeignMessageLite*)optionalForeignMessage {
  return _result.optionalForeignMessage;
}
- (instancetype)setOptionalForeignMessage:(ForeignMessageLite*)value {
  _result.hasOptionalForeignMessage = YES;
  _result.optionalForeignMessage = value;
  return self;
}
- (instancetype)setOptionalForeignMessageBuilder:(ForeignMessageLite_Builder*)builderForValue {
  return [self setOptionalForeignMessage:[builderForValue build]];
}
- (instancetype)mergeOptionalForeignMessage:(ForeignMessageLite*)value {
  if (_result.hasOptionalForeignMessage &&
      _result.optionalForeignMessage != [ForeignMessageLite defaultInstance]) {
    _result.optionalForeignMessage =
      [[[ForeignMessageLite builderWithPrototype:_result.optionalForeignMessage] mergeFrom:value] buildPartial];
  } else {
    _result.optionalForeignMessage = value;
  }
  _result.hasOptionalForeignMessage = YES;
  return self;
}
- (instancetype)clearOptionalForeignMessage {
  _result.hasOptionalForeignMessage = NO;
  _result.optionalForeignMessage = [ForeignMessageLite defaultInstance];
  return self;
}
- (BOOL)hasOptionalImportMessage {
  return _result.hasOptionalImportMessage;
}
- (ImportMessageLite*)optionalImportMessage {
  return _result.optionalImportMessage;
}
- (instancetype)setOptionalImportMessage:(ImportMessageLite*)value {
  _result.hasOptionalImportMessage = YES;
  _result.optionalImportMessage = value;
  return self;
}
- (instancetype)setOptionalImportMessageBuilder:(ImportMessageLite_Builder*)builderForValue {
  return [self setOptionalImportMessage:[builderForValue build]];
}
- (instancetype)mergeOptionalImportMessage:(ImportMessageLite*)value {
  if (_result.hasOptionalImportMessage &&
      _result.optionalImportMessage != [ImportMessageLite defaultInstance]) {
    _result.optionalImportMessage =
      [[[ImportMessageLite builderWithPrototype:_result.optionalImportMessage] mergeFrom:value] buildPartial];
  } else {
    _result.optionalImportMessage = value;
  }
  _result.hasOptionalImportMessage = YES;
  return self;
}
- (instancetype)clearOptionalImportMessage {
  _result.hasOptionalImportMessage = NO;
  _result.optionalImportMessage = [ImportMessageLite defaultInstance];
  return self;
}
- (BOOL)hasOptionalNestedEnum {
  return _result.hasOptionalNestedEnum;
}
- (TestAllTypesLite_NestedEnum)optionalNestedEnum {
  return _result.optionalNestedEnum;
}
- (TestAllTypesLite_Builder*)setOptionalNestedEnum:(TestAllTypesLite_NestedEnum)value {
  _result.hasOptionalNestedEnum = YES;
  _result.optionalNestedEnum = value;
  return self;
}
- (TestAllTypesLite_Builder*)clearOptionalNestedEnum {
  _result.hasOptionalNestedEnum = NO;
  _result.optionalNestedEnum = TestAllTypesLite_NestedEnumFOO;
  return self;
}
- (BOOL)hasOptionalForeignEnum {
  return _result.hasOptionalForeignEnum;
}
- (ForeignEnumLite)optionalForeignEnum {
  return _result.optionalForeignEnum;
}
- (TestAllTypesLite_Builder*)setOptionalForeignEnum:(ForeignEnumLite)value {
  _result.hasOptionalForeignEnum = YES;
  _result.optionalForeignEnum = value;
  return self;
}
- (TestAllTypesLite_Builder*)clearOptionalForeignEnum {
  _result.hasOptionalForeignEnum = NO;
  _result.optionalForeignEnum = ForeignEnumLiteFOREIGNLITEFOO;
  return self;
}
- (BOOL)hasOptionalImportEnum {
  return _result.hasOptionalImportEnum;
}
- (ImportEnumLite)optionalImportEnum {
  return _result.optionalImportEnum;
}
- (TestAllTypesLite_Builder*)setOptionalImportEnum:(ImportEnumLite)value {
  _result.hasOptionalImportEnum = YES;
  _result.optionalImportEnum = value;
  return self;
}
- (TestAllTypesLite_Builder*)clearOptionalImportEnum {
  _result.hasOptionalImportEnum = NO;
  _result.optionalImportEnum = ImportEnumLiteIMPORTLITEFOO;
  return self;
}
- (BOOL)hasOptionalStringPiece {
  return _result.hasOptionalStringPiece;
}
- (NSString *) optionalStringPiece {
  return _result.optionalStringPiece;
}
- (instancetype)setOptionalStringPiece:(NSString *)value {
  _result.hasOptionalStringPiece = YES;
  _result.optionalStringPiece = value;
  return self;
}
- (instancetype)clearOptionalStringPiece {
  _result.hasOptionalStringPiece = NO;
  _result.optionalStringPiece = @"";
  return self;
}
- (BOOL)hasOptionalCord {
  return _result.hasOptionalCord;
}
- (NSString *) optionalCord {
  return _result.optionalCord;
}
- (instancetype)setOptionalCord:(NSString *)value {
  _result.hasOptionalCord = YES;
  _result.optionalCord = value;
  return self;
}
- (instancetype)clearOptionalCord {
  _result.hasOptionalCord = NO;
  _result.optionalCord = @"";
  return self;
}
- (BOOL)hasOptionalPublicImportMessage {
  return _result.hasOptionalPublicImportMessage;
}
- (PublicImportMessageLite*)optionalPublicImportMessage {
  return _result.optionalPublicImportMessage;
}
- (instancetype)setOptionalPublicImportMessage:(PublicImportMessageLite*)value {
  _result.hasOptionalPublicImportMessage = YES;
  _result.optionalPublicImportMessage = value;
  return self;
}
- (instancetype)setOptionalPublicImportMessageBuilder:(PublicImportMessageLite_Builder*)builderForValue {
  return [self setOptionalPublicImportMessage:[builderForValue build]];
}
- (instancetype)mergeOptionalPublicImportMessage:(PublicImportMessageLite*)value {
  if (_result.hasOptionalPublicImportMessage &&
      _result.optionalPublicImportMessage != [PublicImportMessageLite defaultInstance]) {
    _result.optionalPublicImportMessage =
      [[[PublicImportMessageLite builderWithPrototype:_result.optionalPublicImportMessage] mergeFrom:value] buildPartial];
  } else {
    _result.optionalPublicImportMessage = value;
  }
  _result.hasOptionalPublicImportMessage = YES;
  return self;
}
- (instancetype)clearOptionalPublicImportMessage {
  _result.hasOptionalPublicImportMessage = NO;
  _result.optionalPublicImportMessage = [PublicImportMessageLite defaultInstance];
  return self;
}
- (BOOL)hasOptionalLazyMessage {
  return _result.hasOptionalLazyMessage;
}
- (TestAllTypesLite_NestedMessage*)optionalLazyMessage {
  return _result.optionalLazyMessage;
}
- (instancetype)setOptionalLazyMessage:(TestAllTypesLite_NestedMessage*)value {
  _result.hasOptionalLazyMessage = YES;
  _result.optionalLazyMessage = value;
  return self;
}
- (instancetype)setOptionalLazyMessageBuilder:(TestAllTypesLite_NestedMessage_Builder*)builderForValue {
  return [self setOptionalLazyMessage:[builderForValue build]];
}
- (instancetype)mergeOptionalLazyMessage:(TestAllTypesLite_NestedMessage*)value {
  if (_result.hasOptionalLazyMessage &&
      _result.optionalLazyMessage != [TestAllTypesLite_NestedMessage defaultInstance]) {
    _result.optionalLazyMessage =
      [[[TestAllTypesLite_NestedMessage builderWithPrototype:_result.optionalLazyMessage] mergeFrom:value] buildPartial];
  } else {
    _result.optionalLazyMessage = value;
  }
  _result.hasOptionalLazyMessage = YES;
  return self;
}
- (instancetype)clearOptionalLazyMessage {
  _result.hasOptionalLazyMessage = NO;
  _result.optionalLazyMessage = [TestAllTypesLite_NestedMessage defaultInstance];
  return self;
}
- (PBAppendableArray *)repeatedInt32 {
  return _result.repeatedInt32Array;
}
- (int32_t)repeatedInt32AtIndex:(NSUInteger)index {
  return [_result repeatedInt32AtIndex:index];
}
- (instancetype)addRepeatedInt32:(int32_t)value {
  if (_result.repeatedInt32Array == nil) {
    _result.repeatedInt32Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [_result.repeatedInt32Array addInt32:value];
  return self;
}
- (instancetype)setRepeatedInt32Array:(NSArray *)array {
  _result.repeatedInt32Array = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt32];
  return self;
}
- (instancetype)setRepeatedInt32Values:(const int32_t *)values count:(NSUInteger)count {
  _result.repeatedInt32Array = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt32];
  return self;
}
- (instancetype)clearRepeatedInt32 {
  _result.repeatedInt32Array = nil;
  return self;
}
- (PBAppendableArray *)repeatedInt64 {
  return _result.repeatedInt64Array;
}
- (int64_t)repeatedInt64AtIndex:(NSUInteger)index {
  return [_result repeatedInt64AtIndex:index];
}
- (instancetype)addRepeatedInt64:(int64_t)value {
  if (_result.repeatedInt64Array == nil) {
    _result.repeatedInt64Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
  }
  [_result.repeatedInt64Array addInt64:value];
  return self;
}
- (instancetype)setRepeatedInt64Array:(NSArray *)array {
  _result.repeatedInt64Array = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt64];
  return self;
}
- (instancetype)setRepeatedInt64Values:(const int64_t *)values count:(NSUInteger)count {
  _result.repeatedInt64Array = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt64];
  return self;
}
- (instancetype)clearRepeatedInt64 {
  _result.repeatedInt64Array = nil;
  return self;
}
- (PBAppendableArray *)repeatedUint32 {
  return _result.repeatedUint32Array;
}
- (uint32_t)repeatedUint32AtIndex:(NSUInteger)index {
  return [_result repeatedUint32AtIndex:index];
}
- (instancetype)addRepeatedUint32:(uint32_t)value {
  if (_result.repeatedUint32Array == nil) {
    _result.repeatedUint32Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt32];
  }
  [_result.repeatedUint32Array addUint32:value];
  return self;
}
- (instancetype)setRepeatedUint32Array:(NSArray *)array {
  _result.repeatedUint32Array = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeUInt32];
  return self;
}
- (instancetype)setRepeatedUint32Values:(const uint32_t *)values count:(NSUInteger)count {
  _result.repeatedUint32Array = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeUInt32];
  return self;
}
- (instancetype)clearRepeatedUint32 {
  _result.repeatedUint32Array = nil;
  return self;
}
- (PBAppendableArray *)repeatedUint64 {
  return _result.repeatedUint64Array;
}
- (uint64_t)repeatedUint64AtIndex:(NSUInteger)index {
  return [_result repeatedUint64AtIndex:index];
}
- (instancetype)addRepeatedUint64:(uint64_t)value {
  if (_result.repeatedUint64Array == nil) {
    _result.repeatedUint64Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt64];
  }
  [_result.repeatedUint64Array addUint64:value];
  return self;
}
- (instancetype)setRepeatedUint64Array:(NSArray *)array {
  _result.repeatedUint64Array = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeUInt64];
  return self;
}
- (instancetype)setRepeatedUint64Values:(const uint64_t *)values count:(NSUInteger)count {
  _result.repeatedUint64Array = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeUInt64];
  return self;
}
- (instancetype)clearRepeatedUint64 {
  _result.repeatedUint64Array = nil;
  return self;
}
- (PBAppendableArray *)repeatedSint32 {
  return _result.repeatedSint32Array;
}
- (int32_t)repeatedSint32AtIndex:(NSUInteger)index {
  return [_result repeatedSint32AtIndex:index];
}
- (instancetype)addRepeatedSint32:(int32_t)value {
  if (_result.repeatedSint32Array == nil) {
    _result.repeatedSint32Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [_result.repeatedSint32Array addInt32:value];
  return self;
}
- (instancetype)setRepeatedSint32Array:(NSArray *)array {
  _result.repeatedSint32Array = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt32];
  return self;
}
- (instancetype)setRepeatedSint32Values:(const int32_t *)values count:(NSUInteger)count {
  _result.repeatedSint32Array = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt32];
  return self;
}
- (instancetype)clearRepeatedSint32 {
  _result.repeatedSint32Array = nil;
  return self;
}
- (PBAppendableArray *)repeatedSint64 {
  return _result.repeatedSint64Array;
}
- (int64_t)repeatedSint64AtIndex:(NSUInteger)index {
  return [_result repeatedSint64AtIndex:index];
}
- (instancetype)addRepeatedSint64:(int64_t)value {
  if (_result.repeatedSint64Array == nil) {
    _result.repeatedSint64Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
  }
  [_result.repeatedSint64Array addInt64:value];
  return self;
}
- (instancetype)setRepeatedSint64Array:(NSArray *)array {
  _result.repeatedSint64Array = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt64];
  return self;
}
- (instancetype)setRepeatedSint64Values:(const int64_t *)values count:(NSUInteger)count {
  _result.repeatedSint64Array = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt64];
  return self;
}
- (instancetype)clearRepeatedSint64 {
  _result.repeatedSint64Array = nil;
  return self;
}
- (PBAppendableArray *)repeatedFixed32 {
  return _result.repeatedFixed32Array;
}
- (uint32_t)repeatedFixed32AtIndex:(NSUInteger)index {
  return [_result repeatedFixed32AtIndex:index];
}
- (instancetype)addRepeatedFixed32:(uint32_t)value {
  if (_result.repeatedFixed32Array == nil) {
    _result.repeatedFixed32Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt32];
  }
  [_result.repeatedFixed32Array addUint32:value];
  return self;
}
- (instancetype)setRepeatedFixed32Array:(NSArray *)array {
  _result.repeatedFixed32Array = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeUInt32];
  return self;
}
- (instancetype)setRepeatedFixed32Values:(const uint32_t *)values count:(NSUInteger)count {
  _result.repeatedFixed32Array = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeUInt32];
  return self;
}
- (instancetype)clearRepeatedFixed32 {
  _result.repeatedFixed32Array = nil;
  return self;
}
- (PBAppendableArray *)repeatedFixed64 {
  return _result.repeatedFixed64Array;
}
- (uint64_t)repeatedFixed64AtIndex:(NSUInteger)index {
  return [_result repeatedFixed64AtIndex:index];
}
- (instancetype)addRepeatedFixed64:(uint64_t)value {
  if (_result.repeatedFixed64Array == nil) {
    _result.repeatedFixed64Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt64];
  }
  [_result.repeatedFixed64Array addUint64:value];
  return self;
}
- (instancetype)setRepeatedFixed64Array:(NSArray *)array {
  _result.repeatedFixed64Array = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeUInt64];
  return self;
}
- (instancetype)setRepeatedFixed64Values:(const uint64_t *)values count:(NSUInteger)count {
  _result.repeatedFixed64Array = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeUInt64];
  return self;
}
- (instancetype)clearRepeatedFixed64 {
  _result.repeatedFixed64Array = nil;
  return self;
}
- (PBAppendableArray *)repeatedSfixed32 {
  return _result.repeatedSfixed32Array;
}
- (int32_t)repeatedSfixed32AtIndex:(NSUInteger)index {
  return [_result repeatedSfixed32AtIndex:index];
}
- (instancetype)addRepeatedSfixed32:(int32_t)value {
  if (_result.repeatedSfixed32Array == nil) {
    _result.repeatedSfixed32Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [_result.repeatedSfixed32Array addInt32:value];
  return self;
}
- (instancetype)setRepeatedSfixed32Array:(NSArray *)array {
  _result.repeatedSfixed32Array = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt32];
  return self;
}
- (instancetype)setRepeatedSfixed32Values:(const int32_t *)values count:(NSUInteger)count {
  _result.repeatedSfixed32Array = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt32];
  return self;
}
- (instancetype)clearRepeatedSfixed32 {
  _result.repeatedSfixed32Array = nil;
  return self;
}
- (PBAppendableArray *)repeatedSfixed64 {
  return _result.repeatedSfixed64Array;
}
- (int64_t)repeatedSfixed64AtIndex:(NSUInteger)index {
  return [_result repeatedSfixed64AtIndex:index];
}
- (instancetype)addRepeatedSfixed64:(int64_t)value {
  if (_result.repeatedSfixed64Array == nil) {
    _result.repeatedSfixed64Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
  }
  [_result.repeatedSfixed64Array addInt64:value];
  return self;
}
- (instancetype)setRepeatedSfixed64Array:(NSArray *)array {
  _result.repeatedSfixed64Array = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt64];
  return self;
}
- (instancetype)setRepeatedSfixed64Values:(const int64_t *)values count:(NSUInteger)count {
  _result.repeatedSfixed64Array = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt64];
  return self;
}
- (instancetype)clearRepeatedSfixed64 {
  _result.repeatedSfixed64Array = nil;
  return self;
}
- (PBAppendableArray *)repeatedFloat {
  return _result.repeatedFloatArray;
}
- (Float32)repeatedFloatAtIndex:(NSUInteger)index {
  return [_result repeatedFloatAtIndex:index];
}
- (instancetype)addRepeatedFloat:(Float32)value {
  if (_result.repeatedFloatArray == nil) {
    _result.repeatedFloatArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeFloat];
  }
  [_result.repeatedFloatArray addFloat:value];
  return self;
}
- (instancetype)setRepeatedFloatArray:(NSArray *)array {
  _result.repeatedFloatArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeFloat];
  return self;
}
- (instancetype)setRepeatedFloatValues:(const Float32 *)values count:(NSUInteger)count {
  _result.repeatedFloatArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeFloat];
  return self;
}
- (instancetype)clearRepeatedFloat {
  _result.repeatedFloatArray = nil;
  return self;
}
- (PBAppendableArray *)repeatedDouble {
  return _result.repeatedDoubleArray;
}
- (Float64)repeatedDoubleAtIndex:(NSUInteger)index {
  return [_result repeatedDoubleAtIndex:index];
}
- (instancetype)addRepeatedDouble:(Float64)value {
  if (_result.repeatedDoubleArray == nil) {
    _result.repeatedDoubleArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeDouble];
  }
  [_result.repeatedDoubleArray addDouble:value];
  return self;
}
- (instancetype)setRepeatedDoubleArray:(NSArray *)array {
  _result.repeatedDoubleArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeDouble];
  return self;
}
- (instancetype)setRepeatedDoubleValues:(const Float64 *)values count:(NSUInteger)count {
  _result.repeatedDoubleArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeDouble];
  return self;
}
- (instancetype)clearRepeatedDouble {
  _result.repeatedDoubleArray = nil;
  return self;
}
- (PBAppendableArray *)repeatedBool {
  return _result.repeatedBoolArray;
}
- (BOOL)repeatedBoolAtIndex:(NSUInteger)index {
  return [_result repeatedBoolAtIndex:index];
}
- (instancetype)addRepeatedBool:(BOOL)value {
  if (_result.repeatedBoolArray == nil) {
    _result.repeatedBoolArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeBool];
  }
  [_result.repeatedBoolArray addBool:value];
  return self;
}
- (instancetype)setRepeatedBoolArray:(NSArray *)array {
  _result.repeatedBoolArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeBool];
  return self;
}
- (instancetype)setRepeatedBoolValues:(const BOOL *)values count:(NSUInteger)count {
  _result.repeatedBoolArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeBool];
  return self;
}
- (instancetype)clearRepeatedBool {
  _result.repeatedBoolArray = nil;
  return self;
}
- (NSMutableArray *)repeatedString {
  return _result.repeatedStringArray;
}
- (NSString *)repeatedStringAtIndex:(NSUInteger)index {
  return [_result repeatedStringAtIndex:index];
}
- (instancetype)addRepeatedString:(NSString *)value {
  if (_result.repeatedStringArray == nil) {
    _result.repeatedStringArray = [[NSMutableArray alloc]init];
  }
  [_result.repeatedStringArray addObject:value];
  return self;
}
- (instancetype)setRepeatedStringArray:(NSArray *)array {
  _result.repeatedStringArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (instancetype)clearRepeatedString {
  _result.repeatedStringArray = nil;
  return self;
}
- (NSMutableArray *)repeatedBytes {
  return _result.repeatedBytesArray;
}
- (NSData *)repeatedBytesAtIndex:(NSUInteger)index {
  return [_result repeatedBytesAtIndex:index];
}
- (instancetype)addRepeatedBytes:(NSData *)value {
  if (_result.repeatedBytesArray == nil) {
    _result.repeatedBytesArray = [[NSMutableArray alloc]init];
  }
  [_result.repeatedBytesArray addObject:value];
  return self;
}
- (instancetype)setRepeatedBytesArray:(NSArray *)array {
  _result.repeatedBytesArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (instancetype)clearRepeatedBytes {
  _result.repeatedBytesArray = nil;
  return self;
}
- (NSMutableArray *)RepeatedGroup {
  return _result.RepeatedGroupArray;
}
- (TestAllTypesLite_RepeatedGroup*)RepeatedGroupAtIndex:(NSUInteger)index {
  return [_result RepeatedGroupAtIndex:index];
}
- (instancetype)addRepeatedGroup:(TestAllTypesLite_RepeatedGroup*)value {
  if (_result.RepeatedGroupArray == nil) {
    _result.RepeatedGroupArray = [[NSMutableArray alloc]init];
  }
  [_result.RepeatedGroupArray addObject:value];
  return self;
}
- (instancetype)setRepeatedGroupArray:(NSArray *)array {
  _result.RepeatedGroupArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (instancetype)clearRepeatedGroup {
  _result.RepeatedGroupArray = nil;
  return self;
}
- (NSMutableArray *)repeatedNestedMessage {
  return _result.repeatedNestedMessageArray;
}
- (TestAllTypesLite_NestedMessage*)repeatedNestedMessageAtIndex:(NSUInteger)index {
  return [_result repeatedNestedMessageAtIndex:index];
}
- (instancetype)addRepeatedNestedMessage:(TestAllTypesLite_NestedMessage*)value {
  if (_result.repeatedNestedMessageArray == nil) {
    _result.repeatedNestedMessageArray = [[NSMutableArray alloc]init];
  }
  [_result.repeatedNestedMessageArray addObject:value];
  return self;
}
- (instancetype)setRepeatedNestedMessageArray:(NSArray *)array {
  _result.repeatedNestedMessageArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (instancetype)clearRepeatedNestedMessage {
  _result.repeatedNestedMessageArray = nil;
  return self;
}
- (NSMutableArray *)repeatedForeignMessage {
  return _result.repeatedForeignMessageArray;
}
- (ForeignMessageLite*)repeatedForeignMessageAtIndex:(NSUInteger)index {
  return [_result repeatedForeignMessageAtIndex:index];
}
- (instancetype)addRepeatedForeignMessage:(ForeignMessageLite*)value {
  if (_result.repeatedForeignMessageArray == nil) {
    _result.repeatedForeignMessageArray = [[NSMutableArray alloc]init];
  }
  [_result.repeatedForeignMessageArray addObject:value];
  return self;
}
- (instancetype)setRepeatedForeignMessageArray:(NSArray *)array {
  _result.repeatedForeignMessageArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (instancetype)clearRepeatedForeignMessage {
  _result.repeatedForeignMessageArray = nil;
  return self;
}
- (NSMutableArray *)repeatedImportMessage {
  return _result.repeatedImportMessageArray;
}
- (ImportMessageLite*)repeatedImportMessageAtIndex:(NSUInteger)index {
  return [_result repeatedImportMessageAtIndex:index];
}
- (instancetype)addRepeatedImportMessage:(ImportMessageLite*)value {
  if (_result.repeatedImportMessageArray == nil) {
    _result.repeatedImportMessageArray = [[NSMutableArray alloc]init];
  }
  [_result.repeatedImportMessageArray addObject:value];
  return self;
}
- (instancetype)setRepeatedImportMessageArray:(NSArray *)array {
  _result.repeatedImportMessageArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (instancetype)clearRepeatedImportMessage {
  _result.repeatedImportMessageArray = nil;
  return self;
}
- (NSMutableArray *)repeatedNestedEnum {
  return _result.repeatedNestedEnumArray;
}
- (TestAllTypesLite_NestedEnum)repeatedNestedEnumAtIndex:(NSUInteger)index {
  return [_result repeatedNestedEnumAtIndex:index];
}
- (TestAllTypesLite_Builder *)addRepeatedNestedEnum:(TestAllTypesLite_NestedEnum)value {
  if (_result.repeatedNestedEnumArray == nil) {
    _result.repeatedNestedEnumArray = [NSMutableArray array];
  }
  [_result.repeatedNestedEnumArray addObject:@(value)];
  return self;
}
- (TestAllTypesLite_Builder *)setRepeatedNestedEnumArray:(NSArray *)array {
  _result.repeatedNestedEnumArray = [NSMutableArray arrayWithArray:array];
  return self;
}
- (TestAllTypesLite_Builder *)clearRepeatedNestedEnum {
  _result.repeatedNestedEnumArray = nil;
  return self;
}
- (NSMutableArray *)repeatedForeignEnum {
  return _result.repeatedForeignEnumArray;
}
- (ForeignEnumLite)repeatedForeignEnumAtIndex:(NSUInteger)index {
  return [_result repeatedForeignEnumAtIndex:index];
}
- (TestAllTypesLite_Builder *)addRepeatedForeignEnum:(ForeignEnumLite)value {
  if (_result.repeatedForeignEnumArray == nil) {
    _result.repeatedForeignEnumArray = [NSMutableArray array];
  }
  [_result.repeatedForeignEnumArray addObject:@(value)];
  return self;
}
- (TestAllTypesLite_Builder *)setRepeatedForeignEnumArray:(NSArray *)array {
  _result.repeatedForeignEnumArray = [NSMutableArray arrayWithArray:array];
  return self;
}
- (TestAllTypesLite_Builder *)clearRepeatedForeignEnum {
  _result.repeatedForeignEnumArray = nil;
  return self;
}
- (NSMutableArray *)repeatedImportEnum {
  return _result.repeatedImportEnumArray;
}
- (ImportEnumLite)repeatedImportEnumAtIndex:(NSUInteger)index {
  return [_result repeatedImportEnumAtIndex:index];
}
- (TestAllTypesLite_Builder *)addRepeatedImportEnum:(ImportEnumLite)value {
  if (_result.repeatedImportEnumArray == nil) {
    _result.repeatedImportEnumArray = [NSMutableArray array];
  }
  [_result.repeatedImportEnumArray addObject:@(value)];
  return self;
}
- (TestAllTypesLite_Builder *)setRepeatedImportEnumArray:(NSArray *)array {
  _result.repeatedImportEnumArray = [NSMutableArray arrayWithArray:array];
  return self;
}
- (TestAllTypesLite_Builder *)clearRepeatedImportEnum {
  _result.repeatedImportEnumArray = nil;
  return self;
}
- (NSMutableArray *)repeatedStringPiece {
  return _result.repeatedStringPieceArray;
}
- (NSString *)repeatedStringPieceAtIndex:(NSUInteger)index {
  return [_result repeatedStringPieceAtIndex:index];
}
- (instancetype)addRepeatedStringPiece:(NSString *)value {
  if (_result.repeatedStringPieceArray == nil) {
    _result.repeatedStringPieceArray = [[NSMutableArray alloc]init];
  }
  [_result.repeatedStringPieceArray addObject:value];
  return self;
}
- (instancetype)setRepeatedStringPieceArray:(NSArray *)array {
  _result.repeatedStringPieceArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (instancetype)clearRepeatedStringPiece {
  _result.repeatedStringPieceArray = nil;
  return self;
}
- (NSMutableArray *)repeatedCord {
  return _result.repeatedCordArray;
}
- (NSString *)repeatedCordAtIndex:(NSUInteger)index {
  return [_result repeatedCordAtIndex:index];
}
- (instancetype)addRepeatedCord:(NSString *)value {
  if (_result.repeatedCordArray == nil) {
    _result.repeatedCordArray = [[NSMutableArray alloc]init];
  }
  [_result.repeatedCordArray addObject:value];
  return self;
}
- (instancetype)setRepeatedCordArray:(NSArray *)array {
  _result.repeatedCordArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (instancetype)clearRepeatedCord {
  _result.repeatedCordArray = nil;
  return self;
}
- (NSMutableArray *)repeatedLazyMessage {
  return _result.repeatedLazyMessageArray;
}
- (TestAllTypesLite_NestedMessage*)repeatedLazyMessageAtIndex:(NSUInteger)index {
  return [_result repeatedLazyMessageAtIndex:index];
}
- (instancetype)addRepeatedLazyMessage:(TestAllTypesLite_NestedMessage*)value {
  if (_result.repeatedLazyMessageArray == nil) {
    _result.repeatedLazyMessageArray = [[NSMutableArray alloc]init];
  }
  [_result.repeatedLazyMessageArray addObject:value];
  return self;
}
- (instancetype)setRepeatedLazyMessageArray:(NSArray *)array {
  _result.repeatedLazyMessageArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (instancetype)clearRepeatedLazyMessage {
  _result.repeatedLazyMessageArray = nil;
  return self;
}
- (BOOL)hasDefaultInt32 {
  return _result.hasDefaultInt32;
}
- (int32_t) defaultInt32 {
  return _result.defaultInt32;
}
- (instancetype)setDefaultInt32:(int32_t)value {
  _result.hasDefaultInt32 = YES;
  _result.defaultInt32 = value;
  return self;
}
- (instancetype)clearDefaultInt32 {
  _result.hasDefaultInt32 = NO;
  _result.defaultInt32 = 41;
  return self;
}
- (BOOL)hasDefaultInt64 {
  return _result.hasDefaultInt64;
}
- (int64_t) defaultInt64 {
  return _result.defaultInt64;
}
- (instancetype)setDefaultInt64:(int64_t)value {
  _result.hasDefaultInt64 = YES;
  _result.defaultInt64 = value;
  return self;
}
- (instancetype)clearDefaultInt64 {
  _result.hasDefaultInt64 = NO;
  _result.defaultInt64 = 42L;
  return self;
}
- (BOOL)hasDefaultUint32 {
  return _result.hasDefaultUint32;
}
- (uint32_t) defaultUint32 {
  return _result.defaultUint32;
}
- (instancetype)setDefaultUint32:(uint32_t)value {
  _result.hasDefaultUint32 = YES;
  _result.defaultUint32 = value;
  return self;
}
- (instancetype)clearDefaultUint32 {
  _result.hasDefaultUint32 = NO;
  _result.defaultUint32 = 43;
  return self;
}
- (BOOL)hasDefaultUint64 {
  return _result.hasDefaultUint64;
}
- (uint64_t) defaultUint64 {
  return _result.defaultUint64;
}
- (instancetype)setDefaultUint64:(uint64_t)value {
  _result.hasDefaultUint64 = YES;
  _result.defaultUint64 = value;
  return self;
}
- (instancetype)clearDefaultUint64 {
  _result.hasDefaultUint64 = NO;
  _result.defaultUint64 = 44L;
  return self;
}
- (BOOL)hasDefaultSint32 {
  return _result.hasDefaultSint32;
}
- (int32_t) defaultSint32 {
  return _result.defaultSint32;
}
- (instancetype)setDefaultSint32:(int32_t)value {
  _result.hasDefaultSint32 = YES;
  _result.defaultSint32 = value;
  return self;
}
- (instancetype)clearDefaultSint32 {
  _result.hasDefaultSint32 = NO;
  _result.defaultSint32 = -45;
  return self;
}
- (BOOL)hasDefaultSint64 {
  return _result.hasDefaultSint64;
}
- (int64_t) defaultSint64 {
  return _result.defaultSint64;
}
- (instancetype)setDefaultSint64:(int64_t)value {
  _result.hasDefaultSint64 = YES;
  _result.defaultSint64 = value;
  return self;
}
- (instancetype)clearDefaultSint64 {
  _result.hasDefaultSint64 = NO;
  _result.defaultSint64 = 46L;
  return self;
}
- (BOOL)hasDefaultFixed32 {
  return _result.hasDefaultFixed32;
}
- (uint32_t) defaultFixed32 {
  return _result.defaultFixed32;
}
- (instancetype)setDefaultFixed32:(uint32_t)value {
  _result.hasDefaultFixed32 = YES;
  _result.defaultFixed32 = value;
  return self;
}
- (instancetype)clearDefaultFixed32 {
  _result.hasDefaultFixed32 = NO;
  _result.defaultFixed32 = 47;
  return self;
}
- (BOOL)hasDefaultFixed64 {
  return _result.hasDefaultFixed64;
}
- (uint64_t) defaultFixed64 {
  return _result.defaultFixed64;
}
- (instancetype)setDefaultFixed64:(uint64_t)value {
  _result.hasDefaultFixed64 = YES;
  _result.defaultFixed64 = value;
  return self;
}
- (instancetype)clearDefaultFixed64 {
  _result.hasDefaultFixed64 = NO;
  _result.defaultFixed64 = 48L;
  return self;
}
- (BOOL)hasDefaultSfixed32 {
  return _result.hasDefaultSfixed32;
}
- (int32_t) defaultSfixed32 {
  return _result.defaultSfixed32;
}
- (instancetype)setDefaultSfixed32:(int32_t)value {
  _result.hasDefaultSfixed32 = YES;
  _result.defaultSfixed32 = value;
  return self;
}
- (instancetype)clearDefaultSfixed32 {
  _result.hasDefaultSfixed32 = NO;
  _result.defaultSfixed32 = 49;
  return self;
}
- (BOOL)hasDefaultSfixed64 {
  return _result.hasDefaultSfixed64;
}
- (int64_t) defaultSfixed64 {
  return _result.defaultSfixed64;
}
- (instancetype)setDefaultSfixed64:(int64_t)value {
  _result.hasDefaultSfixed64 = YES;
  _result.defaultSfixed64 = value;
  return self;
}
- (instancetype)clearDefaultSfixed64 {
  _result.hasDefaultSfixed64 = NO;
  _result.defaultSfixed64 = -50L;
  return self;
}
- (BOOL)hasDefaultFloat {
  return _result.hasDefaultFloat;
}
- (Float32) defaultFloat {
  return _result.defaultFloat;
}
- (instancetype)setDefaultFloat:(Float32)value {
  _result.hasDefaultFloat = YES;
  _result.defaultFloat = value;
  return self;
}
- (instancetype)clearDefaultFloat {
  _result.hasDefaultFloat = NO;
  _result.defaultFloat = 51.5;
  return self;
}
- (BOOL)hasDefaultDouble {
  return _result.hasDefaultDouble;
}
- (Float64) defaultDouble {
  return _result.defaultDouble;
}
- (instancetype)setDefaultDouble:(Float64)value {
  _result.hasDefaultDouble = YES;
  _result.defaultDouble = value;
  return self;
}
- (instancetype)clearDefaultDouble {
  _result.hasDefaultDouble = NO;
  _result.defaultDouble = 52000;
  return self;
}
- (BOOL)hasDefaultBool {
  return _result.hasDefaultBool;
}
- (BOOL) defaultBool {
  return _result.defaultBool;
}
- (instancetype)setDefaultBool:(BOOL)value {
  _result.hasDefaultBool = YES;
  _result.defaultBool = value;
  return self;
}
- (instancetype)clearDefaultBool {
  _result.hasDefaultBool = NO;
  _result.defaultBool = YES;
  return self;
}
- (BOOL)hasDefaultString {
  return _result.hasDefaultString;
}
- (NSString *) defaultString {
  return _result.defaultString;
}
- (instancetype)setDefaultString:(NSString *)value {
  _result.hasDefaultString = YES;
  _result.defaultString = value;
  return self;
}
- (instancetype)clearDefaultString {
  _result.hasDefaultString = NO;
  _result.defaultString = @"hello";
  return self;
}
- (BOOL)hasDefaultBytes {
  return _result.hasDefaultBytes;
}
- (NSData *) defaultBytes {
  return _result.defaultBytes;
}
- (instancetype)setDefaultBytes:(NSData *)value {
  _result.hasDefaultBytes = YES;
  _result.defaultBytes = value;
  return self;
}
- (instancetype)clearDefaultBytes {
  _result.hasDefaultBytes = NO;
  _result.defaultBytes = [NSData dataWithBytes:"world" length:5];
  return self;
}
- (BOOL)hasDefaultNestedEnum {
  return _result.hasDefaultNestedEnum;
}
- (TestAllTypesLite_NestedEnum)defaultNestedEnum {
  return _result.defaultNestedEnum;
}
- (TestAllTypesLite_Builder*)setDefaultNestedEnum:(TestAllTypesLite_NestedEnum)value {
  _result.hasDefaultNestedEnum = YES;
  _result.defaultNestedEnum = value;
  return self;
}
- (TestAllTypesLite_Builder*)clearDefaultNestedEnum {
  _result.hasDefaultNestedEnum = NO;
  _result.defaultNestedEnum = TestAllTypesLite_NestedEnumBAR;
  return self;
}
- (BOOL)hasDefaultForeignEnum {
  return _result.hasDefaultForeignEnum;
}
- (ForeignEnumLite)defaultForeignEnum {
  return _result.defaultForeignEnum;
}
- (TestAllTypesLite_Builder*)setDefaultForeignEnum:(ForeignEnumLite)value {
  _result.hasDefaultForeignEnum = YES;
  _result.defaultForeignEnum = value;
  return self;
}
- (TestAllTypesLite_Builder*)clearDefaultForeignEnum {
  _result.hasDefaultForeignEnum = NO;
  _result.defaultForeignEnum = ForeignEnumLiteFOREIGNLITEBAR;
  return self;
}
- (BOOL)hasDefaultImportEnum {
  return _result.hasDefaultImportEnum;
}
- (ImportEnumLite)defaultImportEnum {
  return _result.defaultImportEnum;
}
- (TestAllTypesLite_Builder*)setDefaultImportEnum:(ImportEnumLite)value {
  _result.hasDefaultImportEnum = YES;
  _result.defaultImportEnum = value;
  return self;
}
- (TestAllTypesLite_Builder*)clearDefaultImportEnum {
  _result.hasDefaultImportEnum = NO;
  _result.defaultImportEnum = ImportEnumLiteIMPORTLITEBAR;
  return self;
}
- (BOOL)hasDefaultStringPiece {
  return _result.hasDefaultStringPiece;
}
- (NSString *) defaultStringPiece {
  return _result.defaultStringPiece;
}
- (instancetype)setDefaultStringPiece:(NSString *)value {
  _result.hasDefaultStringPiece = YES;
  _result.defaultStringPiece = value;
  return self;
}
- (instancetype)clearDefaultStringPiece {
  _result.hasDefaultStringPiece = NO;
  _result.defaultStringPiece = @"abc";
  return self;
}
- (BOOL)hasDefaultCord {
  return _result.hasDefaultCord;
}
- (NSString *) defaultCord {
  return _result.defaultCord;
}
- (instancetype)setDefaultCord:(NSString *)value {
  _result.hasDefaultCord = YES;
  _result.defaultCord = value;
  return self;
}
- (instancetype)clearDefaultCord {
  _result.hasDefaultCord = NO;
  _result.defaultCord = @"123";
  return self;
}

@end


#pragma mark - TestAllTypesLite_NestedMessage

@interface TestAllTypesLite_NestedMessage ()

@property int32_t bb;

@end

@implementation TestAllTypesLite_NestedMessage {
  BOOL _hasBb:1;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
    _bb = 0;
  return self;
}

+ (instancetype)defaultInstance {
  static id _sharedObject = nil;
  static dispatch_once_t onceToken;
  dispatch_once(&onceToken, ^{
    _sharedObject = [[self alloc] init];
  });
  return _sharedObject;
}

- (BOOL)hasBb {
  return !!_hasBb;
}
- (void)setHasBb:(BOOL)value {
  _hasBb = !!value;
}


- (BOOL)isInitialized {
  return YES;
}

- (void)writeToCodedOutputStream:(PBCodedOutputStream*)output {
  if (self.hasBb) {
    [output writeInt32:1 value:self.bb];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t)serializedSize {
  int32_t size_ = _cachedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasBb) {
    size_ += computeInt32Size(1, self.bb);
  }
  size_ += self.unknownFields.serializedSize;
  _cachedSerializedSize = size_;
  return size_;
}


+ (TestAllTypesLite_NestedMessage_Builder*)builder {
  return [[TestAllTypesLite_NestedMessage_Builder alloc] init];
}
+ (TestAllTypesLite_NestedMessage_Builder*)builderWithPrototype:(TestAllTypesLite_NestedMessage*)prototype {
  return [[TestAllTypesLite_NestedMessage builder] mergeFrom:prototype];
}
- (TestAllTypesLite_NestedMessage_Builder*)builder {
  return [TestAllTypesLite_NestedMessage builder];
}
- (TestAllTypesLite_NestedMessage_Builder*)toBuilder {
  return [TestAllTypesLite_NestedMessage builderWithPrototype:self];
}

- (void)writeDescriptionTo:(NSMutableString*)output withIndent:(NSString*)indent {
  NSUInteger listCount; listCount = 0;
  if (self.hasBb) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bb", @(self.bb)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}

- (BOOL)isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TestAllTypesLite_NestedMessage class]]) {
    return NO;
  }
  TestAllTypesLite_NestedMessage *otherMessage = other;
  return
      self.hasBb == otherMessage.hasBb &&
      (!self.hasBb || self.bb == otherMessage.bb) &&
      (self.unknownFields == otherMessage.unknownFields ||
       (self.unknownFields != nil &&
       [self.unknownFields isEqual:otherMessage.unknownFields]));
}

- (NSUInteger)hash {
  NSUInteger hashCode; hashCode = 7;
  NSUInteger listCount; listCount = 0;
  if (self.hasBb) {
    hashCode = hashCode * 31 + [@(self.bb) hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}

@end


@implementation TestAllTypesLite_NestedMessage_Builder {
  TestAllTypesLite_NestedMessage* _result;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  _result = [[TestAllTypesLite_NestedMessage alloc] init];
  return self;
}

- (PBGeneratedMessage*)internalGetResult {
  return _result;
}
- (instancetype)clear {
  _result = [[TestAllTypesLite_NestedMessage alloc] init];
  return self;
}
- (instancetype)clone {
  return [[[TestAllTypesLite_NestedMessage_Builder alloc] init] mergeFrom:_result];
}

- (TestAllTypesLite_NestedMessage*)defaultMessageInstance {
  return [TestAllTypesLite_NestedMessage defaultInstance];
}

- (TestAllTypesLite_NestedMessage*)build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TestAllTypesLite_NestedMessage*)buildPartial {
  TestAllTypesLite_NestedMessage* partial = _result;
  _result = nil;
  return partial;
}

- (instancetype)mergeFrom:(TestAllTypesLite_NestedMessage*)other {
  if (other == [TestAllTypesLite_NestedMessage defaultInstance]) {
    return self;
  }
  if (other.hasBb) {
    [self setBb:other.bb];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (instancetype)mergeFromCodedInputStream:(PBCodedInputStream*)input
                        extensionRegistry:(PBExtensionRegistry*)extensionRegistry
{
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input
                       unknownFields:unknownFields
                   extensionRegistry:extensionRegistry
                                 tag:tag])
        {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setBb:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL)hasBb {
  return _result.hasBb;
}
- (int32_t) bb {
  return _result.bb;
}
- (instancetype)setBb:(int32_t)value {
  _result.hasBb = YES;
  _result.bb = value;
  return self;
}
- (instancetype)clearBb {
  _result.hasBb = NO;
  _result.bb = 0;
  return self;
}

@end


#pragma mark - TestAllTypesLite_OptionalGroup

@interface TestAllTypesLite_OptionalGroup ()

@property int32_t a;

@end

@implementation TestAllTypesLite_OptionalGroup {
  BOOL _hasA:1;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
    _a = 0;
  return self;
}

+ (instancetype)defaultInstance {
  static id _sharedObject = nil;
  static dispatch_once_t onceToken;
  dispatch_once(&onceToken, ^{
    _sharedObject = [[self alloc] init];
  });
  return _sharedObject;
}

- (BOOL)hasA {
  return !!_hasA;
}
- (void)setHasA:(BOOL)value {
  _hasA = !!value;
}


- (BOOL)isInitialized {
  return YES;
}

- (void)writeToCodedOutputStream:(PBCodedOutputStream*)output {
  if (self.hasA) {
    [output writeInt32:17 value:self.a];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t)serializedSize {
  int32_t size_ = _cachedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasA) {
    size_ += computeInt32Size(17, self.a);
  }
  size_ += self.unknownFields.serializedSize;
  _cachedSerializedSize = size_;
  return size_;
}


+ (TestAllTypesLite_OptionalGroup_Builder*)builder {
  return [[TestAllTypesLite_OptionalGroup_Builder alloc] init];
}
+ (TestAllTypesLite_OptionalGroup_Builder*)builderWithPrototype:(TestAllTypesLite_OptionalGroup*)prototype {
  return [[TestAllTypesLite_OptionalGroup builder] mergeFrom:prototype];
}
- (TestAllTypesLite_OptionalGroup_Builder*)builder {
  return [TestAllTypesLite_OptionalGroup builder];
}
- (TestAllTypesLite_OptionalGroup_Builder*)toBuilder {
  return [TestAllTypesLite_OptionalGroup builderWithPrototype:self];
}

- (void)writeDescriptionTo:(NSMutableString*)output withIndent:(NSString*)indent {
  NSUInteger listCount; listCount = 0;
  if (self.hasA) {
    [output appendFormat:@"%@%@: %@\n", indent, @"a", @(self.a)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}

- (BOOL)isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TestAllTypesLite_OptionalGroup class]]) {
    return NO;
  }
  TestAllTypesLite_OptionalGroup *otherMessage = other;
  return
      self.hasA == otherMessage.hasA &&
      (!self.hasA || self.a == otherMessage.a) &&
      (self.unknownFields == otherMessage.unknownFields ||
       (self.unknownFields != nil &&
       [self.unknownFields isEqual:otherMessage.unknownFields]));
}

- (NSUInteger)hash {
  NSUInteger hashCode; hashCode = 7;
  NSUInteger listCount; listCount = 0;
  if (self.hasA) {
    hashCode = hashCode * 31 + [@(self.a) hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}

@end


@implementation TestAllTypesLite_OptionalGroup_Builder {
  TestAllTypesLite_OptionalGroup* _result;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  _result = [[TestAllTypesLite_OptionalGroup alloc] init];
  return self;
}

- (PBGeneratedMessage*)internalGetResult {
  return _result;
}
- (instancetype)clear {
  _result = [[TestAllTypesLite_OptionalGroup alloc] init];
  return self;
}
- (instancetype)clone {
  return [[[TestAllTypesLite_OptionalGroup_Builder alloc] init] mergeFrom:_result];
}

- (TestAllTypesLite_OptionalGroup*)defaultMessageInstance {
  return [TestAllTypesLite_OptionalGroup defaultInstance];
}

- (TestAllTypesLite_OptionalGroup*)build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TestAllTypesLite_OptionalGroup*)buildPartial {
  TestAllTypesLite_OptionalGroup* partial = _result;
  _result = nil;
  return partial;
}

- (instancetype)mergeFrom:(TestAllTypesLite_OptionalGroup*)other {
  if (other == [TestAllTypesLite_OptionalGroup defaultInstance]) {
    return self;
  }
  if (other.hasA) {
    [self setA:other.a];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (instancetype)mergeFromCodedInputStream:(PBCodedInputStream*)input
                        extensionRegistry:(PBExtensionRegistry*)extensionRegistry
{
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input
                       unknownFields:unknownFields
                   extensionRegistry:extensionRegistry
                                 tag:tag])
        {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 136: {
        [self setA:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL)hasA {
  return _result.hasA;
}
- (int32_t) a {
  return _result.a;
}
- (instancetype)setA:(int32_t)value {
  _result.hasA = YES;
  _result.a = value;
  return self;
}
- (instancetype)clearA {
  _result.hasA = NO;
  _result.a = 0;
  return self;
}

@end


#pragma mark - TestAllTypesLite_RepeatedGroup

@interface TestAllTypesLite_RepeatedGroup ()

@property int32_t a;

@end

@implementation TestAllTypesLite_RepeatedGroup {
  BOOL _hasA:1;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
    _a = 0;
  return self;
}

+ (instancetype)defaultInstance {
  static id _sharedObject = nil;
  static dispatch_once_t onceToken;
  dispatch_once(&onceToken, ^{
    _sharedObject = [[self alloc] init];
  });
  return _sharedObject;
}

- (BOOL)hasA {
  return !!_hasA;
}
- (void)setHasA:(BOOL)value {
  _hasA = !!value;
}


- (BOOL)isInitialized {
  return YES;
}

- (void)writeToCodedOutputStream:(PBCodedOutputStream*)output {
  if (self.hasA) {
    [output writeInt32:47 value:self.a];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t)serializedSize {
  int32_t size_ = _cachedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasA) {
    size_ += computeInt32Size(47, self.a);
  }
  size_ += self.unknownFields.serializedSize;
  _cachedSerializedSize = size_;
  return size_;
}


+ (TestAllTypesLite_RepeatedGroup_Builder*)builder {
  return [[TestAllTypesLite_RepeatedGroup_Builder alloc] init];
}
+ (TestAllTypesLite_RepeatedGroup_Builder*)builderWithPrototype:(TestAllTypesLite_RepeatedGroup*)prototype {
  return [[TestAllTypesLite_RepeatedGroup builder] mergeFrom:prototype];
}
- (TestAllTypesLite_RepeatedGroup_Builder*)builder {
  return [TestAllTypesLite_RepeatedGroup builder];
}
- (TestAllTypesLite_RepeatedGroup_Builder*)toBuilder {
  return [TestAllTypesLite_RepeatedGroup builderWithPrototype:self];
}

- (void)writeDescriptionTo:(NSMutableString*)output withIndent:(NSString*)indent {
  NSUInteger listCount; listCount = 0;
  if (self.hasA) {
    [output appendFormat:@"%@%@: %@\n", indent, @"a", @(self.a)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}

- (BOOL)isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TestAllTypesLite_RepeatedGroup class]]) {
    return NO;
  }
  TestAllTypesLite_RepeatedGroup *otherMessage = other;
  return
      self.hasA == otherMessage.hasA &&
      (!self.hasA || self.a == otherMessage.a) &&
      (self.unknownFields == otherMessage.unknownFields ||
       (self.unknownFields != nil &&
       [self.unknownFields isEqual:otherMessage.unknownFields]));
}

- (NSUInteger)hash {
  NSUInteger hashCode; hashCode = 7;
  NSUInteger listCount; listCount = 0;
  if (self.hasA) {
    hashCode = hashCode * 31 + [@(self.a) hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}

@end


@implementation TestAllTypesLite_RepeatedGroup_Builder {
  TestAllTypesLite_RepeatedGroup* _result;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  _result = [[TestAllTypesLite_RepeatedGroup alloc] init];
  return self;
}

- (PBGeneratedMessage*)internalGetResult {
  return _result;
}
- (instancetype)clear {
  _result = [[TestAllTypesLite_RepeatedGroup alloc] init];
  return self;
}
- (instancetype)clone {
  return [[[TestAllTypesLite_RepeatedGroup_Builder alloc] init] mergeFrom:_result];
}

- (TestAllTypesLite_RepeatedGroup*)defaultMessageInstance {
  return [TestAllTypesLite_RepeatedGroup defaultInstance];
}

- (TestAllTypesLite_RepeatedGroup*)build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TestAllTypesLite_RepeatedGroup*)buildPartial {
  TestAllTypesLite_RepeatedGroup* partial = _result;
  _result = nil;
  return partial;
}

- (instancetype)mergeFrom:(TestAllTypesLite_RepeatedGroup*)other {
  if (other == [TestAllTypesLite_RepeatedGroup defaultInstance]) {
    return self;
  }
  if (other.hasA) {
    [self setA:other.a];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (instancetype)mergeFromCodedInputStream:(PBCodedInputStream*)input
                        extensionRegistry:(PBExtensionRegistry*)extensionRegistry
{
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input
                       unknownFields:unknownFields
                   extensionRegistry:extensionRegistry
                                 tag:tag])
        {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 376: {
        [self setA:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL)hasA {
  return _result.hasA;
}
- (int32_t) a {
  return _result.a;
}
- (instancetype)setA:(int32_t)value {
  _result.hasA = YES;
  _result.a = value;
  return self;
}
- (instancetype)clearA {
  _result.hasA = NO;
  _result.a = 0;
  return self;
}

@end


#pragma mark - ForeignMessageLite

@interface ForeignMessageLite ()

@property int32_t c;

@end

@implementation ForeignMessageLite {
  BOOL _hasC:1;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
    _c = 0;
  return self;
}

+ (instancetype)defaultInstance {
  static id _sharedObject = nil;
  static dispatch_once_t onceToken;
  dispatch_once(&onceToken, ^{
    _sharedObject = [[self alloc] init];
  });
  return _sharedObject;
}

- (BOOL)hasC {
  return !!_hasC;
}
- (void)setHasC:(BOOL)value {
  _hasC = !!value;
}


- (BOOL)isInitialized {
  return YES;
}

- (void)writeToCodedOutputStream:(PBCodedOutputStream*)output {
  if (self.hasC) {
    [output writeInt32:1 value:self.c];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t)serializedSize {
  int32_t size_ = _cachedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasC) {
    size_ += computeInt32Size(1, self.c);
  }
  size_ += self.unknownFields.serializedSize;
  _cachedSerializedSize = size_;
  return size_;
}


+ (ForeignMessageLite_Builder*)builder {
  return [[ForeignMessageLite_Builder alloc] init];
}
+ (ForeignMessageLite_Builder*)builderWithPrototype:(ForeignMessageLite*)prototype {
  return [[ForeignMessageLite builder] mergeFrom:prototype];
}
- (ForeignMessageLite_Builder*)builder {
  return [ForeignMessageLite builder];
}
- (ForeignMessageLite_Builder*)toBuilder {
  return [ForeignMessageLite builderWithPrototype:self];
}

- (void)writeDescriptionTo:(NSMutableString*)output withIndent:(NSString*)indent {
  NSUInteger listCount; listCount = 0;
  if (self.hasC) {
    [output appendFormat:@"%@%@: %@\n", indent, @"c", @(self.c)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}

- (BOOL)isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ForeignMessageLite class]]) {
    return NO;
  }
  ForeignMessageLite *otherMessage = other;
  return
      self.hasC == otherMessage.hasC &&
      (!self.hasC || self.c == otherMessage.c) &&
      (self.unknownFields == otherMessage.unknownFields ||
       (self.unknownFields != nil &&
       [self.unknownFields isEqual:otherMessage.unknownFields]));
}

- (NSUInteger)hash {
  NSUInteger hashCode; hashCode = 7;
  NSUInteger listCount; listCount = 0;
  if (self.hasC) {
    hashCode = hashCode * 31 + [@(self.c) hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}

@end


@implementation ForeignMessageLite_Builder {
  ForeignMessageLite* _result;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  _result = [[ForeignMessageLite alloc] init];
  return self;
}

- (PBGeneratedMessage*)internalGetResult {
  return _result;
}
- (instancetype)clear {
  _result = [[ForeignMessageLite alloc] init];
  return self;
}
- (instancetype)clone {
  return [[[ForeignMessageLite_Builder alloc] init] mergeFrom:_result];
}

- (ForeignMessageLite*)defaultMessageInstance {
  return [ForeignMessageLite defaultInstance];
}

- (ForeignMessageLite*)build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ForeignMessageLite*)buildPartial {
  ForeignMessageLite* partial = _result;
  _result = nil;
  return partial;
}

- (instancetype)mergeFrom:(ForeignMessageLite*)other {
  if (other == [ForeignMessageLite defaultInstance]) {
    return self;
  }
  if (other.hasC) {
    [self setC:other.c];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (instancetype)mergeFromCodedInputStream:(PBCodedInputStream*)input
                        extensionRegistry:(PBExtensionRegistry*)extensionRegistry
{
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input
                       unknownFields:unknownFields
                   extensionRegistry:extensionRegistry
                                 tag:tag])
        {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setC:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL)hasC {
  return _result.hasC;
}
- (int32_t) c {
  return _result.c;
}
- (instancetype)setC:(int32_t)value {
  _result.hasC = YES;
  _result.c = value;
  return self;
}
- (instancetype)clearC {
  _result.hasC = NO;
  _result.c = 0;
  return self;
}

@end


#pragma mark - TestPackedTypesLite

@interface TestPackedTypesLite ()

@property (strong) PBAppendableArray * packedInt32Array;
@property (strong) PBAppendableArray * packedInt64Array;
@property (strong) PBAppendableArray * packedUint32Array;
@property (strong) PBAppendableArray * packedUint64Array;
@property (strong) PBAppendableArray * packedSint32Array;
@property (strong) PBAppendableArray * packedSint64Array;
@property (strong) PBAppendableArray * packedFixed32Array;
@property (strong) PBAppendableArray * packedFixed64Array;
@property (strong) PBAppendableArray * packedSfixed32Array;
@property (strong) PBAppendableArray * packedSfixed64Array;
@property (strong) PBAppendableArray * packedFloatArray;
@property (strong) PBAppendableArray * packedDoubleArray;
@property (strong) PBAppendableArray * packedBoolArray;
@property (strong) NSMutableArray *packedEnumArray;

@end

@implementation TestPackedTypesLite {
  PBAppendableArray *_packedBoolArray;
  int32_t _packedBoolCachedSerializedSize;
  PBAppendableArray *_packedDoubleArray;
  int32_t _packedDoubleCachedSerializedSize;
  PBAppendableArray *_packedFloatArray;
  int32_t _packedFloatCachedSerializedSize;
  PBAppendableArray *_packedInt64Array;
  int32_t _packedInt64CachedSerializedSize;
  PBAppendableArray *_packedUint64Array;
  int32_t _packedUint64CachedSerializedSize;
  PBAppendableArray *_packedInt32Array;
  int32_t _packedInt32CachedSerializedSize;
  PBAppendableArray *_packedFixed64Array;
  int32_t _packedFixed64CachedSerializedSize;
  PBAppendableArray *_packedFixed32Array;
  int32_t _packedFixed32CachedSerializedSize;
  PBAppendableArray *_packedUint32Array;
  int32_t _packedUint32CachedSerializedSize;
  NSMutableArray * _packedEnumArray;
  int32_t _packedEnumCachedSerializedSize;
  PBAppendableArray *_packedSfixed32Array;
  int32_t _packedSfixed32CachedSerializedSize;
  PBAppendableArray *_packedSfixed64Array;
  int32_t _packedSfixed64CachedSerializedSize;
  PBAppendableArray *_packedSint32Array;
  int32_t _packedSint32CachedSerializedSize;
  PBAppendableArray *_packedSint64Array;
  int32_t _packedSint64CachedSerializedSize;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  return self;
}

+ (instancetype)defaultInstance {
  static id _sharedObject = nil;
  static dispatch_once_t onceToken;
  dispatch_once(&onceToken, ^{
    _sharedObject = [[self alloc] init];
  });
  return _sharedObject;
}

@dynamic packedInt32;
@dynamic packedInt64;
@dynamic packedUint32;
@dynamic packedUint64;
@dynamic packedSint32;
@dynamic packedSint64;
@dynamic packedFixed32;
@dynamic packedFixed64;
@dynamic packedSfixed32;
@dynamic packedSfixed64;
@dynamic packedFloat;
@dynamic packedDouble;
@dynamic packedBool;
@dynamic packedEnum;

- (PBArray *)packedInt32 {
  return _packedInt32Array;
}
- (int32_t)packedInt32AtIndex:(NSUInteger)index {
  return [_packedInt32Array int32AtIndex:index];
}
- (PBArray *)packedInt64 {
  return _packedInt64Array;
}
- (int64_t)packedInt64AtIndex:(NSUInteger)index {
  return [_packedInt64Array int64AtIndex:index];
}
- (PBArray *)packedUint32 {
  return _packedUint32Array;
}
- (uint32_t)packedUint32AtIndex:(NSUInteger)index {
  return [_packedUint32Array uint32AtIndex:index];
}
- (PBArray *)packedUint64 {
  return _packedUint64Array;
}
- (uint64_t)packedUint64AtIndex:(NSUInteger)index {
  return [_packedUint64Array uint64AtIndex:index];
}
- (PBArray *)packedSint32 {
  return _packedSint32Array;
}
- (int32_t)packedSint32AtIndex:(NSUInteger)index {
  return [_packedSint32Array int32AtIndex:index];
}
- (PBArray *)packedSint64 {
  return _packedSint64Array;
}
- (int64_t)packedSint64AtIndex:(NSUInteger)index {
  return [_packedSint64Array int64AtIndex:index];
}
- (PBArray *)packedFixed32 {
  return _packedFixed32Array;
}
- (uint32_t)packedFixed32AtIndex:(NSUInteger)index {
  return [_packedFixed32Array uint32AtIndex:index];
}
- (PBArray *)packedFixed64 {
  return _packedFixed64Array;
}
- (uint64_t)packedFixed64AtIndex:(NSUInteger)index {
  return [_packedFixed64Array uint64AtIndex:index];
}
- (PBArray *)packedSfixed32 {
  return _packedSfixed32Array;
}
- (int32_t)packedSfixed32AtIndex:(NSUInteger)index {
  return [_packedSfixed32Array int32AtIndex:index];
}
- (PBArray *)packedSfixed64 {
  return _packedSfixed64Array;
}
- (int64_t)packedSfixed64AtIndex:(NSUInteger)index {
  return [_packedSfixed64Array int64AtIndex:index];
}
- (PBArray *)packedFloat {
  return _packedFloatArray;
}
- (Float32)packedFloatAtIndex:(NSUInteger)index {
  return [_packedFloatArray floatAtIndex:index];
}
- (PBArray *)packedDouble {
  return _packedDoubleArray;
}
- (Float64)packedDoubleAtIndex:(NSUInteger)index {
  return [_packedDoubleArray doubleAtIndex:index];
}
- (PBArray *)packedBool {
  return _packedBoolArray;
}
- (BOOL)packedBoolAtIndex:(NSUInteger)index {
  return [_packedBoolArray boolAtIndex:index];
}
- (NSArray *)packedEnum {
  return _packedEnumArray;
}
- (ForeignEnumLite)packedEnumAtIndex:(NSUInteger)index {
  NSNumber *value = _packedEnumArray[index];
  return value.intValue;}

- (BOOL)isInitialized {
  return YES;
}

- (void)writeToCodedOutputStream:(PBCodedOutputStream*)output {
  const NSUInteger packedInt32ArrayCount = self.packedInt32Array.count;
  if (packedInt32ArrayCount > 0) {
    const int32_t *values = (const int32_t *)self.packedInt32Array.data;
    [output writeRawVarint32:722];
    [output writeRawVarint32:_packedInt32CachedSerializedSize];
    for (NSUInteger i = 0; i < packedInt32ArrayCount; ++i) {
      [output writeInt32NoTag:values[i]];
    }
  }
  const NSUInteger packedInt64ArrayCount = self.packedInt64Array.count;
  if (packedInt64ArrayCount > 0) {
    const int64_t *values = (const int64_t *)self.packedInt64Array.data;
    [output writeRawVarint32:730];
    [output writeRawVarint32:_packedInt64CachedSerializedSize];
    for (NSUInteger i = 0; i < packedInt64ArrayCount; ++i) {
      [output writeInt64NoTag:values[i]];
    }
  }
  const NSUInteger packedUint32ArrayCount = self.packedUint32Array.count;
  if (packedUint32ArrayCount > 0) {
    const uint32_t *values = (const uint32_t *)self.packedUint32Array.data;
    [output writeRawVarint32:738];
    [output writeRawVarint32:_packedUint32CachedSerializedSize];
    for (NSUInteger i = 0; i < packedUint32ArrayCount; ++i) {
      [output writeUInt32NoTag:values[i]];
    }
  }
  const NSUInteger packedUint64ArrayCount = self.packedUint64Array.count;
  if (packedUint64ArrayCount > 0) {
    const uint64_t *values = (const uint64_t *)self.packedUint64Array.data;
    [output writeRawVarint32:746];
    [output writeRawVarint32:_packedUint64CachedSerializedSize];
    for (NSUInteger i = 0; i < packedUint64ArrayCount; ++i) {
      [output writeUInt64NoTag:values[i]];
    }
  }
  const NSUInteger packedSint32ArrayCount = self.packedSint32Array.count;
  if (packedSint32ArrayCount > 0) {
    const int32_t *values = (const int32_t *)self.packedSint32Array.data;
    [output writeRawVarint32:754];
    [output writeRawVarint32:_packedSint32CachedSerializedSize];
    for (NSUInteger i = 0; i < packedSint32ArrayCount; ++i) {
      [output writeSInt32NoTag:values[i]];
    }
  }
  const NSUInteger packedSint64ArrayCount = self.packedSint64Array.count;
  if (packedSint64ArrayCount > 0) {
    const int64_t *values = (const int64_t *)self.packedSint64Array.data;
    [output writeRawVarint32:762];
    [output writeRawVarint32:_packedSint64CachedSerializedSize];
    for (NSUInteger i = 0; i < packedSint64ArrayCount; ++i) {
      [output writeSInt64NoTag:values[i]];
    }
  }
  const NSUInteger packedFixed32ArrayCount = self.packedFixed32Array.count;
  if (packedFixed32ArrayCount > 0) {
    const uint32_t *values = (const uint32_t *)self.packedFixed32Array.data;
    [output writeRawVarint32:770];
    [output writeRawVarint32:_packedFixed32CachedSerializedSize];
    for (NSUInteger i = 0; i < packedFixed32ArrayCount; ++i) {
      [output writeFixed32NoTag:values[i]];
    }
  }
  const NSUInteger packedFixed64ArrayCount = self.packedFixed64Array.count;
  if (packedFixed64ArrayCount > 0) {
    const uint64_t *values = (const uint64_t *)self.packedFixed64Array.data;
    [output writeRawVarint32:778];
    [output writeRawVarint32:_packedFixed64CachedSerializedSize];
    for (NSUInteger i = 0; i < packedFixed64ArrayCount; ++i) {
      [output writeFixed64NoTag:values[i]];
    }
  }
  const NSUInteger packedSfixed32ArrayCount = self.packedSfixed32Array.count;
  if (packedSfixed32ArrayCount > 0) {
    const int32_t *values = (const int32_t *)self.packedSfixed32Array.data;
    [output writeRawVarint32:786];
    [output writeRawVarint32:_packedSfixed32CachedSerializedSize];
    for (NSUInteger i = 0; i < packedSfixed32ArrayCount; ++i) {
      [output writeSFixed32NoTag:values[i]];
    }
  }
  const NSUInteger packedSfixed64ArrayCount = self.packedSfixed64Array.count;
  if (packedSfixed64ArrayCount > 0) {
    const int64_t *values = (const int64_t *)self.packedSfixed64Array.data;
    [output writeRawVarint32:794];
    [output writeRawVarint32:_packedSfixed64CachedSerializedSize];
    for (NSUInteger i = 0; i < packedSfixed64ArrayCount; ++i) {
      [output writeSFixed64NoTag:values[i]];
    }
  }
  const NSUInteger packedFloatArrayCount = self.packedFloatArray.count;
  if (packedFloatArrayCount > 0) {
    const Float32 *values = (const Float32 *)self.packedFloatArray.data;
    [output writeRawVarint32:802];
    [output writeRawVarint32:_packedFloatCachedSerializedSize];
    for (NSUInteger i = 0; i < packedFloatArrayCount; ++i) {
      [output writeFloatNoTag:values[i]];
    }
  }
  const NSUInteger packedDoubleArrayCount = self.packedDoubleArray.count;
  if (packedDoubleArrayCount > 0) {
    const Float64 *values = (const Float64 *)self.packedDoubleArray.data;
    [output writeRawVarint32:810];
    [output writeRawVarint32:_packedDoubleCachedSerializedSize];
    for (NSUInteger i = 0; i < packedDoubleArrayCount; ++i) {
      [output writeDoubleNoTag:values[i]];
    }
  }
  const NSUInteger packedBoolArrayCount = self.packedBoolArray.count;
  if (packedBoolArrayCount > 0) {
    const BOOL *values = (const BOOL *)self.packedBoolArray.data;
    [output writeRawVarint32:818];
    [output writeRawVarint32:_packedBoolCachedSerializedSize];
    for (NSUInteger i = 0; i < packedBoolArrayCount; ++i) {
      [output writeBoolNoTag:values[i]];
    }
  }
  if (self.packedEnumArray.count > 0) {
    [output writeRawVarint32:826];
    [output writeRawVarint32:_packedEnumCachedSerializedSize];
  }
  for (NSNumber *element in self.packedEnumArray) {
    [output writeEnumNoTag:element.intValue];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t)serializedSize {
  int32_t size_ = _cachedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.packedInt32Array.count;
    const int32_t *values = (const int32_t *)self.packedInt32Array.data;
    for (NSUInteger i = 0; i < count_; ++i) {
      dataSize += computeInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    if (count_ > 0) {
      size_ += 2;
      size_ += computeInt32SizeNoTag(dataSize);
    }
    _packedInt32CachedSerializedSize = dataSize;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.packedInt64Array.count;
    const int64_t *values = (const int64_t *)self.packedInt64Array.data;
    for (NSUInteger i = 0; i < count_; ++i) {
      dataSize += computeInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    if (count_ > 0) {
      size_ += 2;
      size_ += computeInt32SizeNoTag(dataSize);
    }
    _packedInt64CachedSerializedSize = dataSize;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.packedUint32Array.count;
    const uint32_t *values = (const uint32_t *)self.packedUint32Array.data;
    for (NSUInteger i = 0; i < count_; ++i) {
      dataSize += computeUInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    if (count_ > 0) {
      size_ += 2;
      size_ += computeInt32SizeNoTag(dataSize);
    }
    _packedUint32CachedSerializedSize = dataSize;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.packedUint64Array.count;
    const uint64_t *values = (const uint64_t *)self.packedUint64Array.data;
    for (NSUInteger i = 0; i < count_; ++i) {
      dataSize += computeUInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    if (count_ > 0) {
      size_ += 2;
      size_ += computeInt32SizeNoTag(dataSize);
    }
    _packedUint64CachedSerializedSize = dataSize;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.packedSint32Array.count;
    const int32_t *values = (const int32_t *)self.packedSint32Array.data;
    for (NSUInteger i = 0; i < count_; ++i) {
      dataSize += computeSInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    if (count_ > 0) {
      size_ += 2;
      size_ += computeInt32SizeNoTag(dataSize);
    }
    _packedSint32CachedSerializedSize = dataSize;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.packedSint64Array.count;
    const int64_t *values = (const int64_t *)self.packedSint64Array.data;
    for (NSUInteger i = 0; i < count_; ++i) {
      dataSize += computeSInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    if (count_ > 0) {
      size_ += 2;
      size_ += computeInt32SizeNoTag(dataSize);
    }
    _packedSint64CachedSerializedSize = dataSize;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.packedFixed32Array.count;
    dataSize += 4 * count_;
    size_ += dataSize;
    if (count_ > 0) {
      size_ += 2;
      size_ += computeInt32SizeNoTag(dataSize);
    }
    _packedFixed32CachedSerializedSize = dataSize;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.packedFixed64Array.count;
    dataSize += 8 * count_;
    size_ += dataSize;
    if (count_ > 0) {
      size_ += 2;
      size_ += computeInt32SizeNoTag(dataSize);
    }
    _packedFixed64CachedSerializedSize = dataSize;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.packedSfixed32Array.count;
    dataSize += 4 * count_;
    size_ += dataSize;
    if (count_ > 0) {
      size_ += 2;
      size_ += computeInt32SizeNoTag(dataSize);
    }
    _packedSfixed32CachedSerializedSize = dataSize;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.packedSfixed64Array.count;
    dataSize += 8 * count_;
    size_ += dataSize;
    if (count_ > 0) {
      size_ += 2;
      size_ += computeInt32SizeNoTag(dataSize);
    }
    _packedSfixed64CachedSerializedSize = dataSize;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.packedFloatArray.count;
    dataSize += 4 * count_;
    size_ += dataSize;
    if (count_ > 0) {
      size_ += 2;
      size_ += computeInt32SizeNoTag(dataSize);
    }
    _packedFloatCachedSerializedSize = dataSize;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.packedDoubleArray.count;
    dataSize += 8 * count_;
    size_ += dataSize;
    if (count_ > 0) {
      size_ += 2;
      size_ += computeInt32SizeNoTag(dataSize);
    }
    _packedDoubleCachedSerializedSize = dataSize;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count_ = self.packedBoolArray.count;
    dataSize += 1 * count_;
    size_ += dataSize;
    if (count_ > 0) {
      size_ += 2;
      size_ += computeInt32SizeNoTag(dataSize);
    }
    _packedBoolCachedSerializedSize = dataSize;
  }
  _packedEnumCachedSerializedSize = size_;
  for (NSNumber *element in self.packedEnumArray) {
    size_ += computeEnumSizeNoTag(element.intValue);
  }
  _packedEnumCachedSerializedSize = size_ - _packedEnumCachedSerializedSize;
  if (self.packedEnumArray.count > 0) {
    size_ += 2;  // tag size
    size_ += computeRawVarint32Size(_packedEnumCachedSerializedSize);
  }
  size_ += self.unknownFields.serializedSize;
  _cachedSerializedSize = size_;
  return size_;
}


+ (TestPackedTypesLite_Builder*)builder {
  return [[TestPackedTypesLite_Builder alloc] init];
}
+ (TestPackedTypesLite_Builder*)builderWithPrototype:(TestPackedTypesLite*)prototype {
  return [[TestPackedTypesLite builder] mergeFrom:prototype];
}
- (TestPackedTypesLite_Builder*)builder {
  return [TestPackedTypesLite builder];
}
- (TestPackedTypesLite_Builder*)toBuilder {
  return [TestPackedTypesLite builderWithPrototype:self];
}

- (void)writeDescriptionTo:(NSMutableString*)output withIndent:(NSString*)indent {
  NSUInteger listCount; listCount = 0;
  listCount = self.packedInt32Array.count;
  for(int i=0; i < listCount; i++){
    [output appendFormat:@"%@%@: %@\n", indent, @"packedInt32", @([self.packedInt32Array int32AtIndex:i])];
  }
  listCount = self.packedInt64Array.count;
  for(int i=0; i < listCount; i++){
    [output appendFormat:@"%@%@: %@\n", indent, @"packedInt64", @([self.packedInt64Array int64AtIndex:i])];
  }
  listCount = self.packedUint32Array.count;
  for(int i=0; i < listCount; i++){
    [output appendFormat:@"%@%@: %@\n", indent, @"packedUint32", @([self.packedUint32Array uint32AtIndex:i])];
  }
  listCount = self.packedUint64Array.count;
  for(int i=0; i < listCount; i++){
    [output appendFormat:@"%@%@: %@\n", indent, @"packedUint64", @([self.packedUint64Array uint64AtIndex:i])];
  }
  listCount = self.packedSint32Array.count;
  for(int i=0; i < listCount; i++){
    [output appendFormat:@"%@%@: %@\n", indent, @"packedSint32", @([self.packedSint32Array int32AtIndex:i])];
  }
  listCount = self.packedSint64Array.count;
  for(int i=0; i < listCount; i++){
    [output appendFormat:@"%@%@: %@\n", indent, @"packedSint64", @([self.packedSint64Array int64AtIndex:i])];
  }
  listCount = self.packedFixed32Array.count;
  for(int i=0; i < listCount; i++){
    [output appendFormat:@"%@%@: %@\n", indent, @"packedFixed32", @([self.packedFixed32Array uint32AtIndex:i])];
  }
  listCount = self.packedFixed64Array.count;
  for(int i=0; i < listCount; i++){
    [output appendFormat:@"%@%@: %@\n", indent, @"packedFixed64", @([self.packedFixed64Array uint64AtIndex:i])];
  }
  listCount = self.packedSfixed32Array.count;
  for(int i=0; i < listCount; i++){
    [output appendFormat:@"%@%@: %@\n", indent, @"packedSfixed32", @([self.packedSfixed32Array int32AtIndex:i])];
  }
  listCount = self.packedSfixed64Array.count;
  for(int i=0; i < listCount; i++){
    [output appendFormat:@"%@%@: %@\n", indent, @"packedSfixed64", @([self.packedSfixed64Array int64AtIndex:i])];
  }
  listCount = self.packedFloatArray.count;
  for(int i=0; i < listCount; i++){
    [output appendFormat:@"%@%@: %@\n", indent, @"packedFloat", @([self.packedFloatArray floatAtIndex:i])];
  }
  listCount = self.packedDoubleArray.count;
  for(int i=0; i < listCount; i++){
    [output appendFormat:@"%@%@: %@\n", indent, @"packedDouble", @([self.packedDoubleArray doubleAtIndex:i])];
  }
  listCount = self.packedBoolArray.count;
  for(int i=0; i < listCount; i++){
    [output appendFormat:@"%@%@: %@\n", indent, @"packedBool", @([self.packedBoolArray boolAtIndex:i])];
  }
  for (NSNumber* element in self.packedEnumArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"packedEnum", element];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}

- (BOOL)isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TestPackedTypesLite class]]) {
    return NO;
  }
  TestPackedTypesLite *otherMessage = other;
  return
      ((self.packedInt32Array == nil && otherMessage.packedInt32Array == nil) ||
      [self.packedInt32Array isEqualToArray:otherMessage.packedInt32Array]) &&
      ((self.packedInt64Array == nil && otherMessage.packedInt64Array == nil) ||
      [self.packedInt64Array isEqualToArray:otherMessage.packedInt64Array]) &&
      ((self.packedUint32Array == nil && otherMessage.packedUint32Array == nil) ||
      [self.packedUint32Array isEqualToArray:otherMessage.packedUint32Array]) &&
      ((self.packedUint64Array == nil && otherMessage.packedUint64Array == nil) ||
      [self.packedUint64Array isEqualToArray:otherMessage.packedUint64Array]) &&
      ((self.packedSint32Array == nil && otherMessage.packedSint32Array == nil) ||
      [self.packedSint32Array isEqualToArray:otherMessage.packedSint32Array]) &&
      ((self.packedSint64Array == nil && otherMessage.packedSint64Array == nil) ||
      [self.packedSint64Array isEqualToArray:otherMessage.packedSint64Array]) &&
      ((self.packedFixed32Array == nil && otherMessage.packedFixed32Array == nil) ||
      [self.packedFixed32Array isEqualToArray:otherMessage.packedFixed32Array]) &&
      ((self.packedFixed64Array == nil && otherMessage.packedFixed64Array == nil) ||
      [self.packedFixed64Array isEqualToArray:otherMessage.packedFixed64Array]) &&
      ((self.packedSfixed32Array == nil && otherMessage.packedSfixed32Array == nil) ||
      [self.packedSfixed32Array isEqualToArray:otherMessage.packedSfixed32Array]) &&
      ((self.packedSfixed64Array == nil && otherMessage.packedSfixed64Array == nil) ||
      [self.packedSfixed64Array isEqualToArray:otherMessage.packedSfixed64Array]) &&
      ((self.packedFloatArray == nil && otherMessage.packedFloatArray == nil) ||
      [self.packedFloatArray isEqualToArray:otherMessage.packedFloatArray]) &&
      ((self.packedDoubleArray == nil && otherMessage.packedDoubleArray == nil) ||
      [self.packedDoubleArray isEqualToArray:otherMessage.packedDoubleArray]) &&
      ((self.packedBoolArray == nil && otherMessage.packedBoolArray == nil) ||
      [self.packedBoolArray isEqualToArray:otherMessage.packedBoolArray]) &&
      ((self.packedEnumArray == nil && otherMessage.packedEnumArray == nil) ||
      [self.packedEnumArray isEqualToArray:otherMessage.packedEnumArray]) &&
      (self.unknownFields == otherMessage.unknownFields ||
       (self.unknownFields != nil &&
       [self.unknownFields isEqual:otherMessage.unknownFields]));
}

- (NSUInteger)hash {
  NSUInteger hashCode; hashCode = 7;
  NSUInteger listCount; listCount = 0;
  listCount = self.packedInt32Array.count;
  for(int i=0; i < listCount; i++){
    hashCode = hashCode * 31 + [self.packedInt32Array int32AtIndex:i];
  }
  listCount = self.packedInt64Array.count;
  for(int i=0; i < listCount; i++){
    hashCode = hashCode * 31 + [self.packedInt64Array int64AtIndex:i];
  }
  listCount = self.packedUint32Array.count;
  for(int i=0; i < listCount; i++){
    hashCode = hashCode * 31 + [self.packedUint32Array uint32AtIndex:i];
  }
  listCount = self.packedUint64Array.count;
  for(int i=0; i < listCount; i++){
    hashCode = hashCode * 31 + [self.packedUint64Array uint64AtIndex:i];
  }
  listCount = self.packedSint32Array.count;
  for(int i=0; i < listCount; i++){
    hashCode = hashCode * 31 + [self.packedSint32Array int32AtIndex:i];
  }
  listCount = self.packedSint64Array.count;
  for(int i=0; i < listCount; i++){
    hashCode = hashCode * 31 + [self.packedSint64Array int64AtIndex:i];
  }
  listCount = self.packedFixed32Array.count;
  for(int i=0; i < listCount; i++){
    hashCode = hashCode * 31 + [self.packedFixed32Array uint32AtIndex:i];
  }
  listCount = self.packedFixed64Array.count;
  for(int i=0; i < listCount; i++){
    hashCode = hashCode * 31 + [self.packedFixed64Array uint64AtIndex:i];
  }
  listCount = self.packedSfixed32Array.count;
  for(int i=0; i < listCount; i++){
    hashCode = hashCode * 31 + [self.packedSfixed32Array int32AtIndex:i];
  }
  listCount = self.packedSfixed64Array.count;
  for(int i=0; i < listCount; i++){
    hashCode = hashCode * 31 + [self.packedSfixed64Array int64AtIndex:i];
  }
  listCount = self.packedFloatArray.count;
  for(int i=0; i < listCount; i++){
    hashCode = hashCode * 31 + [self.packedFloatArray floatAtIndex:i];
  }
  listCount = self.packedDoubleArray.count;
  for(int i=0; i < listCount; i++){
    hashCode = hashCode * 31 + [self.packedDoubleArray doubleAtIndex:i];
  }
  listCount = self.packedBoolArray.count;
  for(int i=0; i < listCount; i++){
    hashCode = hashCode * 31 + [self.packedBoolArray boolAtIndex:i];
  }
  for (NSNumber* element in self.packedEnumArray) {
    hashCode = hashCode * 31 + element.intValue;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}

@end


@implementation TestPackedTypesLite_Builder {
  TestPackedTypesLite* _result;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  _result = [[TestPackedTypesLite alloc] init];
  return self;
}

- (PBGeneratedMessage*)internalGetResult {
  return _result;
}
- (instancetype)clear {
  _result = [[TestPackedTypesLite alloc] init];
  return self;
}
- (instancetype)clone {
  return [[[TestPackedTypesLite_Builder alloc] init] mergeFrom:_result];
}

- (TestPackedTypesLite*)defaultMessageInstance {
  return [TestPackedTypesLite defaultInstance];
}

- (TestPackedTypesLite*)build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TestPackedTypesLite*)buildPartial {
  TestPackedTypesLite* partial = _result;
  _result = nil;
  return partial;
}

- (instancetype)mergeFrom:(TestPackedTypesLite*)other {
  if (other == [TestPackedTypesLite defaultInstance]) {
    return self;
  }
  if (other.packedInt32Array.count > 0) {
    if (_result.packedInt32Array == nil) {
      _result.packedInt32Array = [other.packedInt32Array copy];
    } else {
      [_result.packedInt32Array appendArray:other.packedInt32Array];
    }
  }
  if (other.packedInt64Array.count > 0) {
    if (_result.packedInt64Array == nil) {
      _result.packedInt64Array = [other.packedInt64Array copy];
    } else {
      [_result.packedInt64Array appendArray:other.packedInt64Array];
    }
  }
  if (other.packedUint32Array.count > 0) {
    if (_result.packedUint32Array == nil) {
      _result.packedUint32Array = [other.packedUint32Array copy];
    } else {
      [_result.packedUint32Array appendArray:other.packedUint32Array];
    }
  }
  if (other.packedUint64Array.count > 0) {
    if (_result.packedUint64Array == nil) {
      _result.packedUint64Array = [other.packedUint64Array copy];
    } else {
      [_result.packedUint64Array appendArray:other.packedUint64Array];
    }
  }
  if (other.packedSint32Array.count > 0) {
    if (_result.packedSint32Array == nil) {
      _result.packedSint32Array = [other.packedSint32Array copy];
    } else {
      [_result.packedSint32Array appendArray:other.packedSint32Array];
    }
  }
  if (other.packedSint64Array.count > 0) {
    if (_result.packedSint64Array == nil) {
      _result.packedSint64Array = [other.packedSint64Array copy];
    } else {
      [_result.packedSint64Array appendArray:other.packedSint64Array];
    }
  }
  if (other.packedFixed32Array.count > 0) {
    if (_result.packedFixed32Array == nil) {
      _result.packedFixed32Array = [other.packedFixed32Array copy];
    } else {
      [_result.packedFixed32Array appendArray:other.packedFixed32Array];
    }
  }
  if (other.packedFixed64Array.count > 0) {
    if (_result.packedFixed64Array == nil) {
      _result.packedFixed64Array = [other.packedFixed64Array copy];
    } else {
      [_result.packedFixed64Array appendArray:other.packedFixed64Array];
    }
  }
  if (other.packedSfixed32Array.count > 0) {
    if (_result.packedSfixed32Array == nil) {
      _result.packedSfixed32Array = [other.packedSfixed32Array copy];
    } else {
      [_result.packedSfixed32Array appendArray:other.packedSfixed32Array];
    }
  }
  if (other.packedSfixed64Array.count > 0) {
    if (_result.packedSfixed64Array == nil) {
      _result.packedSfixed64Array = [other.packedSfixed64Array copy];
    } else {
      [_result.packedSfixed64Array appendArray:other.packedSfixed64Array];
    }
  }
  if (other.packedFloatArray.count > 0) {
    if (_result.packedFloatArray == nil) {
      _result.packedFloatArray = [other.packedFloatArray copy];
    } else {
      [_result.packedFloatArray appendArray:other.packedFloatArray];
    }
  }
  if (other.packedDoubleArray.count > 0) {
    if (_result.packedDoubleArray == nil) {
      _result.packedDoubleArray = [other.packedDoubleArray copy];
    } else {
      [_result.packedDoubleArray appendArray:other.packedDoubleArray];
    }
  }
  if (other.packedBoolArray.count > 0) {
    if (_result.packedBoolArray == nil) {
      _result.packedBoolArray = [other.packedBoolArray copy];
    } else {
      [_result.packedBoolArray appendArray:other.packedBoolArray];
    }
  }
  if (other.packedEnumArray.count > 0) {
    if (_result.packedEnumArray == nil) {
      _result.packedEnumArray = [[NSMutableArray alloc] initWithArray:other.packedEnumArray];
    } else {
      [_result.packedEnumArray addObjectsFromArray:other.packedEnumArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (instancetype)mergeFromCodedInputStream:(PBCodedInputStream*)input
                        extensionRegistry:(PBExtensionRegistry*)extensionRegistry
{
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input
                       unknownFields:unknownFields
                   extensionRegistry:extensionRegistry
                                 tag:tag])
        {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 722: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        if (_result.packedInt32Array == nil) {
          _result.packedInt32Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
        }
        while (input.bytesUntilLimit > 0) {
          [_result.packedInt32Array addInt32:[input readInt32]];
        }
        [input popLimit:limit];
        break;
      }
      case 730: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        if (_result.packedInt64Array == nil) {
          _result.packedInt64Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
        }
        while (input.bytesUntilLimit > 0) {
          [_result.packedInt64Array addInt64:[input readInt64]];
        }
        [input popLimit:limit];
        break;
      }
      case 738: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        if (_result.packedUint32Array == nil) {
          _result.packedUint32Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt32];
        }
        while (input.bytesUntilLimit > 0) {
          [_result.packedUint32Array addUint32:[input readUInt32]];
        }
        [input popLimit:limit];
        break;
      }
      case 746: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        if (_result.packedUint64Array == nil) {
          _result.packedUint64Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt64];
        }
        while (input.bytesUntilLimit > 0) {
          [_result.packedUint64Array addUint64:[input readUInt64]];
        }
        [input popLimit:limit];
        break;
      }
      case 754: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        if (_result.packedSint32Array == nil) {
          _result.packedSint32Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
        }
        while (input.bytesUntilLimit > 0) {
          [_result.packedSint32Array addInt32:[input readSInt32]];
        }
        [input popLimit:limit];
        break;
      }
      case 762: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        if (_result.packedSint64Array == nil) {
          _result.packedSint64Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
        }
        while (input.bytesUntilLimit > 0) {
          [_result.packedSint64Array addInt64:[input readSInt64]];
        }
        [input popLimit:limit];
        break;
      }
      case 770: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        if (_result.packedFixed32Array == nil) {
          _result.packedFixed32Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt32];
        }
        while (input.bytesUntilLimit > 0) {
          [_result.packedFixed32Array addUint32:[input readFixed32]];
        }
        [input popLimit:limit];
        break;
      }
      case 778: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        if (_result.packedFixed64Array == nil) {
          _result.packedFixed64Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt64];
        }
        while (input.bytesUntilLimit > 0) {
          [_result.packedFixed64Array addUint64:[input readFixed64]];
        }
        [input popLimit:limit];
        break;
      }
      case 786: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        if (_result.packedSfixed32Array == nil) {
          _result.packedSfixed32Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
        }
        while (input.bytesUntilLimit > 0) {
          [_result.packedSfixed32Array addInt32:[input readSFixed32]];
        }
        [input popLimit:limit];
        break;
      }
      case 794: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        if (_result.packedSfixed64Array == nil) {
          _result.packedSfixed64Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
        }
        while (input.bytesUntilLimit > 0) {
          [_result.packedSfixed64Array addInt64:[input readSFixed64]];
        }
        [input popLimit:limit];
        break;
      }
      case 802: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        if (_result.packedFloatArray == nil) {
          _result.packedFloatArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeFloat];
        }
        while (input.bytesUntilLimit > 0) {
          [_result.packedFloatArray addFloat:[input readFloat]];
        }
        [input popLimit:limit];
        break;
      }
      case 810: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        if (_result.packedDoubleArray == nil) {
          _result.packedDoubleArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeDouble];
        }
        while (input.bytesUntilLimit > 0) {
          [_result.packedDoubleArray addDouble:[input readDouble]];
        }
        [input popLimit:limit];
        break;
      }
      case 818: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        if (_result.packedBoolArray == nil) {
          _result.packedBoolArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeBool];
        }
        while (input.bytesUntilLimit > 0) {
          [_result.packedBoolArray addBool:[input readBool]];
        }
        [input popLimit:limit];
        break;
      }
      case 826: {
        int32_t length = [input readRawVarint32];
        int32_t oldLimit = [input pushLimit:length];
        while (input.bytesUntilLimit > 0) {
          int32_t value = [input readEnum];
          if (ForeignEnumLiteIsValidValue(value)) {
            [self addPackedEnum:value];
          } else {
            [unknownFields mergeVarintField:103 value:value];
          }
        }
        [input popLimit:oldLimit];
        break;
      }
    }
  }
}
- (PBAppendableArray *)packedInt32 {
  return _result.packedInt32Array;
}
- (int32_t)packedInt32AtIndex:(NSUInteger)index {
  return [_result packedInt32AtIndex:index];
}
- (instancetype)addPackedInt32:(int32_t)value {
  if (_result.packedInt32Array == nil) {
    _result.packedInt32Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [_result.packedInt32Array addInt32:value];
  return self;
}
- (instancetype)setPackedInt32Array:(NSArray *)array {
  _result.packedInt32Array = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt32];
  return self;
}
- (instancetype)setPackedInt32Values:(const int32_t *)values count:(NSUInteger)count {
  _result.packedInt32Array = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt32];
  return self;
}
- (instancetype)clearPackedInt32 {
  _result.packedInt32Array = nil;
  return self;
}
- (PBAppendableArray *)packedInt64 {
  return _result.packedInt64Array;
}
- (int64_t)packedInt64AtIndex:(NSUInteger)index {
  return [_result packedInt64AtIndex:index];
}
- (instancetype)addPackedInt64:(int64_t)value {
  if (_result.packedInt64Array == nil) {
    _result.packedInt64Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
  }
  [_result.packedInt64Array addInt64:value];
  return self;
}
- (instancetype)setPackedInt64Array:(NSArray *)array {
  _result.packedInt64Array = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt64];
  return self;
}
- (instancetype)setPackedInt64Values:(const int64_t *)values count:(NSUInteger)count {
  _result.packedInt64Array = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt64];
  return self;
}
- (instancetype)clearPackedInt64 {
  _result.packedInt64Array = nil;
  return self;
}
- (PBAppendableArray *)packedUint32 {
  return _result.packedUint32Array;
}
- (uint32_t)packedUint32AtIndex:(NSUInteger)index {
  return [_result packedUint32AtIndex:index];
}
- (instancetype)addPackedUint32:(uint32_t)value {
  if (_result.packedUint32Array == nil) {
    _result.packedUint32Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt32];
  }
  [_result.packedUint32Array addUint32:value];
  return self;
}
- (instancetype)setPackedUint32Array:(NSArray *)array {
  _result.packedUint32Array = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeUInt32];
  return self;
}
- (instancetype)setPackedUint32Values:(const uint32_t *)values count:(NSUInteger)count {
  _result.packedUint32Array = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeUInt32];
  return self;
}
- (instancetype)clearPackedUint32 {
  _result.packedUint32Array = nil;
  return self;
}
- (PBAppendableArray *)packedUint64 {
  return _result.packedUint64Array;
}
- (uint64_t)packedUint64AtIndex:(NSUInteger)index {
  return [_result packedUint64AtIndex:index];
}
- (instancetype)addPackedUint64:(uint64_t)value {
  if (_result.packedUint64Array == nil) {
    _result.packedUint64Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt64];
  }
  [_result.packedUint64Array addUint64:value];
  return self;
}
- (instancetype)setPackedUint64Array:(NSArray *)array {
  _result.packedUint64Array = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeUInt64];
  return self;
}
- (instancetype)setPackedUint64Values:(const uint64_t *)values count:(NSUInteger)count {
  _result.packedUint64Array = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeUInt64];
  return self;
}
- (instancetype)clearPackedUint64 {
  _result.packedUint64Array = nil;
  return self;
}
- (PBAppendableArray *)packedSint32 {
  return _result.packedSint32Array;
}
- (int32_t)packedSint32AtIndex:(NSUInteger)index {
  return [_result packedSint32AtIndex:index];
}
- (instancetype)addPackedSint32:(int32_t)value {
  if (_result.packedSint32Array == nil) {
    _result.packedSint32Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [_result.packedSint32Array addInt32:value];
  return self;
}
- (instancetype)setPackedSint32Array:(NSArray *)array {
  _result.packedSint32Array = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt32];
  return self;
}
- (instancetype)setPackedSint32Values:(const int32_t *)values count:(NSUInteger)count {
  _result.packedSint32Array = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt32];
  return self;
}
- (instancetype)clearPackedSint32 {
  _result.packedSint32Array = nil;
  return self;
}
- (PBAppendableArray *)packedSint64 {
  return _result.packedSint64Array;
}
- (int64_t)packedSint64AtIndex:(NSUInteger)index {
  return [_result packedSint64AtIndex:index];
}
- (instancetype)addPackedSint64:(int64_t)value {
  if (_result.packedSint64Array == nil) {
    _result.packedSint64Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
  }
  [_result.packedSint64Array addInt64:value];
  return self;
}
- (instancetype)setPackedSint64Array:(NSArray *)array {
  _result.packedSint64Array = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt64];
  return self;
}
- (instancetype)setPackedSint64Values:(const int64_t *)values count:(NSUInteger)count {
  _result.packedSint64Array = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt64];
  return self;
}
- (instancetype)clearPackedSint64 {
  _result.packedSint64Array = nil;
  return self;
}
- (PBAppendableArray *)packedFixed32 {
  return _result.packedFixed32Array;
}
- (uint32_t)packedFixed32AtIndex:(NSUInteger)index {
  return [_result packedFixed32AtIndex:index];
}
- (instancetype)addPackedFixed32:(uint32_t)value {
  if (_result.packedFixed32Array == nil) {
    _result.packedFixed32Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt32];
  }
  [_result.packedFixed32Array addUint32:value];
  return self;
}
- (instancetype)setPackedFixed32Array:(NSArray *)array {
  _result.packedFixed32Array = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeUInt32];
  return self;
}
- (instancetype)setPackedFixed32Values:(const uint32_t *)values count:(NSUInteger)count {
  _result.packedFixed32Array = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeUInt32];
  return self;
}
- (instancetype)clearPackedFixed32 {
  _result.packedFixed32Array = nil;
  return self;
}
- (PBAppendableArray *)packedFixed64 {
  return _result.packedFixed64Array;
}
- (uint64_t)packedFixed64AtIndex:(NSUInteger)index {
  return [_result packedFixed64AtIndex:index];
}
- (instancetype)addPackedFixed64:(uint64_t)value {
  if (_result.packedFixed64Array == nil) {
    _result.packedFixed64Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt64];
  }
  [_result.packedFixed64Array addUint64:value];
  return self;
}
- (instancetype)setPackedFixed64Array:(NSArray *)array {
  _result.packedFixed64Array = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeUInt64];
  return self;
}
- (instancetype)setPackedFixed64Values:(const uint64_t *)values count:(NSUInteger)count {
  _result.packedFixed64Array = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeUInt64];
  return self;
}
- (instancetype)clearPackedFixed64 {
  _result.packedFixed64Array = nil;
  return self;
}
- (PBAppendableArray *)packedSfixed32 {
  return _result.packedSfixed32Array;
}
- (int32_t)packedSfixed32AtIndex:(NSUInteger)index {
  return [_result packedSfixed32AtIndex:index];
}
- (instancetype)addPackedSfixed32:(int32_t)value {
  if (_result.packedSfixed32Array == nil) {
    _result.packedSfixed32Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [_result.packedSfixed32Array addInt32:value];
  return self;
}
- (instancetype)setPackedSfixed32Array:(NSArray *)array {
  _result.packedSfixed32Array = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt32];
  return self;
}
- (instancetype)setPackedSfixed32Values:(const int32_t *)values count:(NSUInteger)count {
  _result.packedSfixed32Array = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt32];
  return self;
}
- (instancetype)clearPackedSfixed32 {
  _result.packedSfixed32Array = nil;
  return self;
}
- (PBAppendableArray *)packedSfixed64 {
  return _result.packedSfixed64Array;
}
- (int64_t)packedSfixed64AtIndex:(NSUInteger)index {
  return [_result packedSfixed64AtIndex:index];
}
- (instancetype)addPackedSfixed64:(int64_t)value {
  if (_result.packedSfixed64Array == nil) {
    _result.packedSfixed64Array = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
  }
  [_result.packedSfixed64Array addInt64:value];
  return self;
}
- (instancetype)setPackedSfixed64Array:(NSArray *)array {
  _result.packedSfixed64Array = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt64];
  return self;
}
- (instancetype)setPackedSfixed64Values:(const int64_t *)values count:(NSUInteger)count {
  _result.packedSfixed64Array = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt64];
  return self;
}
- (instancetype)clearPackedSfixed64 {
  _result.packedSfixed64Array = nil;
  return self;
}
- (PBAppendableArray *)packedFloat {
  return _result.packedFloatArray;
}
- (Float32)packedFloatAtIndex:(NSUInteger)index {
  return [_result packedFloatAtIndex:index];
}
- (instancetype)addPackedFloat:(Float32)value {
  if (_result.packedFloatArray == nil) {
    _result.packedFloatArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeFloat];
  }
  [_result.packedFloatArray addFloat:value];
  return self;
}
- (instancetype)setPackedFloatArray:(NSArray *)array {
  _result.packedFloatArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeFloat];
  return self;
}
- (instancetype)setPackedFloatValues:(const Float32 *)values count:(NSUInteger)count {
  _result.packedFloatArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeFloat];
  return self;
}
- (instancetype)clearPackedFloat {
  _result.packedFloatArray = nil;
  return self;
}
- (PBAppendableArray *)packedDouble {
  return _result.packedDoubleArray;
}
- (Float64)packedDoubleAtIndex:(NSUInteger)index {
  return [_result packedDoubleAtIndex:index];
}
- (instancetype)addPackedDouble:(Float64)value {
  if (_result.packedDoubleArray == nil) {
    _result.packedDoubleArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeDouble];
  }
  [_result.packedDoubleArray addDouble:value];
  return self;
}
- (instancetype)setPackedDoubleArray:(NSArray *)array {
  _result.packedDoubleArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeDouble];
  return self;
}
- (instancetype)setPackedDoubleValues:(const Float64 *)values count:(NSUInteger)count {
  _result.packedDoubleArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeDouble];
  return self;
}
- (instancetype)clearPackedDouble {
  _result.packedDoubleArray = nil;
  return self;
}
- (PBAppendableArray *)packedBool {
  return _result.packedBoolArray;
}
- (BOOL)packedBoolAtIndex:(NSUInteger)index {
  return [_result packedBoolAtIndex:index];
}
- (instancetype)addPackedBool:(BOOL)value {
  if (_result.packedBoolArray == nil) {
    _result.packedBoolArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeBool];
  }
  [_result.packedBoolArray addBool:value];
  return self;
}
- (instancetype)setPackedBoolArray:(NSArray *)array {
  _result.packedBoolArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeBool];
  return self;
}
- (instancetype)setPackedBoolValues:(const BOOL *)values count:(NSUInteger)count {
  _result.packedBoolArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeBool];
  return self;
}
- (instancetype)clearPackedBool {
  _result.packedBoolArray = nil;
  return self;
}
- (NSMutableArray *)packedEnum {
  return _result.packedEnumArray;
}
- (ForeignEnumLite)packedEnumAtIndex:(NSUInteger)index {
  return [_result packedEnumAtIndex:index];
}
- (TestPackedTypesLite_Builder *)addPackedEnum:(ForeignEnumLite)value {
  if (_result.packedEnumArray == nil) {
    _result.packedEnumArray = [NSMutableArray array];
  }
  [_result.packedEnumArray addObject:@(value)];
  return self;
}
- (TestPackedTypesLite_Builder *)setPackedEnumArray:(NSArray *)array {
  _result.packedEnumArray = [NSMutableArray arrayWithArray:array];
  return self;
}
- (TestPackedTypesLite_Builder *)clearPackedEnum {
  _result.packedEnumArray = nil;
  return self;
}

@end


#pragma mark - TestAllExtensionsLite

@interface TestAllExtensionsLite ()


@end

@implementation TestAllExtensionsLite {
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  return self;
}

+ (instancetype)defaultInstance {
  static id _sharedObject = nil;
  static dispatch_once_t onceToken;
  dispatch_once(&onceToken, ^{
    _sharedObject = [[self alloc] init];
  });
  return _sharedObject;
}



- (BOOL)isInitialized {
  if (!self.extensionsAreInitialized) {
    return NO;
  }
  return YES;
}

- (void)writeToCodedOutputStream:(PBCodedOutputStream*)output {
  [self writeExtensionsToCodedOutputStream:output
                                      from:1
                                        to:536870912];
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t)serializedSize {
  int32_t size_ = _cachedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += [self extensionsSerializedSize];
  size_ += self.unknownFields.serializedSize;
  _cachedSerializedSize = size_;
  return size_;
}


+ (TestAllExtensionsLite_Builder*)builder {
  return [[TestAllExtensionsLite_Builder alloc] init];
}
+ (TestAllExtensionsLite_Builder*)builderWithPrototype:(TestAllExtensionsLite*)prototype {
  return [[TestAllExtensionsLite builder] mergeFrom:prototype];
}
- (TestAllExtensionsLite_Builder*)builder {
  return [TestAllExtensionsLite builder];
}
- (TestAllExtensionsLite_Builder*)toBuilder {
  return [TestAllExtensionsLite builderWithPrototype:self];
}

- (void)writeDescriptionTo:(NSMutableString*)output withIndent:(NSString*)indent {
  NSUInteger listCount; listCount = 0;
  [self writeExtensionDescriptionToMutableString:(NSMutableString*)output
                                            from:1
                                              to:536870912
                                      withIndent:indent];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}

- (BOOL)isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TestAllExtensionsLite class]]) {
    return NO;
  }
  TestAllExtensionsLite *otherMessage = other;
  return
      [self isEqualExtensionsInOther:otherMessage from:1 to:536870912] &&

      (self.unknownFields == otherMessage.unknownFields ||
       (self.unknownFields != nil &&
       [self.unknownFields isEqual:otherMessage.unknownFields]));
}

- (NSUInteger)hash {
  NSUInteger hashCode; hashCode = 7;
  NSUInteger listCount; listCount = 0;
  hashCode = hashCode * 31 + [self hashExtensionsFrom:1 to:536870912];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}

@end


@implementation TestAllExtensionsLite_Builder {
  TestAllExtensionsLite* _result;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  _result = [[TestAllExtensionsLite alloc] init];
  return self;
}

- (PBExtendableMessage*)internalGetResult {
  return _result;
}
- (instancetype)clear {
  _result = [[TestAllExtensionsLite alloc] init];
  return self;
}
- (instancetype)clone {
  return [[[TestAllExtensionsLite_Builder alloc] init] mergeFrom:_result];
}

- (TestAllExtensionsLite*)defaultMessageInstance {
  return [TestAllExtensionsLite defaultInstance];
}

- (TestAllExtensionsLite*)build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TestAllExtensionsLite*)buildPartial {
  TestAllExtensionsLite* partial = _result;
  _result = nil;
  return partial;
}

- (instancetype)mergeFrom:(TestAllExtensionsLite*)other {
  if (other == [TestAllExtensionsLite defaultInstance]) {
    return self;
  }
  [self mergeExtensionFields:other];
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (instancetype)mergeFromCodedInputStream:(PBCodedInputStream*)input
                        extensionRegistry:(PBExtensionRegistry*)extensionRegistry
{
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input
                       unknownFields:unknownFields
                   extensionRegistry:extensionRegistry
                                 tag:tag])
        {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}

@end


#pragma mark - OptionalGroup_extension_lite

@interface OptionalGroup_extension_lite ()

@property int32_t a;

@end

@implementation OptionalGroup_extension_lite {
  BOOL _hasA:1;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
    _a = 0;
  return self;
}

+ (instancetype)defaultInstance {
  static id _sharedObject = nil;
  static dispatch_once_t onceToken;
  dispatch_once(&onceToken, ^{
    _sharedObject = [[self alloc] init];
  });
  return _sharedObject;
}

- (BOOL)hasA {
  return !!_hasA;
}
- (void)setHasA:(BOOL)value {
  _hasA = !!value;
}


- (BOOL)isInitialized {
  return YES;
}

- (void)writeToCodedOutputStream:(PBCodedOutputStream*)output {
  if (self.hasA) {
    [output writeInt32:17 value:self.a];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t)serializedSize {
  int32_t size_ = _cachedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasA) {
    size_ += computeInt32Size(17, self.a);
  }
  size_ += self.unknownFields.serializedSize;
  _cachedSerializedSize = size_;
  return size_;
}


+ (OptionalGroup_extension_lite_Builder*)builder {
  return [[OptionalGroup_extension_lite_Builder alloc] init];
}
+ (OptionalGroup_extension_lite_Builder*)builderWithPrototype:(OptionalGroup_extension_lite*)prototype {
  return [[OptionalGroup_extension_lite builder] mergeFrom:prototype];
}
- (OptionalGroup_extension_lite_Builder*)builder {
  return [OptionalGroup_extension_lite builder];
}
- (OptionalGroup_extension_lite_Builder*)toBuilder {
  return [OptionalGroup_extension_lite builderWithPrototype:self];
}

- (void)writeDescriptionTo:(NSMutableString*)output withIndent:(NSString*)indent {
  NSUInteger listCount; listCount = 0;
  if (self.hasA) {
    [output appendFormat:@"%@%@: %@\n", indent, @"a", @(self.a)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}

- (BOOL)isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[OptionalGroup_extension_lite class]]) {
    return NO;
  }
  OptionalGroup_extension_lite *otherMessage = other;
  return
      self.hasA == otherMessage.hasA &&
      (!self.hasA || self.a == otherMessage.a) &&
      (self.unknownFields == otherMessage.unknownFields ||
       (self.unknownFields != nil &&
       [self.unknownFields isEqual:otherMessage.unknownFields]));
}

- (NSUInteger)hash {
  NSUInteger hashCode; hashCode = 7;
  NSUInteger listCount; listCount = 0;
  if (self.hasA) {
    hashCode = hashCode * 31 + [@(self.a) hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}

@end


@implementation OptionalGroup_extension_lite_Builder {
  OptionalGroup_extension_lite* _result;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  _result = [[OptionalGroup_extension_lite alloc] init];
  return self;
}

- (PBGeneratedMessage*)internalGetResult {
  return _result;
}
- (instancetype)clear {
  _result = [[OptionalGroup_extension_lite alloc] init];
  return self;
}
- (instancetype)clone {
  return [[[OptionalGroup_extension_lite_Builder alloc] init] mergeFrom:_result];
}

- (OptionalGroup_extension_lite*)defaultMessageInstance {
  return [OptionalGroup_extension_lite defaultInstance];
}

- (OptionalGroup_extension_lite*)build {
  [self checkInitialized];
  return [self buildPartial];
}
- (OptionalGroup_extension_lite*)buildPartial {
  OptionalGroup_extension_lite* partial = _result;
  _result = nil;
  return partial;
}

- (instancetype)mergeFrom:(OptionalGroup_extension_lite*)other {
  if (other == [OptionalGroup_extension_lite defaultInstance]) {
    return self;
  }
  if (other.hasA) {
    [self setA:other.a];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (instancetype)mergeFromCodedInputStream:(PBCodedInputStream*)input
                        extensionRegistry:(PBExtensionRegistry*)extensionRegistry
{
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input
                       unknownFields:unknownFields
                   extensionRegistry:extensionRegistry
                                 tag:tag])
        {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 136: {
        [self setA:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL)hasA {
  return _result.hasA;
}
- (int32_t) a {
  return _result.a;
}
- (instancetype)setA:(int32_t)value {
  _result.hasA = YES;
  _result.a = value;
  return self;
}
- (instancetype)clearA {
  _result.hasA = NO;
  _result.a = 0;
  return self;
}

@end


#pragma mark - RepeatedGroup_extension_lite

@interface RepeatedGroup_extension_lite ()

@property int32_t a;

@end

@implementation RepeatedGroup_extension_lite {
  BOOL _hasA:1;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
    _a = 0;
  return self;
}

+ (instancetype)defaultInstance {
  static id _sharedObject = nil;
  static dispatch_once_t onceToken;
  dispatch_once(&onceToken, ^{
    _sharedObject = [[self alloc] init];
  });
  return _sharedObject;
}

- (BOOL)hasA {
  return !!_hasA;
}
- (void)setHasA:(BOOL)value {
  _hasA = !!value;
}


- (BOOL)isInitialized {
  return YES;
}

- (void)writeToCodedOutputStream:(PBCodedOutputStream*)output {
  if (self.hasA) {
    [output writeInt32:47 value:self.a];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t)serializedSize {
  int32_t size_ = _cachedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasA) {
    size_ += computeInt32Size(47, self.a);
  }
  size_ += self.unknownFields.serializedSize;
  _cachedSerializedSize = size_;
  return size_;
}


+ (RepeatedGroup_extension_lite_Builder*)builder {
  return [[RepeatedGroup_extension_lite_Builder alloc] init];
}
+ (RepeatedGroup_extension_lite_Builder*)builderWithPrototype:(RepeatedGroup_extension_lite*)prototype {
  return [[RepeatedGroup_extension_lite builder] mergeFrom:prototype];
}
- (RepeatedGroup_extension_lite_Builder*)builder {
  return [RepeatedGroup_extension_lite builder];
}
- (RepeatedGroup_extension_lite_Builder*)toBuilder {
  return [RepeatedGroup_extension_lite builderWithPrototype:self];
}

- (void)writeDescriptionTo:(NSMutableString*)output withIndent:(NSString*)indent {
  NSUInteger listCount; listCount = 0;
  if (self.hasA) {
    [output appendFormat:@"%@%@: %@\n", indent, @"a", @(self.a)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}

- (BOOL)isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RepeatedGroup_extension_lite class]]) {
    return NO;
  }
  RepeatedGroup_extension_lite *otherMessage = other;
  return
      self.hasA == otherMessage.hasA &&
      (!self.hasA || self.a == otherMessage.a) &&
      (self.unknownFields == otherMessage.unknownFields ||
       (self.unknownFields != nil &&
       [self.unknownFields isEqual:otherMessage.unknownFields]));
}

- (NSUInteger)hash {
  NSUInteger hashCode; hashCode = 7;
  NSUInteger listCount; listCount = 0;
  if (self.hasA) {
    hashCode = hashCode * 31 + [@(self.a) hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}

@end


@implementation RepeatedGroup_extension_lite_Builder {
  RepeatedGroup_extension_lite* _result;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  _result = [[RepeatedGroup_extension_lite alloc] init];
  return self;
}

- (PBGeneratedMessage*)internalGetResult {
  return _result;
}
- (instancetype)clear {
  _result = [[RepeatedGroup_extension_lite alloc] init];
  return self;
}
- (instancetype)clone {
  return [[[RepeatedGroup_extension_lite_Builder alloc] init] mergeFrom:_result];
}

- (RepeatedGroup_extension_lite*)defaultMessageInstance {
  return [RepeatedGroup_extension_lite defaultInstance];
}

- (RepeatedGroup_extension_lite*)build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RepeatedGroup_extension_lite*)buildPartial {
  RepeatedGroup_extension_lite* partial = _result;
  _result = nil;
  return partial;
}

- (instancetype)mergeFrom:(RepeatedGroup_extension_lite*)other {
  if (other == [RepeatedGroup_extension_lite defaultInstance]) {
    return self;
  }
  if (other.hasA) {
    [self setA:other.a];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (instancetype)mergeFromCodedInputStream:(PBCodedInputStream*)input
                        extensionRegistry:(PBExtensionRegistry*)extensionRegistry
{
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input
                       unknownFields:unknownFields
                   extensionRegistry:extensionRegistry
                                 tag:tag])
        {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 376: {
        [self setA:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL)hasA {
  return _result.hasA;
}
- (int32_t) a {
  return _result.a;
}
- (instancetype)setA:(int32_t)value {
  _result.hasA = YES;
  _result.a = value;
  return self;
}
- (instancetype)clearA {
  _result.hasA = NO;
  _result.a = 0;
  return self;
}

@end


#pragma mark - TestPackedExtensionsLite

@interface TestPackedExtensionsLite ()


@end

@implementation TestPackedExtensionsLite {
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  return self;
}

+ (instancetype)defaultInstance {
  static id _sharedObject = nil;
  static dispatch_once_t onceToken;
  dispatch_once(&onceToken, ^{
    _sharedObject = [[self alloc] init];
  });
  return _sharedObject;
}



- (BOOL)isInitialized {
  if (!self.extensionsAreInitialized) {
    return NO;
  }
  return YES;
}

- (void)writeToCodedOutputStream:(PBCodedOutputStream*)output {
  [self writeExtensionsToCodedOutputStream:output
                                      from:1
                                        to:536870912];
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t)serializedSize {
  int32_t size_ = _cachedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += [self extensionsSerializedSize];
  size_ += self.unknownFields.serializedSize;
  _cachedSerializedSize = size_;
  return size_;
}


+ (TestPackedExtensionsLite_Builder*)builder {
  return [[TestPackedExtensionsLite_Builder alloc] init];
}
+ (TestPackedExtensionsLite_Builder*)builderWithPrototype:(TestPackedExtensionsLite*)prototype {
  return [[TestPackedExtensionsLite builder] mergeFrom:prototype];
}
- (TestPackedExtensionsLite_Builder*)builder {
  return [TestPackedExtensionsLite builder];
}
- (TestPackedExtensionsLite_Builder*)toBuilder {
  return [TestPackedExtensionsLite builderWithPrototype:self];
}

- (void)writeDescriptionTo:(NSMutableString*)output withIndent:(NSString*)indent {
  NSUInteger listCount; listCount = 0;
  [self writeExtensionDescriptionToMutableString:(NSMutableString*)output
                                            from:1
                                              to:536870912
                                      withIndent:indent];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}

- (BOOL)isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TestPackedExtensionsLite class]]) {
    return NO;
  }
  TestPackedExtensionsLite *otherMessage = other;
  return
      [self isEqualExtensionsInOther:otherMessage from:1 to:536870912] &&

      (self.unknownFields == otherMessage.unknownFields ||
       (self.unknownFields != nil &&
       [self.unknownFields isEqual:otherMessage.unknownFields]));
}

- (NSUInteger)hash {
  NSUInteger hashCode; hashCode = 7;
  NSUInteger listCount; listCount = 0;
  hashCode = hashCode * 31 + [self hashExtensionsFrom:1 to:536870912];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}

@end


@implementation TestPackedExtensionsLite_Builder {
  TestPackedExtensionsLite* _result;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  _result = [[TestPackedExtensionsLite alloc] init];
  return self;
}

- (PBExtendableMessage*)internalGetResult {
  return _result;
}
- (instancetype)clear {
  _result = [[TestPackedExtensionsLite alloc] init];
  return self;
}
- (instancetype)clone {
  return [[[TestPackedExtensionsLite_Builder alloc] init] mergeFrom:_result];
}

- (TestPackedExtensionsLite*)defaultMessageInstance {
  return [TestPackedExtensionsLite defaultInstance];
}

- (TestPackedExtensionsLite*)build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TestPackedExtensionsLite*)buildPartial {
  TestPackedExtensionsLite* partial = _result;
  _result = nil;
  return partial;
}

- (instancetype)mergeFrom:(TestPackedExtensionsLite*)other {
  if (other == [TestPackedExtensionsLite defaultInstance]) {
    return self;
  }
  [self mergeExtensionFields:other];
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (instancetype)mergeFromCodedInputStream:(PBCodedInputStream*)input
                        extensionRegistry:(PBExtensionRegistry*)extensionRegistry
{
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input
                       unknownFields:unknownFields
                   extensionRegistry:extensionRegistry
                                 tag:tag])
        {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}

@end


#pragma mark - TestNestedExtensionLite

@interface TestNestedExtensionLite ()


@end

@implementation TestNestedExtensionLite {
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  return self;
}

+ (instancetype)defaultInstance {
  static id _sharedObject = nil;
  static dispatch_once_t onceToken;
  dispatch_once(&onceToken, ^{
    _sharedObject = [[self alloc] init];
  });
  return _sharedObject;
}


+ (PBExtensionField *)nestedExtension {
  return TestNestedExtensionLite_nestedExtension;
}


- (BOOL)isInitialized {
  return YES;
}

- (void)writeToCodedOutputStream:(PBCodedOutputStream*)output {
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t)serializedSize {
  int32_t size_ = _cachedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  _cachedSerializedSize = size_;
  return size_;
}


+ (TestNestedExtensionLite_Builder*)builder {
  return [[TestNestedExtensionLite_Builder alloc] init];
}
+ (TestNestedExtensionLite_Builder*)builderWithPrototype:(TestNestedExtensionLite*)prototype {
  return [[TestNestedExtensionLite builder] mergeFrom:prototype];
}
- (TestNestedExtensionLite_Builder*)builder {
  return [TestNestedExtensionLite builder];
}
- (TestNestedExtensionLite_Builder*)toBuilder {
  return [TestNestedExtensionLite builderWithPrototype:self];
}

- (void)writeDescriptionTo:(NSMutableString*)output withIndent:(NSString*)indent {
  NSUInteger listCount; listCount = 0;
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}

- (BOOL)isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TestNestedExtensionLite class]]) {
    return NO;
  }
  TestNestedExtensionLite *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields ||
       (self.unknownFields != nil &&
       [self.unknownFields isEqual:otherMessage.unknownFields]));
}

- (NSUInteger)hash {
  NSUInteger hashCode; hashCode = 7;
  NSUInteger listCount; listCount = 0;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}

@end


@implementation TestNestedExtensionLite_Builder {
  TestNestedExtensionLite* _result;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  _result = [[TestNestedExtensionLite alloc] init];
  return self;
}

- (PBGeneratedMessage*)internalGetResult {
  return _result;
}
- (instancetype)clear {
  _result = [[TestNestedExtensionLite alloc] init];
  return self;
}
- (instancetype)clone {
  return [[[TestNestedExtensionLite_Builder alloc] init] mergeFrom:_result];
}

- (TestNestedExtensionLite*)defaultMessageInstance {
  return [TestNestedExtensionLite defaultInstance];
}

- (TestNestedExtensionLite*)build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TestNestedExtensionLite*)buildPartial {
  TestNestedExtensionLite* partial = _result;
  _result = nil;
  return partial;
}

- (instancetype)mergeFrom:(TestNestedExtensionLite*)other {
  if (other == [TestNestedExtensionLite defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (instancetype)mergeFromCodedInputStream:(PBCodedInputStream*)input
                        extensionRegistry:(PBExtensionRegistry*)extensionRegistry
{
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input
                       unknownFields:unknownFields
                   extensionRegistry:extensionRegistry
                                 tag:tag])
        {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}

@end


#pragma mark - TestDeprecatedLite

@interface TestDeprecatedLite ()

@property int32_t deprecatedField;

@end

@implementation TestDeprecatedLite {
  BOOL _hasDeprecatedField:1;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
    _deprecatedField = 0;
  return self;
}

+ (instancetype)defaultInstance {
  static id _sharedObject = nil;
  static dispatch_once_t onceToken;
  dispatch_once(&onceToken, ^{
    _sharedObject = [[self alloc] init];
  });
  return _sharedObject;
}

- (BOOL)hasDeprecatedField {
  return !!_hasDeprecatedField;
}
- (void)setHasDeprecatedField:(BOOL)value {
  _hasDeprecatedField = !!value;
}


- (BOOL)isInitialized {
  return YES;
}

- (void)writeToCodedOutputStream:(PBCodedOutputStream*)output {
  if (self.hasDeprecatedField) {
    [output writeInt32:1 value:self.deprecatedField];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t)serializedSize {
  int32_t size_ = _cachedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasDeprecatedField) {
    size_ += computeInt32Size(1, self.deprecatedField);
  }
  size_ += self.unknownFields.serializedSize;
  _cachedSerializedSize = size_;
  return size_;
}


+ (TestDeprecatedLite_Builder*)builder {
  return [[TestDeprecatedLite_Builder alloc] init];
}
+ (TestDeprecatedLite_Builder*)builderWithPrototype:(TestDeprecatedLite*)prototype {
  return [[TestDeprecatedLite builder] mergeFrom:prototype];
}
- (TestDeprecatedLite_Builder*)builder {
  return [TestDeprecatedLite builder];
}
- (TestDeprecatedLite_Builder*)toBuilder {
  return [TestDeprecatedLite builderWithPrototype:self];
}

- (void)writeDescriptionTo:(NSMutableString*)output withIndent:(NSString*)indent {
  NSUInteger listCount; listCount = 0;
  if (self.hasDeprecatedField) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deprecatedField", @(self.deprecatedField)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}

- (BOOL)isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TestDeprecatedLite class]]) {
    return NO;
  }
  TestDeprecatedLite *otherMessage = other;
  return
      self.hasDeprecatedField == otherMessage.hasDeprecatedField &&
      (!self.hasDeprecatedField || self.deprecatedField == otherMessage.deprecatedField) &&
      (self.unknownFields == otherMessage.unknownFields ||
       (self.unknownFields != nil &&
       [self.unknownFields isEqual:otherMessage.unknownFields]));
}

- (NSUInteger)hash {
  NSUInteger hashCode; hashCode = 7;
  NSUInteger listCount; listCount = 0;
  if (self.hasDeprecatedField) {
    hashCode = hashCode * 31 + [@(self.deprecatedField) hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}

@end


@implementation TestDeprecatedLite_Builder {
  TestDeprecatedLite* _result;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  _result = [[TestDeprecatedLite alloc] init];
  return self;
}

- (PBGeneratedMessage*)internalGetResult {
  return _result;
}
- (instancetype)clear {
  _result = [[TestDeprecatedLite alloc] init];
  return self;
}
- (instancetype)clone {
  return [[[TestDeprecatedLite_Builder alloc] init] mergeFrom:_result];
}

- (TestDeprecatedLite*)defaultMessageInstance {
  return [TestDeprecatedLite defaultInstance];
}

- (TestDeprecatedLite*)build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TestDeprecatedLite*)buildPartial {
  TestDeprecatedLite* partial = _result;
  _result = nil;
  return partial;
}

- (instancetype)mergeFrom:(TestDeprecatedLite*)other {
  if (other == [TestDeprecatedLite defaultInstance]) {
    return self;
  }
  if (other.hasDeprecatedField) {
    [self setDeprecatedField:other.deprecatedField];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (instancetype)mergeFromCodedInputStream:(PBCodedInputStream*)input
                        extensionRegistry:(PBExtensionRegistry*)extensionRegistry
{
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input
                       unknownFields:unknownFields
                   extensionRegistry:extensionRegistry
                                 tag:tag])
        {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setDeprecatedField:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL)hasDeprecatedField {
  return _result.hasDeprecatedField;
}
- (int32_t) deprecatedField {
  return _result.deprecatedField;
}
- (instancetype)setDeprecatedField:(int32_t)value {
  _result.hasDeprecatedField = YES;
  _result.deprecatedField = value;
  return self;
}
- (instancetype)clearDeprecatedField {
  _result.hasDeprecatedField = NO;
  _result.deprecatedField = 0;
  return self;
}

@end


#pragma mark - TestParsingMergeLite

@interface TestParsingMergeLite ()

@property (strong) TestAllTypesLite* requiredAllTypes;
@property (strong) TestAllTypesLite* optionalAllTypes;
@property (strong) NSMutableArray *repeatedAllTypesArray;
@property (strong) TestParsingMergeLite_OptionalGroup* OptionalGroup;
@property (strong) NSMutableArray *RepeatedGroupArray;

@end

@implementation TestParsingMergeLite {
  BOOL _hasOptionalGroup:1;
  BOOL _hasRequiredAllTypes:1;
  BOOL _hasOptionalAllTypes:1;
  NSMutableArray *_RepeatedGroupArray;
  NSMutableArray *_repeatedAllTypesArray;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
    _requiredAllTypes = [TestAllTypesLite defaultInstance];
    _optionalAllTypes = [TestAllTypesLite defaultInstance];
    _OptionalGroup = [TestParsingMergeLite_OptionalGroup defaultInstance];
  return self;
}

+ (instancetype)defaultInstance {
  static id _sharedObject = nil;
  static dispatch_once_t onceToken;
  dispatch_once(&onceToken, ^{
    _sharedObject = [[self alloc] init];
  });
  return _sharedObject;
}

- (BOOL)hasRequiredAllTypes {
  return !!_hasRequiredAllTypes;
}
- (void)setHasRequiredAllTypes:(BOOL)value {
  _hasRequiredAllTypes = !!value;
}

- (BOOL)hasOptionalAllTypes {
  return !!_hasOptionalAllTypes;
}
- (void)setHasOptionalAllTypes:(BOOL)value {
  _hasOptionalAllTypes = !!value;
}

@dynamic repeatedAllTypes;
- (BOOL)hasOptionalGroup {
  return !!_hasOptionalGroup;
}
- (void)setHasOptionalGroup:(BOOL)value {
  _hasOptionalGroup = !!value;
}

@dynamic RepeatedGroup;

+ (PBExtensionField *)optionalExt {
  return TestParsingMergeLite_optionalExt;
}
+ (PBExtensionField *)repeatedExt {
  return TestParsingMergeLite_repeatedExt;
}

- (NSArray *)repeatedAllTypes {
  return _repeatedAllTypesArray;
}
- (TestAllTypesLite*)repeatedAllTypesAtIndex:(NSUInteger)index {
  return _repeatedAllTypesArray[index];
}
- (NSArray *)RepeatedGroup {
  return _RepeatedGroupArray;
}
- (TestParsingMergeLite_RepeatedGroup*)RepeatedGroupAtIndex:(NSUInteger)index {
  return _RepeatedGroupArray[index];
}

- (BOOL)isInitialized {
  if (!self.hasRequiredAllTypes) {
    return NO;
  }
  if (!self.extensionsAreInitialized) {
    return NO;
  }
  return YES;
}

- (void)writeToCodedOutputStream:(PBCodedOutputStream*)output {
  if (self.hasRequiredAllTypes) {
    [output writeMessage:1 value:self.requiredAllTypes];
  }
  if (self.hasOptionalAllTypes) {
    [output writeMessage:2 value:self.optionalAllTypes];
  }
  for (TestAllTypesLite *element in self.repeatedAllTypesArray) {
    [output writeMessage:3 value:element];
  }
  if (self.hasOptionalGroup) {
    [output writeGroup:10 value:self.OptionalGroup];
  }
  for (TestParsingMergeLite_RepeatedGroup *element in self.RepeatedGroupArray) {
    [output writeGroup:20 value:element];
  }
  [self writeExtensionsToCodedOutputStream:output
                                      from:1000
                                        to:536870912];
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t)serializedSize {
  int32_t size_ = _cachedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasRequiredAllTypes) {
    size_ += computeMessageSize(1, self.requiredAllTypes);
  }
  if (self.hasOptionalAllTypes) {
    size_ += computeMessageSize(2, self.optionalAllTypes);
  }
  for (TestAllTypesLite *element in self.repeatedAllTypesArray) {
    size_ += computeMessageSize(3, element);
  }
  if (self.hasOptionalGroup) {
    size_ += computeGroupSize(10, self.OptionalGroup);
  }
  for (TestParsingMergeLite_RepeatedGroup *element in self.RepeatedGroupArray) {
    size_ += computeGroupSize(20, element);
  }
  size_ += [self extensionsSerializedSize];
  size_ += self.unknownFields.serializedSize;
  _cachedSerializedSize = size_;
  return size_;
}


+ (TestParsingMergeLite_Builder*)builder {
  return [[TestParsingMergeLite_Builder alloc] init];
}
+ (TestParsingMergeLite_Builder*)builderWithPrototype:(TestParsingMergeLite*)prototype {
  return [[TestParsingMergeLite builder] mergeFrom:prototype];
}
- (TestParsingMergeLite_Builder*)builder {
  return [TestParsingMergeLite builder];
}
- (TestParsingMergeLite_Builder*)toBuilder {
  return [TestParsingMergeLite builderWithPrototype:self];
}

- (void)writeDescriptionTo:(NSMutableString*)output withIndent:(NSString*)indent {
  NSUInteger listCount; listCount = 0;
  if (self.hasRequiredAllTypes) {
    [output appendFormat:@"%@%@ {\n", indent, @"requiredAllTypes"];
    [self.requiredAllTypes writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasOptionalAllTypes) {
    [output appendFormat:@"%@%@ {\n", indent, @"optionalAllTypes"];
    [self.optionalAllTypes writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (TestAllTypesLite* element in self.repeatedAllTypesArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"repeatedAllTypes"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasOptionalGroup) {
    [output appendFormat:@"%@%@ {\n", indent, @"OptionalGroup"];
    [self.OptionalGroup writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (TestParsingMergeLite_RepeatedGroup* element in self.RepeatedGroupArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"RepeatedGroup"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self writeExtensionDescriptionToMutableString:(NSMutableString*)output
                                            from:1000
                                              to:536870912
                                      withIndent:indent];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}

- (BOOL)isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TestParsingMergeLite class]]) {
    return NO;
  }
  TestParsingMergeLite *otherMessage = other;
  return
      self.hasRequiredAllTypes == otherMessage.hasRequiredAllTypes &&
      (!self.hasRequiredAllTypes || [self.requiredAllTypes isEqual:otherMessage.requiredAllTypes]) &&
      self.hasOptionalAllTypes == otherMessage.hasOptionalAllTypes &&
      (!self.hasOptionalAllTypes || [self.optionalAllTypes isEqual:otherMessage.optionalAllTypes]) &&
      ((self.repeatedAllTypesArray == nil && otherMessage.repeatedAllTypesArray == nil) ||
      [self.repeatedAllTypesArray isEqualToArray:otherMessage.repeatedAllTypesArray]) &&
      self.hasOptionalGroup == otherMessage.hasOptionalGroup &&
      (!self.hasOptionalGroup || [self.OptionalGroup isEqual:otherMessage.OptionalGroup]) &&
      ((self.RepeatedGroupArray == nil && otherMessage.RepeatedGroupArray == nil) ||
      [self.RepeatedGroupArray isEqualToArray:otherMessage.RepeatedGroupArray]) &&
      [self isEqualExtensionsInOther:otherMessage from:1000 to:536870912] &&

      (self.unknownFields == otherMessage.unknownFields ||
       (self.unknownFields != nil &&
       [self.unknownFields isEqual:otherMessage.unknownFields]));
}

- (NSUInteger)hash {
  NSUInteger hashCode; hashCode = 7;
  NSUInteger listCount; listCount = 0;
  if (self.hasRequiredAllTypes) {
    hashCode = hashCode * 31 + [self.requiredAllTypes hash];
  }
  if (self.hasOptionalAllTypes) {
    hashCode = hashCode * 31 + [self.optionalAllTypes hash];
  }
  for (TestAllTypesLite* element in self.repeatedAllTypesArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasOptionalGroup) {
    hashCode = hashCode * 31 + [self.OptionalGroup hash];
  }
  for (TestParsingMergeLite_RepeatedGroup* element in self.RepeatedGroupArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self hashExtensionsFrom:1000 to:536870912];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}

@end


@implementation TestParsingMergeLite_Builder {
  TestParsingMergeLite* _result;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  _result = [[TestParsingMergeLite alloc] init];
  return self;
}

- (PBExtendableMessage*)internalGetResult {
  return _result;
}
- (instancetype)clear {
  _result = [[TestParsingMergeLite alloc] init];
  return self;
}
- (instancetype)clone {
  return [[[TestParsingMergeLite_Builder alloc] init] mergeFrom:_result];
}

- (TestParsingMergeLite*)defaultMessageInstance {
  return [TestParsingMergeLite defaultInstance];
}

- (TestParsingMergeLite*)build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TestParsingMergeLite*)buildPartial {
  TestParsingMergeLite* partial = _result;
  _result = nil;
  return partial;
}

- (instancetype)mergeFrom:(TestParsingMergeLite*)other {
  if (other == [TestParsingMergeLite defaultInstance]) {
    return self;
  }
  if (other.hasRequiredAllTypes) {
    [self mergeRequiredAllTypes:other.requiredAllTypes];
  }
  if (other.hasOptionalAllTypes) {
    [self mergeOptionalAllTypes:other.optionalAllTypes];
  }
  if (other.repeatedAllTypesArray.count > 0) {
    if (_result.repeatedAllTypesArray == nil) {
      _result.repeatedAllTypesArray = [[NSMutableArray alloc] initWithArray:other.repeatedAllTypesArray];
    } else {
      [_result.repeatedAllTypesArray addObjectsFromArray:other.repeatedAllTypesArray];
    }
  }
  if (other.hasOptionalGroup) {
    [self mergeOptionalGroup:other.OptionalGroup];
  }
  if (other.RepeatedGroupArray.count > 0) {
    if (_result.RepeatedGroupArray == nil) {
      _result.RepeatedGroupArray = [[NSMutableArray alloc] initWithArray:other.RepeatedGroupArray];
    } else {
      [_result.RepeatedGroupArray addObjectsFromArray:other.RepeatedGroupArray];
    }
  }
  [self mergeExtensionFields:other];
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (instancetype)mergeFromCodedInputStream:(PBCodedInputStream*)input
                        extensionRegistry:(PBExtensionRegistry*)extensionRegistry
{
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input
                       unknownFields:unknownFields
                   extensionRegistry:extensionRegistry
                                 tag:tag])
        {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TestAllTypesLite_Builder* subBuilder = [TestAllTypesLite builder];
        if (self.hasRequiredAllTypes) {
          [subBuilder mergeFrom:self.requiredAllTypes];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRequiredAllTypes:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        TestAllTypesLite_Builder* subBuilder = [TestAllTypesLite builder];
        if (self.hasOptionalAllTypes) {
          [subBuilder mergeFrom:self.optionalAllTypes];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOptionalAllTypes:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        TestAllTypesLite_Builder* subBuilder = [TestAllTypesLite builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRepeatedAllTypes:[subBuilder buildPartial]];
        break;
      }
      case 83: {
        TestParsingMergeLite_OptionalGroup_Builder* subBuilder = [TestParsingMergeLite_OptionalGroup builder];
        if (self.hasOptionalGroup) {
          [subBuilder mergeFrom:self.OptionalGroup];
        }
        [input readGroup:10 builder:subBuilder extensionRegistry:extensionRegistry];
        [self setOptionalGroup:[subBuilder buildPartial]];
        break;
      }
      case 163: {
        TestParsingMergeLite_RepeatedGroup_Builder* subBuilder = [TestParsingMergeLite_RepeatedGroup builder];
        [input readGroup:20 builder:subBuilder extensionRegistry:extensionRegistry];
        [self addRepeatedGroup:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL)hasRequiredAllTypes {
  return _result.hasRequiredAllTypes;
}
- (TestAllTypesLite*)requiredAllTypes {
  return _result.requiredAllTypes;
}
- (instancetype)setRequiredAllTypes:(TestAllTypesLite*)value {
  _result.hasRequiredAllTypes = YES;
  _result.requiredAllTypes = value;
  return self;
}
- (instancetype)setRequiredAllTypesBuilder:(TestAllTypesLite_Builder*)builderForValue {
  return [self setRequiredAllTypes:[builderForValue build]];
}
- (instancetype)mergeRequiredAllTypes:(TestAllTypesLite*)value {
  if (_result.hasRequiredAllTypes &&
      _result.requiredAllTypes != [TestAllTypesLite defaultInstance]) {
    _result.requiredAllTypes =
      [[[TestAllTypesLite builderWithPrototype:_result.requiredAllTypes] mergeFrom:value] buildPartial];
  } else {
    _result.requiredAllTypes = value;
  }
  _result.hasRequiredAllTypes = YES;
  return self;
}
- (instancetype)clearRequiredAllTypes {
  _result.hasRequiredAllTypes = NO;
  _result.requiredAllTypes = [TestAllTypesLite defaultInstance];
  return self;
}
- (BOOL)hasOptionalAllTypes {
  return _result.hasOptionalAllTypes;
}
- (TestAllTypesLite*)optionalAllTypes {
  return _result.optionalAllTypes;
}
- (instancetype)setOptionalAllTypes:(TestAllTypesLite*)value {
  _result.hasOptionalAllTypes = YES;
  _result.optionalAllTypes = value;
  return self;
}
- (instancetype)setOptionalAllTypesBuilder:(TestAllTypesLite_Builder*)builderForValue {
  return [self setOptionalAllTypes:[builderForValue build]];
}
- (instancetype)mergeOptionalAllTypes:(TestAllTypesLite*)value {
  if (_result.hasOptionalAllTypes &&
      _result.optionalAllTypes != [TestAllTypesLite defaultInstance]) {
    _result.optionalAllTypes =
      [[[TestAllTypesLite builderWithPrototype:_result.optionalAllTypes] mergeFrom:value] buildPartial];
  } else {
    _result.optionalAllTypes = value;
  }
  _result.hasOptionalAllTypes = YES;
  return self;
}
- (instancetype)clearOptionalAllTypes {
  _result.hasOptionalAllTypes = NO;
  _result.optionalAllTypes = [TestAllTypesLite defaultInstance];
  return self;
}
- (NSMutableArray *)repeatedAllTypes {
  return _result.repeatedAllTypesArray;
}
- (TestAllTypesLite*)repeatedAllTypesAtIndex:(NSUInteger)index {
  return [_result repeatedAllTypesAtIndex:index];
}
- (instancetype)addRepeatedAllTypes:(TestAllTypesLite*)value {
  if (_result.repeatedAllTypesArray == nil) {
    _result.repeatedAllTypesArray = [[NSMutableArray alloc]init];
  }
  [_result.repeatedAllTypesArray addObject:value];
  return self;
}
- (instancetype)setRepeatedAllTypesArray:(NSArray *)array {
  _result.repeatedAllTypesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (instancetype)clearRepeatedAllTypes {
  _result.repeatedAllTypesArray = nil;
  return self;
}
- (BOOL)hasOptionalGroup {
  return _result.hasOptionalGroup;
}
- (TestParsingMergeLite_OptionalGroup*)OptionalGroup {
  return _result.OptionalGroup;
}
- (instancetype)setOptionalGroup:(TestParsingMergeLite_OptionalGroup*)value {
  _result.hasOptionalGroup = YES;
  _result.OptionalGroup = value;
  return self;
}
- (instancetype)setOptionalGroupBuilder:(TestParsingMergeLite_OptionalGroup_Builder*)builderForValue {
  return [self setOptionalGroup:[builderForValue build]];
}
- (instancetype)mergeOptionalGroup:(TestParsingMergeLite_OptionalGroup*)value {
  if (_result.hasOptionalGroup &&
      _result.OptionalGroup != [TestParsingMergeLite_OptionalGroup defaultInstance]) {
    _result.OptionalGroup =
      [[[TestParsingMergeLite_OptionalGroup builderWithPrototype:_result.OptionalGroup] mergeFrom:value] buildPartial];
  } else {
    _result.OptionalGroup = value;
  }
  _result.hasOptionalGroup = YES;
  return self;
}
- (instancetype)clearOptionalGroup {
  _result.hasOptionalGroup = NO;
  _result.OptionalGroup = [TestParsingMergeLite_OptionalGroup defaultInstance];
  return self;
}
- (NSMutableArray *)RepeatedGroup {
  return _result.RepeatedGroupArray;
}
- (TestParsingMergeLite_RepeatedGroup*)RepeatedGroupAtIndex:(NSUInteger)index {
  return [_result RepeatedGroupAtIndex:index];
}
- (instancetype)addRepeatedGroup:(TestParsingMergeLite_RepeatedGroup*)value {
  if (_result.RepeatedGroupArray == nil) {
    _result.RepeatedGroupArray = [[NSMutableArray alloc]init];
  }
  [_result.RepeatedGroupArray addObject:value];
  return self;
}
- (instancetype)setRepeatedGroupArray:(NSArray *)array {
  _result.RepeatedGroupArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (instancetype)clearRepeatedGroup {
  _result.RepeatedGroupArray = nil;
  return self;
}

@end


#pragma mark - TestParsingMergeLite_RepeatedFieldsGenerator

@interface TestParsingMergeLite_RepeatedFieldsGenerator ()

@property (strong) NSMutableArray *field1Array;
@property (strong) NSMutableArray *field2Array;
@property (strong) NSMutableArray *field3Array;
@property (strong) NSMutableArray *Group1Array;
@property (strong) NSMutableArray *Group2Array;
@property (strong) NSMutableArray *ext1Array;
@property (strong) NSMutableArray *ext2Array;

@end

@implementation TestParsingMergeLite_RepeatedFieldsGenerator {
  NSMutableArray *_Group1Array;
  NSMutableArray *_Group2Array;
  NSMutableArray *_field1Array;
  NSMutableArray *_field2Array;
  NSMutableArray *_field3Array;
  NSMutableArray *_ext1Array;
  NSMutableArray *_ext2Array;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  return self;
}

+ (instancetype)defaultInstance {
  static id _sharedObject = nil;
  static dispatch_once_t onceToken;
  dispatch_once(&onceToken, ^{
    _sharedObject = [[self alloc] init];
  });
  return _sharedObject;
}

@dynamic field1;
@dynamic field2;
@dynamic field3;
@dynamic Group1;
@dynamic Group2;
@dynamic ext1;
@dynamic ext2;

- (NSArray *)field1 {
  return _field1Array;
}
- (TestAllTypesLite*)field1AtIndex:(NSUInteger)index {
  return _field1Array[index];
}
- (NSArray *)field2 {
  return _field2Array;
}
- (TestAllTypesLite*)field2AtIndex:(NSUInteger)index {
  return _field2Array[index];
}
- (NSArray *)field3 {
  return _field3Array;
}
- (TestAllTypesLite*)field3AtIndex:(NSUInteger)index {
  return _field3Array[index];
}
- (NSArray *)Group1 {
  return _Group1Array;
}
- (TestParsingMergeLite_RepeatedFieldsGenerator_Group1*)Group1AtIndex:(NSUInteger)index {
  return _Group1Array[index];
}
- (NSArray *)Group2 {
  return _Group2Array;
}
- (TestParsingMergeLite_RepeatedFieldsGenerator_Group2*)Group2AtIndex:(NSUInteger)index {
  return _Group2Array[index];
}
- (NSArray *)ext1 {
  return _ext1Array;
}
- (TestAllTypesLite*)ext1AtIndex:(NSUInteger)index {
  return _ext1Array[index];
}
- (NSArray *)ext2 {
  return _ext2Array;
}
- (TestAllTypesLite*)ext2AtIndex:(NSUInteger)index {
  return _ext2Array[index];
}

- (BOOL)isInitialized {
  return YES;
}

- (void)writeToCodedOutputStream:(PBCodedOutputStream*)output {
  for (TestAllTypesLite *element in self.field1Array) {
    [output writeMessage:1 value:element];
  }
  for (TestAllTypesLite *element in self.field2Array) {
    [output writeMessage:2 value:element];
  }
  for (TestAllTypesLite *element in self.field3Array) {
    [output writeMessage:3 value:element];
  }
  for (TestParsingMergeLite_RepeatedFieldsGenerator_Group1 *element in self.Group1Array) {
    [output writeGroup:10 value:element];
  }
  for (TestParsingMergeLite_RepeatedFieldsGenerator_Group2 *element in self.Group2Array) {
    [output writeGroup:20 value:element];
  }
  for (TestAllTypesLite *element in self.ext1Array) {
    [output writeMessage:1000 value:element];
  }
  for (TestAllTypesLite *element in self.ext2Array) {
    [output writeMessage:1001 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t)serializedSize {
  int32_t size_ = _cachedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  for (TestAllTypesLite *element in self.field1Array) {
    size_ += computeMessageSize(1, element);
  }
  for (TestAllTypesLite *element in self.field2Array) {
    size_ += computeMessageSize(2, element);
  }
  for (TestAllTypesLite *element in self.field3Array) {
    size_ += computeMessageSize(3, element);
  }
  for (TestParsingMergeLite_RepeatedFieldsGenerator_Group1 *element in self.Group1Array) {
    size_ += computeGroupSize(10, element);
  }
  for (TestParsingMergeLite_RepeatedFieldsGenerator_Group2 *element in self.Group2Array) {
    size_ += computeGroupSize(20, element);
  }
  for (TestAllTypesLite *element in self.ext1Array) {
    size_ += computeMessageSize(1000, element);
  }
  for (TestAllTypesLite *element in self.ext2Array) {
    size_ += computeMessageSize(1001, element);
  }
  size_ += self.unknownFields.serializedSize;
  _cachedSerializedSize = size_;
  return size_;
}


+ (TestParsingMergeLite_RepeatedFieldsGenerator_Builder*)builder {
  return [[TestParsingMergeLite_RepeatedFieldsGenerator_Builder alloc] init];
}
+ (TestParsingMergeLite_RepeatedFieldsGenerator_Builder*)builderWithPrototype:(TestParsingMergeLite_RepeatedFieldsGenerator*)prototype {
  return [[TestParsingMergeLite_RepeatedFieldsGenerator builder] mergeFrom:prototype];
}
- (TestParsingMergeLite_RepeatedFieldsGenerator_Builder*)builder {
  return [TestParsingMergeLite_RepeatedFieldsGenerator builder];
}
- (TestParsingMergeLite_RepeatedFieldsGenerator_Builder*)toBuilder {
  return [TestParsingMergeLite_RepeatedFieldsGenerator builderWithPrototype:self];
}

- (void)writeDescriptionTo:(NSMutableString*)output withIndent:(NSString*)indent {
  NSUInteger listCount; listCount = 0;
  for (TestAllTypesLite* element in self.field1Array) {
    [output appendFormat:@"%@%@ {\n", indent, @"field1"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (TestAllTypesLite* element in self.field2Array) {
    [output appendFormat:@"%@%@ {\n", indent, @"field2"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (TestAllTypesLite* element in self.field3Array) {
    [output appendFormat:@"%@%@ {\n", indent, @"field3"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (TestParsingMergeLite_RepeatedFieldsGenerator_Group1* element in self.Group1Array) {
    [output appendFormat:@"%@%@ {\n", indent, @"Group1"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (TestParsingMergeLite_RepeatedFieldsGenerator_Group2* element in self.Group2Array) {
    [output appendFormat:@"%@%@ {\n", indent, @"Group2"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (TestAllTypesLite* element in self.ext1Array) {
    [output appendFormat:@"%@%@ {\n", indent, @"ext1"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (TestAllTypesLite* element in self.ext2Array) {
    [output appendFormat:@"%@%@ {\n", indent, @"ext2"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}

- (BOOL)isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TestParsingMergeLite_RepeatedFieldsGenerator class]]) {
    return NO;
  }
  TestParsingMergeLite_RepeatedFieldsGenerator *otherMessage = other;
  return
      ((self.field1Array == nil && otherMessage.field1Array == nil) ||
      [self.field1Array isEqualToArray:otherMessage.field1Array]) &&
      ((self.field2Array == nil && otherMessage.field2Array == nil) ||
      [self.field2Array isEqualToArray:otherMessage.field2Array]) &&
      ((self.field3Array == nil && otherMessage.field3Array == nil) ||
      [self.field3Array isEqualToArray:otherMessage.field3Array]) &&
      ((self.Group1Array == nil && otherMessage.Group1Array == nil) ||
      [self.Group1Array isEqualToArray:otherMessage.Group1Array]) &&
      ((self.Group2Array == nil && otherMessage.Group2Array == nil) ||
      [self.Group2Array isEqualToArray:otherMessage.Group2Array]) &&
      ((self.ext1Array == nil && otherMessage.ext1Array == nil) ||
      [self.ext1Array isEqualToArray:otherMessage.ext1Array]) &&
      ((self.ext2Array == nil && otherMessage.ext2Array == nil) ||
      [self.ext2Array isEqualToArray:otherMessage.ext2Array]) &&
      (self.unknownFields == otherMessage.unknownFields ||
       (self.unknownFields != nil &&
       [self.unknownFields isEqual:otherMessage.unknownFields]));
}

- (NSUInteger)hash {
  NSUInteger hashCode; hashCode = 7;
  NSUInteger listCount; listCount = 0;
  for (TestAllTypesLite* element in self.field1Array) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (TestAllTypesLite* element in self.field2Array) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (TestAllTypesLite* element in self.field3Array) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (TestParsingMergeLite_RepeatedFieldsGenerator_Group1* element in self.Group1Array) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (TestParsingMergeLite_RepeatedFieldsGenerator_Group2* element in self.Group2Array) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (TestAllTypesLite* element in self.ext1Array) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (TestAllTypesLite* element in self.ext2Array) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}

@end


@implementation TestParsingMergeLite_RepeatedFieldsGenerator_Builder {
  TestParsingMergeLite_RepeatedFieldsGenerator* _result;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  _result = [[TestParsingMergeLite_RepeatedFieldsGenerator alloc] init];
  return self;
}

- (PBGeneratedMessage*)internalGetResult {
  return _result;
}
- (instancetype)clear {
  _result = [[TestParsingMergeLite_RepeatedFieldsGenerator alloc] init];
  return self;
}
- (instancetype)clone {
  return [[[TestParsingMergeLite_RepeatedFieldsGenerator_Builder alloc] init] mergeFrom:_result];
}

- (TestParsingMergeLite_RepeatedFieldsGenerator*)defaultMessageInstance {
  return [TestParsingMergeLite_RepeatedFieldsGenerator defaultInstance];
}

- (TestParsingMergeLite_RepeatedFieldsGenerator*)build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TestParsingMergeLite_RepeatedFieldsGenerator*)buildPartial {
  TestParsingMergeLite_RepeatedFieldsGenerator* partial = _result;
  _result = nil;
  return partial;
}

- (instancetype)mergeFrom:(TestParsingMergeLite_RepeatedFieldsGenerator*)other {
  if (other == [TestParsingMergeLite_RepeatedFieldsGenerator defaultInstance]) {
    return self;
  }
  if (other.field1Array.count > 0) {
    if (_result.field1Array == nil) {
      _result.field1Array = [[NSMutableArray alloc] initWithArray:other.field1Array];
    } else {
      [_result.field1Array addObjectsFromArray:other.field1Array];
    }
  }
  if (other.field2Array.count > 0) {
    if (_result.field2Array == nil) {
      _result.field2Array = [[NSMutableArray alloc] initWithArray:other.field2Array];
    } else {
      [_result.field2Array addObjectsFromArray:other.field2Array];
    }
  }
  if (other.field3Array.count > 0) {
    if (_result.field3Array == nil) {
      _result.field3Array = [[NSMutableArray alloc] initWithArray:other.field3Array];
    } else {
      [_result.field3Array addObjectsFromArray:other.field3Array];
    }
  }
  if (other.Group1Array.count > 0) {
    if (_result.Group1Array == nil) {
      _result.Group1Array = [[NSMutableArray alloc] initWithArray:other.Group1Array];
    } else {
      [_result.Group1Array addObjectsFromArray:other.Group1Array];
    }
  }
  if (other.Group2Array.count > 0) {
    if (_result.Group2Array == nil) {
      _result.Group2Array = [[NSMutableArray alloc] initWithArray:other.Group2Array];
    } else {
      [_result.Group2Array addObjectsFromArray:other.Group2Array];
    }
  }
  if (other.ext1Array.count > 0) {
    if (_result.ext1Array == nil) {
      _result.ext1Array = [[NSMutableArray alloc] initWithArray:other.ext1Array];
    } else {
      [_result.ext1Array addObjectsFromArray:other.ext1Array];
    }
  }
  if (other.ext2Array.count > 0) {
    if (_result.ext2Array == nil) {
      _result.ext2Array = [[NSMutableArray alloc] initWithArray:other.ext2Array];
    } else {
      [_result.ext2Array addObjectsFromArray:other.ext2Array];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (instancetype)mergeFromCodedInputStream:(PBCodedInputStream*)input
                        extensionRegistry:(PBExtensionRegistry*)extensionRegistry
{
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input
                       unknownFields:unknownFields
                   extensionRegistry:extensionRegistry
                                 tag:tag])
        {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TestAllTypesLite_Builder* subBuilder = [TestAllTypesLite builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addField1:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        TestAllTypesLite_Builder* subBuilder = [TestAllTypesLite builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addField2:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        TestAllTypesLite_Builder* subBuilder = [TestAllTypesLite builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addField3:[subBuilder buildPartial]];
        break;
      }
      case 83: {
        TestParsingMergeLite_RepeatedFieldsGenerator_Group1_Builder* subBuilder = [TestParsingMergeLite_RepeatedFieldsGenerator_Group1 builder];
        [input readGroup:10 builder:subBuilder extensionRegistry:extensionRegistry];
        [self addGroup1:[subBuilder buildPartial]];
        break;
      }
      case 163: {
        TestParsingMergeLite_RepeatedFieldsGenerator_Group2_Builder* subBuilder = [TestParsingMergeLite_RepeatedFieldsGenerator_Group2 builder];
        [input readGroup:20 builder:subBuilder extensionRegistry:extensionRegistry];
        [self addGroup2:[subBuilder buildPartial]];
        break;
      }
      case 8002: {
        TestAllTypesLite_Builder* subBuilder = [TestAllTypesLite builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addExt1:[subBuilder buildPartial]];
        break;
      }
      case 8010: {
        TestAllTypesLite_Builder* subBuilder = [TestAllTypesLite builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addExt2:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)field1 {
  return _result.field1Array;
}
- (TestAllTypesLite*)field1AtIndex:(NSUInteger)index {
  return [_result field1AtIndex:index];
}
- (instancetype)addField1:(TestAllTypesLite*)value {
  if (_result.field1Array == nil) {
    _result.field1Array = [[NSMutableArray alloc]init];
  }
  [_result.field1Array addObject:value];
  return self;
}
- (instancetype)setField1Array:(NSArray *)array {
  _result.field1Array = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (instancetype)clearField1 {
  _result.field1Array = nil;
  return self;
}
- (NSMutableArray *)field2 {
  return _result.field2Array;
}
- (TestAllTypesLite*)field2AtIndex:(NSUInteger)index {
  return [_result field2AtIndex:index];
}
- (instancetype)addField2:(TestAllTypesLite*)value {
  if (_result.field2Array == nil) {
    _result.field2Array = [[NSMutableArray alloc]init];
  }
  [_result.field2Array addObject:value];
  return self;
}
- (instancetype)setField2Array:(NSArray *)array {
  _result.field2Array = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (instancetype)clearField2 {
  _result.field2Array = nil;
  return self;
}
- (NSMutableArray *)field3 {
  return _result.field3Array;
}
- (TestAllTypesLite*)field3AtIndex:(NSUInteger)index {
  return [_result field3AtIndex:index];
}
- (instancetype)addField3:(TestAllTypesLite*)value {
  if (_result.field3Array == nil) {
    _result.field3Array = [[NSMutableArray alloc]init];
  }
  [_result.field3Array addObject:value];
  return self;
}
- (instancetype)setField3Array:(NSArray *)array {
  _result.field3Array = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (instancetype)clearField3 {
  _result.field3Array = nil;
  return self;
}
- (NSMutableArray *)Group1 {
  return _result.Group1Array;
}
- (TestParsingMergeLite_RepeatedFieldsGenerator_Group1*)Group1AtIndex:(NSUInteger)index {
  return [_result Group1AtIndex:index];
}
- (instancetype)addGroup1:(TestParsingMergeLite_RepeatedFieldsGenerator_Group1*)value {
  if (_result.Group1Array == nil) {
    _result.Group1Array = [[NSMutableArray alloc]init];
  }
  [_result.Group1Array addObject:value];
  return self;
}
- (instancetype)setGroup1Array:(NSArray *)array {
  _result.Group1Array = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (instancetype)clearGroup1 {
  _result.Group1Array = nil;
  return self;
}
- (NSMutableArray *)Group2 {
  return _result.Group2Array;
}
- (TestParsingMergeLite_RepeatedFieldsGenerator_Group2*)Group2AtIndex:(NSUInteger)index {
  return [_result Group2AtIndex:index];
}
- (instancetype)addGroup2:(TestParsingMergeLite_RepeatedFieldsGenerator_Group2*)value {
  if (_result.Group2Array == nil) {
    _result.Group2Array = [[NSMutableArray alloc]init];
  }
  [_result.Group2Array addObject:value];
  return self;
}
- (instancetype)setGroup2Array:(NSArray *)array {
  _result.Group2Array = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (instancetype)clearGroup2 {
  _result.Group2Array = nil;
  return self;
}
- (NSMutableArray *)ext1 {
  return _result.ext1Array;
}
- (TestAllTypesLite*)ext1AtIndex:(NSUInteger)index {
  return [_result ext1AtIndex:index];
}
- (instancetype)addExt1:(TestAllTypesLite*)value {
  if (_result.ext1Array == nil) {
    _result.ext1Array = [[NSMutableArray alloc]init];
  }
  [_result.ext1Array addObject:value];
  return self;
}
- (instancetype)setExt1Array:(NSArray *)array {
  _result.ext1Array = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (instancetype)clearExt1 {
  _result.ext1Array = nil;
  return self;
}
- (NSMutableArray *)ext2 {
  return _result.ext2Array;
}
- (TestAllTypesLite*)ext2AtIndex:(NSUInteger)index {
  return [_result ext2AtIndex:index];
}
- (instancetype)addExt2:(TestAllTypesLite*)value {
  if (_result.ext2Array == nil) {
    _result.ext2Array = [[NSMutableArray alloc]init];
  }
  [_result.ext2Array addObject:value];
  return self;
}
- (instancetype)setExt2Array:(NSArray *)array {
  _result.ext2Array = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (instancetype)clearExt2 {
  _result.ext2Array = nil;
  return self;
}

@end


#pragma mark - TestParsingMergeLite_RepeatedFieldsGenerator_Group1

@interface TestParsingMergeLite_RepeatedFieldsGenerator_Group1 ()

@property (strong) TestAllTypesLite* field1;

@end

@implementation TestParsingMergeLite_RepeatedFieldsGenerator_Group1 {
  BOOL _hasField1:1;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
    _field1 = [TestAllTypesLite defaultInstance];
  return self;
}

+ (instancetype)defaultInstance {
  static id _sharedObject = nil;
  static dispatch_once_t onceToken;
  dispatch_once(&onceToken, ^{
    _sharedObject = [[self alloc] init];
  });
  return _sharedObject;
}

- (BOOL)hasField1 {
  return !!_hasField1;
}
- (void)setHasField1:(BOOL)value {
  _hasField1 = !!value;
}



- (BOOL)isInitialized {
  return YES;
}

- (void)writeToCodedOutputStream:(PBCodedOutputStream*)output {
  if (self.hasField1) {
    [output writeMessage:11 value:self.field1];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t)serializedSize {
  int32_t size_ = _cachedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasField1) {
    size_ += computeMessageSize(11, self.field1);
  }
  size_ += self.unknownFields.serializedSize;
  _cachedSerializedSize = size_;
  return size_;
}


+ (TestParsingMergeLite_RepeatedFieldsGenerator_Group1_Builder*)builder {
  return [[TestParsingMergeLite_RepeatedFieldsGenerator_Group1_Builder alloc] init];
}
+ (TestParsingMergeLite_RepeatedFieldsGenerator_Group1_Builder*)builderWithPrototype:(TestParsingMergeLite_RepeatedFieldsGenerator_Group1*)prototype {
  return [[TestParsingMergeLite_RepeatedFieldsGenerator_Group1 builder] mergeFrom:prototype];
}
- (TestParsingMergeLite_RepeatedFieldsGenerator_Group1_Builder*)builder {
  return [TestParsingMergeLite_RepeatedFieldsGenerator_Group1 builder];
}
- (TestParsingMergeLite_RepeatedFieldsGenerator_Group1_Builder*)toBuilder {
  return [TestParsingMergeLite_RepeatedFieldsGenerator_Group1 builderWithPrototype:self];
}

- (void)writeDescriptionTo:(NSMutableString*)output withIndent:(NSString*)indent {
  NSUInteger listCount; listCount = 0;
  if (self.hasField1) {
    [output appendFormat:@"%@%@ {\n", indent, @"field1"];
    [self.field1 writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}

- (BOOL)isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TestParsingMergeLite_RepeatedFieldsGenerator_Group1 class]]) {
    return NO;
  }
  TestParsingMergeLite_RepeatedFieldsGenerator_Group1 *otherMessage = other;
  return
      self.hasField1 == otherMessage.hasField1 &&
      (!self.hasField1 || [self.field1 isEqual:otherMessage.field1]) &&
      (self.unknownFields == otherMessage.unknownFields ||
       (self.unknownFields != nil &&
       [self.unknownFields isEqual:otherMessage.unknownFields]));
}

- (NSUInteger)hash {
  NSUInteger hashCode; hashCode = 7;
  NSUInteger listCount; listCount = 0;
  if (self.hasField1) {
    hashCode = hashCode * 31 + [self.field1 hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}

@end


@implementation TestParsingMergeLite_RepeatedFieldsGenerator_Group1_Builder {
  TestParsingMergeLite_RepeatedFieldsGenerator_Group1* _result;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  _result = [[TestParsingMergeLite_RepeatedFieldsGenerator_Group1 alloc] init];
  return self;
}

- (PBGeneratedMessage*)internalGetResult {
  return _result;
}
- (instancetype)clear {
  _result = [[TestParsingMergeLite_RepeatedFieldsGenerator_Group1 alloc] init];
  return self;
}
- (instancetype)clone {
  return [[[TestParsingMergeLite_RepeatedFieldsGenerator_Group1_Builder alloc] init] mergeFrom:_result];
}

- (TestParsingMergeLite_RepeatedFieldsGenerator_Group1*)defaultMessageInstance {
  return [TestParsingMergeLite_RepeatedFieldsGenerator_Group1 defaultInstance];
}

- (TestParsingMergeLite_RepeatedFieldsGenerator_Group1*)build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TestParsingMergeLite_RepeatedFieldsGenerator_Group1*)buildPartial {
  TestParsingMergeLite_RepeatedFieldsGenerator_Group1* partial = _result;
  _result = nil;
  return partial;
}

- (instancetype)mergeFrom:(TestParsingMergeLite_RepeatedFieldsGenerator_Group1*)other {
  if (other == [TestParsingMergeLite_RepeatedFieldsGenerator_Group1 defaultInstance]) {
    return self;
  }
  if (other.hasField1) {
    [self mergeField1:other.field1];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (instancetype)mergeFromCodedInputStream:(PBCodedInputStream*)input
                        extensionRegistry:(PBExtensionRegistry*)extensionRegistry
{
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input
                       unknownFields:unknownFields
                   extensionRegistry:extensionRegistry
                                 tag:tag])
        {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 90: {
        TestAllTypesLite_Builder* subBuilder = [TestAllTypesLite builder];
        if (self.hasField1) {
          [subBuilder mergeFrom:self.field1];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setField1:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL)hasField1 {
  return _result.hasField1;
}
- (TestAllTypesLite*)field1 {
  return _result.field1;
}
- (instancetype)setField1:(TestAllTypesLite*)value {
  _result.hasField1 = YES;
  _result.field1 = value;
  return self;
}
- (instancetype)setField1Builder:(TestAllTypesLite_Builder*)builderForValue {
  return [self setField1:[builderForValue build]];
}
- (instancetype)mergeField1:(TestAllTypesLite*)value {
  if (_result.hasField1 &&
      _result.field1 != [TestAllTypesLite defaultInstance]) {
    _result.field1 =
      [[[TestAllTypesLite builderWithPrototype:_result.field1] mergeFrom:value] buildPartial];
  } else {
    _result.field1 = value;
  }
  _result.hasField1 = YES;
  return self;
}
- (instancetype)clearField1 {
  _result.hasField1 = NO;
  _result.field1 = [TestAllTypesLite defaultInstance];
  return self;
}

@end


#pragma mark - TestParsingMergeLite_RepeatedFieldsGenerator_Group2

@interface TestParsingMergeLite_RepeatedFieldsGenerator_Group2 ()

@property (strong) TestAllTypesLite* field1;

@end

@implementation TestParsingMergeLite_RepeatedFieldsGenerator_Group2 {
  BOOL _hasField1:1;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
    _field1 = [TestAllTypesLite defaultInstance];
  return self;
}

+ (instancetype)defaultInstance {
  static id _sharedObject = nil;
  static dispatch_once_t onceToken;
  dispatch_once(&onceToken, ^{
    _sharedObject = [[self alloc] init];
  });
  return _sharedObject;
}

- (BOOL)hasField1 {
  return !!_hasField1;
}
- (void)setHasField1:(BOOL)value {
  _hasField1 = !!value;
}



- (BOOL)isInitialized {
  return YES;
}

- (void)writeToCodedOutputStream:(PBCodedOutputStream*)output {
  if (self.hasField1) {
    [output writeMessage:21 value:self.field1];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t)serializedSize {
  int32_t size_ = _cachedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasField1) {
    size_ += computeMessageSize(21, self.field1);
  }
  size_ += self.unknownFields.serializedSize;
  _cachedSerializedSize = size_;
  return size_;
}


+ (TestParsingMergeLite_RepeatedFieldsGenerator_Group2_Builder*)builder {
  return [[TestParsingMergeLite_RepeatedFieldsGenerator_Group2_Builder alloc] init];
}
+ (TestParsingMergeLite_RepeatedFieldsGenerator_Group2_Builder*)builderWithPrototype:(TestParsingMergeLite_RepeatedFieldsGenerator_Group2*)prototype {
  return [[TestParsingMergeLite_RepeatedFieldsGenerator_Group2 builder] mergeFrom:prototype];
}
- (TestParsingMergeLite_RepeatedFieldsGenerator_Group2_Builder*)builder {
  return [TestParsingMergeLite_RepeatedFieldsGenerator_Group2 builder];
}
- (TestParsingMergeLite_RepeatedFieldsGenerator_Group2_Builder*)toBuilder {
  return [TestParsingMergeLite_RepeatedFieldsGenerator_Group2 builderWithPrototype:self];
}

- (void)writeDescriptionTo:(NSMutableString*)output withIndent:(NSString*)indent {
  NSUInteger listCount; listCount = 0;
  if (self.hasField1) {
    [output appendFormat:@"%@%@ {\n", indent, @"field1"];
    [self.field1 writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}

- (BOOL)isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TestParsingMergeLite_RepeatedFieldsGenerator_Group2 class]]) {
    return NO;
  }
  TestParsingMergeLite_RepeatedFieldsGenerator_Group2 *otherMessage = other;
  return
      self.hasField1 == otherMessage.hasField1 &&
      (!self.hasField1 || [self.field1 isEqual:otherMessage.field1]) &&
      (self.unknownFields == otherMessage.unknownFields ||
       (self.unknownFields != nil &&
       [self.unknownFields isEqual:otherMessage.unknownFields]));
}

- (NSUInteger)hash {
  NSUInteger hashCode; hashCode = 7;
  NSUInteger listCount; listCount = 0;
  if (self.hasField1) {
    hashCode = hashCode * 31 + [self.field1 hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}

@end


@implementation TestParsingMergeLite_RepeatedFieldsGenerator_Group2_Builder {
  TestParsingMergeLite_RepeatedFieldsGenerator_Group2* _result;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  _result = [[TestParsingMergeLite_RepeatedFieldsGenerator_Group2 alloc] init];
  return self;
}

- (PBGeneratedMessage*)internalGetResult {
  return _result;
}
- (instancetype)clear {
  _result = [[TestParsingMergeLite_RepeatedFieldsGenerator_Group2 alloc] init];
  return self;
}
- (instancetype)clone {
  return [[[TestParsingMergeLite_RepeatedFieldsGenerator_Group2_Builder alloc] init] mergeFrom:_result];
}

- (TestParsingMergeLite_RepeatedFieldsGenerator_Group2*)defaultMessageInstance {
  return [TestParsingMergeLite_RepeatedFieldsGenerator_Group2 defaultInstance];
}

- (TestParsingMergeLite_RepeatedFieldsGenerator_Group2*)build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TestParsingMergeLite_RepeatedFieldsGenerator_Group2*)buildPartial {
  TestParsingMergeLite_RepeatedFieldsGenerator_Group2* partial = _result;
  _result = nil;
  return partial;
}

- (instancetype)mergeFrom:(TestParsingMergeLite_RepeatedFieldsGenerator_Group2*)other {
  if (other == [TestParsingMergeLite_RepeatedFieldsGenerator_Group2 defaultInstance]) {
    return self;
  }
  if (other.hasField1) {
    [self mergeField1:other.field1];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (instancetype)mergeFromCodedInputStream:(PBCodedInputStream*)input
                        extensionRegistry:(PBExtensionRegistry*)extensionRegistry
{
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input
                       unknownFields:unknownFields
                   extensionRegistry:extensionRegistry
                                 tag:tag])
        {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 170: {
        TestAllTypesLite_Builder* subBuilder = [TestAllTypesLite builder];
        if (self.hasField1) {
          [subBuilder mergeFrom:self.field1];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setField1:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL)hasField1 {
  return _result.hasField1;
}
- (TestAllTypesLite*)field1 {
  return _result.field1;
}
- (instancetype)setField1:(TestAllTypesLite*)value {
  _result.hasField1 = YES;
  _result.field1 = value;
  return self;
}
- (instancetype)setField1Builder:(TestAllTypesLite_Builder*)builderForValue {
  return [self setField1:[builderForValue build]];
}
- (instancetype)mergeField1:(TestAllTypesLite*)value {
  if (_result.hasField1 &&
      _result.field1 != [TestAllTypesLite defaultInstance]) {
    _result.field1 =
      [[[TestAllTypesLite builderWithPrototype:_result.field1] mergeFrom:value] buildPartial];
  } else {
    _result.field1 = value;
  }
  _result.hasField1 = YES;
  return self;
}
- (instancetype)clearField1 {
  _result.hasField1 = NO;
  _result.field1 = [TestAllTypesLite defaultInstance];
  return self;
}

@end


#pragma mark - TestParsingMergeLite_OptionalGroup

@interface TestParsingMergeLite_OptionalGroup ()

@property (strong) TestAllTypesLite* optionalGroupAllTypes;

@end

@implementation TestParsingMergeLite_OptionalGroup {
  BOOL _hasOptionalGroupAllTypes:1;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
    _optionalGroupAllTypes = [TestAllTypesLite defaultInstance];
  return self;
}

+ (instancetype)defaultInstance {
  static id _sharedObject = nil;
  static dispatch_once_t onceToken;
  dispatch_once(&onceToken, ^{
    _sharedObject = [[self alloc] init];
  });
  return _sharedObject;
}

- (BOOL)hasOptionalGroupAllTypes {
  return !!_hasOptionalGroupAllTypes;
}
- (void)setHasOptionalGroupAllTypes:(BOOL)value {
  _hasOptionalGroupAllTypes = !!value;
}



- (BOOL)isInitialized {
  return YES;
}

- (void)writeToCodedOutputStream:(PBCodedOutputStream*)output {
  if (self.hasOptionalGroupAllTypes) {
    [output writeMessage:11 value:self.optionalGroupAllTypes];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t)serializedSize {
  int32_t size_ = _cachedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasOptionalGroupAllTypes) {
    size_ += computeMessageSize(11, self.optionalGroupAllTypes);
  }
  size_ += self.unknownFields.serializedSize;
  _cachedSerializedSize = size_;
  return size_;
}


+ (TestParsingMergeLite_OptionalGroup_Builder*)builder {
  return [[TestParsingMergeLite_OptionalGroup_Builder alloc] init];
}
+ (TestParsingMergeLite_OptionalGroup_Builder*)builderWithPrototype:(TestParsingMergeLite_OptionalGroup*)prototype {
  return [[TestParsingMergeLite_OptionalGroup builder] mergeFrom:prototype];
}
- (TestParsingMergeLite_OptionalGroup_Builder*)builder {
  return [TestParsingMergeLite_OptionalGroup builder];
}
- (TestParsingMergeLite_OptionalGroup_Builder*)toBuilder {
  return [TestParsingMergeLite_OptionalGroup builderWithPrototype:self];
}

- (void)writeDescriptionTo:(NSMutableString*)output withIndent:(NSString*)indent {
  NSUInteger listCount; listCount = 0;
  if (self.hasOptionalGroupAllTypes) {
    [output appendFormat:@"%@%@ {\n", indent, @"optionalGroupAllTypes"];
    [self.optionalGroupAllTypes writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}

- (BOOL)isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TestParsingMergeLite_OptionalGroup class]]) {
    return NO;
  }
  TestParsingMergeLite_OptionalGroup *otherMessage = other;
  return
      self.hasOptionalGroupAllTypes == otherMessage.hasOptionalGroupAllTypes &&
      (!self.hasOptionalGroupAllTypes || [self.optionalGroupAllTypes isEqual:otherMessage.optionalGroupAllTypes]) &&
      (self.unknownFields == otherMessage.unknownFields ||
       (self.unknownFields != nil &&
       [self.unknownFields isEqual:otherMessage.unknownFields]));
}

- (NSUInteger)hash {
  NSUInteger hashCode; hashCode = 7;
  NSUInteger listCount; listCount = 0;
  if (self.hasOptionalGroupAllTypes) {
    hashCode = hashCode * 31 + [self.optionalGroupAllTypes hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}

@end


@implementation TestParsingMergeLite_OptionalGroup_Builder {
  TestParsingMergeLite_OptionalGroup* _result;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  _result = [[TestParsingMergeLite_OptionalGroup alloc] init];
  return self;
}

- (PBGeneratedMessage*)internalGetResult {
  return _result;
}
- (instancetype)clear {
  _result = [[TestParsingMergeLite_OptionalGroup alloc] init];
  return self;
}
- (instancetype)clone {
  return [[[TestParsingMergeLite_OptionalGroup_Builder alloc] init] mergeFrom:_result];
}

- (TestParsingMergeLite_OptionalGroup*)defaultMessageInstance {
  return [TestParsingMergeLite_OptionalGroup defaultInstance];
}

- (TestParsingMergeLite_OptionalGroup*)build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TestParsingMergeLite_OptionalGroup*)buildPartial {
  TestParsingMergeLite_OptionalGroup* partial = _result;
  _result = nil;
  return partial;
}

- (instancetype)mergeFrom:(TestParsingMergeLite_OptionalGroup*)other {
  if (other == [TestParsingMergeLite_OptionalGroup defaultInstance]) {
    return self;
  }
  if (other.hasOptionalGroupAllTypes) {
    [self mergeOptionalGroupAllTypes:other.optionalGroupAllTypes];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (instancetype)mergeFromCodedInputStream:(PBCodedInputStream*)input
                        extensionRegistry:(PBExtensionRegistry*)extensionRegistry
{
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input
                       unknownFields:unknownFields
                   extensionRegistry:extensionRegistry
                                 tag:tag])
        {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 90: {
        TestAllTypesLite_Builder* subBuilder = [TestAllTypesLite builder];
        if (self.hasOptionalGroupAllTypes) {
          [subBuilder mergeFrom:self.optionalGroupAllTypes];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOptionalGroupAllTypes:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL)hasOptionalGroupAllTypes {
  return _result.hasOptionalGroupAllTypes;
}
- (TestAllTypesLite*)optionalGroupAllTypes {
  return _result.optionalGroupAllTypes;
}
- (instancetype)setOptionalGroupAllTypes:(TestAllTypesLite*)value {
  _result.hasOptionalGroupAllTypes = YES;
  _result.optionalGroupAllTypes = value;
  return self;
}
- (instancetype)setOptionalGroupAllTypesBuilder:(TestAllTypesLite_Builder*)builderForValue {
  return [self setOptionalGroupAllTypes:[builderForValue build]];
}
- (instancetype)mergeOptionalGroupAllTypes:(TestAllTypesLite*)value {
  if (_result.hasOptionalGroupAllTypes &&
      _result.optionalGroupAllTypes != [TestAllTypesLite defaultInstance]) {
    _result.optionalGroupAllTypes =
      [[[TestAllTypesLite builderWithPrototype:_result.optionalGroupAllTypes] mergeFrom:value] buildPartial];
  } else {
    _result.optionalGroupAllTypes = value;
  }
  _result.hasOptionalGroupAllTypes = YES;
  return self;
}
- (instancetype)clearOptionalGroupAllTypes {
  _result.hasOptionalGroupAllTypes = NO;
  _result.optionalGroupAllTypes = [TestAllTypesLite defaultInstance];
  return self;
}

@end


#pragma mark - TestParsingMergeLite_RepeatedGroup

@interface TestParsingMergeLite_RepeatedGroup ()

@property (strong) TestAllTypesLite* repeatedGroupAllTypes;

@end

@implementation TestParsingMergeLite_RepeatedGroup {
  BOOL _hasRepeatedGroupAllTypes:1;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
    _repeatedGroupAllTypes = [TestAllTypesLite defaultInstance];
  return self;
}

+ (instancetype)defaultInstance {
  static id _sharedObject = nil;
  static dispatch_once_t onceToken;
  dispatch_once(&onceToken, ^{
    _sharedObject = [[self alloc] init];
  });
  return _sharedObject;
}

- (BOOL)hasRepeatedGroupAllTypes {
  return !!_hasRepeatedGroupAllTypes;
}
- (void)setHasRepeatedGroupAllTypes:(BOOL)value {
  _hasRepeatedGroupAllTypes = !!value;
}



- (BOOL)isInitialized {
  return YES;
}

- (void)writeToCodedOutputStream:(PBCodedOutputStream*)output {
  if (self.hasRepeatedGroupAllTypes) {
    [output writeMessage:21 value:self.repeatedGroupAllTypes];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t)serializedSize {
  int32_t size_ = _cachedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasRepeatedGroupAllTypes) {
    size_ += computeMessageSize(21, self.repeatedGroupAllTypes);
  }
  size_ += self.unknownFields.serializedSize;
  _cachedSerializedSize = size_;
  return size_;
}


+ (TestParsingMergeLite_RepeatedGroup_Builder*)builder {
  return [[TestParsingMergeLite_RepeatedGroup_Builder alloc] init];
}
+ (TestParsingMergeLite_RepeatedGroup_Builder*)builderWithPrototype:(TestParsingMergeLite_RepeatedGroup*)prototype {
  return [[TestParsingMergeLite_RepeatedGroup builder] mergeFrom:prototype];
}
- (TestParsingMergeLite_RepeatedGroup_Builder*)builder {
  return [TestParsingMergeLite_RepeatedGroup builder];
}
- (TestParsingMergeLite_RepeatedGroup_Builder*)toBuilder {
  return [TestParsingMergeLite_RepeatedGroup builderWithPrototype:self];
}

- (void)writeDescriptionTo:(NSMutableString*)output withIndent:(NSString*)indent {
  NSUInteger listCount; listCount = 0;
  if (self.hasRepeatedGroupAllTypes) {
    [output appendFormat:@"%@%@ {\n", indent, @"repeatedGroupAllTypes"];
    [self.repeatedGroupAllTypes writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}

- (BOOL)isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TestParsingMergeLite_RepeatedGroup class]]) {
    return NO;
  }
  TestParsingMergeLite_RepeatedGroup *otherMessage = other;
  return
      self.hasRepeatedGroupAllTypes == otherMessage.hasRepeatedGroupAllTypes &&
      (!self.hasRepeatedGroupAllTypes || [self.repeatedGroupAllTypes isEqual:otherMessage.repeatedGroupAllTypes]) &&
      (self.unknownFields == otherMessage.unknownFields ||
       (self.unknownFields != nil &&
       [self.unknownFields isEqual:otherMessage.unknownFields]));
}

- (NSUInteger)hash {
  NSUInteger hashCode; hashCode = 7;
  NSUInteger listCount; listCount = 0;
  if (self.hasRepeatedGroupAllTypes) {
    hashCode = hashCode * 31 + [self.repeatedGroupAllTypes hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}

@end


@implementation TestParsingMergeLite_RepeatedGroup_Builder {
  TestParsingMergeLite_RepeatedGroup* _result;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  _result = [[TestParsingMergeLite_RepeatedGroup alloc] init];
  return self;
}

- (PBGeneratedMessage*)internalGetResult {
  return _result;
}
- (instancetype)clear {
  _result = [[TestParsingMergeLite_RepeatedGroup alloc] init];
  return self;
}
- (instancetype)clone {
  return [[[TestParsingMergeLite_RepeatedGroup_Builder alloc] init] mergeFrom:_result];
}

- (TestParsingMergeLite_RepeatedGroup*)defaultMessageInstance {
  return [TestParsingMergeLite_RepeatedGroup defaultInstance];
}

- (TestParsingMergeLite_RepeatedGroup*)build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TestParsingMergeLite_RepeatedGroup*)buildPartial {
  TestParsingMergeLite_RepeatedGroup* partial = _result;
  _result = nil;
  return partial;
}

- (instancetype)mergeFrom:(TestParsingMergeLite_RepeatedGroup*)other {
  if (other == [TestParsingMergeLite_RepeatedGroup defaultInstance]) {
    return self;
  }
  if (other.hasRepeatedGroupAllTypes) {
    [self mergeRepeatedGroupAllTypes:other.repeatedGroupAllTypes];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (instancetype)mergeFromCodedInputStream:(PBCodedInputStream*)input
                        extensionRegistry:(PBExtensionRegistry*)extensionRegistry
{
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input
                       unknownFields:unknownFields
                   extensionRegistry:extensionRegistry
                                 tag:tag])
        {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 170: {
        TestAllTypesLite_Builder* subBuilder = [TestAllTypesLite builder];
        if (self.hasRepeatedGroupAllTypes) {
          [subBuilder mergeFrom:self.repeatedGroupAllTypes];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRepeatedGroupAllTypes:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL)hasRepeatedGroupAllTypes {
  return _result.hasRepeatedGroupAllTypes;
}
- (TestAllTypesLite*)repeatedGroupAllTypes {
  return _result.repeatedGroupAllTypes;
}
- (instancetype)setRepeatedGroupAllTypes:(TestAllTypesLite*)value {
  _result.hasRepeatedGroupAllTypes = YES;
  _result.repeatedGroupAllTypes = value;
  return self;
}
- (instancetype)setRepeatedGroupAllTypesBuilder:(TestAllTypesLite_Builder*)builderForValue {
  return [self setRepeatedGroupAllTypes:[builderForValue build]];
}
- (instancetype)mergeRepeatedGroupAllTypes:(TestAllTypesLite*)value {
  if (_result.hasRepeatedGroupAllTypes &&
      _result.repeatedGroupAllTypes != [TestAllTypesLite defaultInstance]) {
    _result.repeatedGroupAllTypes =
      [[[TestAllTypesLite builderWithPrototype:_result.repeatedGroupAllTypes] mergeFrom:value] buildPartial];
  } else {
    _result.repeatedGroupAllTypes = value;
  }
  _result.hasRepeatedGroupAllTypes = YES;
  return self;
}
- (instancetype)clearRepeatedGroupAllTypes {
  _result.hasRepeatedGroupAllTypes = NO;
  _result.repeatedGroupAllTypes = [TestAllTypesLite defaultInstance];
  return self;
}

@end


// @@protoc_insertion_point(global_scope)
