//
// unittest_lite_imports_nonlite.pb.m
// 
// Generated by the objc protocol buffer compiler plugin.  DO NOT EDIT!
// source: google/protobuf/unittest_lite_imports_nonlite.proto
//

#import "unittest_lite_imports_nonlite.pb.h"

// @@protoc_insertion_point(imports)

@implementation UnittestLiteImportsNonliteRoot

static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [UnittestLiteImportsNonliteRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [UnittestRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}

+ (void)registerAllExtensions:(PBMutableExtensionRegistry*)registry {
}


@end


#pragma mark - TestLiteImportsNonlite

@interface TestLiteImportsNonlite ()

@property (strong) TestAllTypes* message;

@end

@implementation TestLiteImportsNonlite {
  BOOL _hasMessage:1;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
    _message = [TestAllTypes defaultInstance];
  return self;
}

+ (instancetype)defaultInstance {
  static id _sharedObject = nil;
  static dispatch_once_t onceToken;
  dispatch_once(&onceToken, ^{
    _sharedObject = [[self alloc] init];
  });
  return _sharedObject;
}

- (BOOL)hasMessage {
  return !!_hasMessage;
}
- (void)setHasMessage:(BOOL)value {
  _hasMessage = !!value;
}



- (BOOL)isInitialized {
  return YES;
}

- (void)writeToCodedOutputStream:(PBCodedOutputStream*)output {
  if (self.hasMessage) {
    [output writeMessage:1 value:self.message];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t)serializedSize {
  int32_t size_ = _cachedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMessage) {
    size_ += computeMessageSize(1, self.message);
  }
  size_ += self.unknownFields.serializedSize;
  _cachedSerializedSize = size_;
  return size_;
}


+ (TestLiteImportsNonlite_Builder*)builder {
  return [[TestLiteImportsNonlite_Builder alloc] init];
}
+ (TestLiteImportsNonlite_Builder*)builderWithPrototype:(TestLiteImportsNonlite*)prototype {
  return [[TestLiteImportsNonlite builder] mergeFrom:prototype];
}
- (TestLiteImportsNonlite_Builder*)builder {
  return [TestLiteImportsNonlite builder];
}
- (TestLiteImportsNonlite_Builder*)toBuilder {
  return [TestLiteImportsNonlite builderWithPrototype:self];
}

- (void)writeDescriptionTo:(NSMutableString*)output withIndent:(NSString*)indent {
  NSUInteger listCount; listCount = 0;
  if (self.hasMessage) {
    [output appendFormat:@"%@%@ {\n", indent, @"message"];
    [self.message writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}

- (BOOL)isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TestLiteImportsNonlite class]]) {
    return NO;
  }
  TestLiteImportsNonlite *otherMessage = other;
  return
      self.hasMessage == otherMessage.hasMessage &&
      (!self.hasMessage || [self.message isEqual:otherMessage.message]) &&
      (self.unknownFields == otherMessage.unknownFields ||
       (self.unknownFields != nil &&
       [self.unknownFields isEqual:otherMessage.unknownFields]));
}

- (NSUInteger)hash {
  NSUInteger hashCode; hashCode = 7;
  NSUInteger listCount; listCount = 0;
  if (self.hasMessage) {
    hashCode = hashCode * 31 + [self.message hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}

@end


@implementation TestLiteImportsNonlite_Builder {
  TestLiteImportsNonlite* _result;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  _result = [[TestLiteImportsNonlite alloc] init];
  return self;
}

- (PBGeneratedMessage*)internalGetResult {
  return _result;
}
- (instancetype)clear {
  _result = [[TestLiteImportsNonlite alloc] init];
  return self;
}
- (instancetype)clone {
  return [[[TestLiteImportsNonlite_Builder alloc] init] mergeFrom:_result];
}

- (TestLiteImportsNonlite*)defaultMessageInstance {
  return [TestLiteImportsNonlite defaultInstance];
}

- (TestLiteImportsNonlite*)build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TestLiteImportsNonlite*)buildPartial {
  TestLiteImportsNonlite* partial = _result;
  _result = nil;
  return partial;
}

- (instancetype)mergeFrom:(TestLiteImportsNonlite*)other {
  if (other == [TestLiteImportsNonlite defaultInstance]) {
    return self;
  }
  if (other.hasMessage) {
    [self mergeMessage:other.message];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (instancetype)mergeFromCodedInputStream:(PBCodedInputStream*)input
                        extensionRegistry:(PBExtensionRegistry*)extensionRegistry
{
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input
                       unknownFields:unknownFields
                   extensionRegistry:extensionRegistry
                                 tag:tag])
        {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TestAllTypes_Builder* subBuilder = [TestAllTypes builder];
        if (self.hasMessage) {
          [subBuilder mergeFrom:self.message];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMessage:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL)hasMessage {
  return _result.hasMessage;
}
- (TestAllTypes*)message {
  return _result.message;
}
- (instancetype)setMessage:(TestAllTypes*)value {
  _result.hasMessage = YES;
  _result.message = value;
  return self;
}
- (instancetype)setMessageBuilder:(TestAllTypes_Builder*)builderForValue {
  return [self setMessage:[builderForValue build]];
}
- (instancetype)mergeMessage:(TestAllTypes*)value {
  if (_result.hasMessage &&
      _result.message != [TestAllTypes defaultInstance]) {
    _result.message =
      [[[TestAllTypes builderWithPrototype:_result.message] mergeFrom:value] buildPartial];
  } else {
    _result.message = value;
  }
  _result.hasMessage = YES;
  return self;
}
- (instancetype)clearMessage {
  _result.hasMessage = NO;
  _result.message = [TestAllTypes defaultInstance];
  return self;
}

@end


// @@protoc_insertion_point(global_scope)
