//
// cast_channel.pb.m
// 
// Generated by the objc protocol buffer compiler plugin.  DO NOT EDIT!
// source: cast_channel.proto
//

#import "cast_channel.pb.h"

// @@protoc_insertion_point(imports)

@implementation CastChannelRoot

static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [CastChannelRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}

+ (void)registerAllExtensions:(PBMutableExtensionRegistry*)registry {
}


@end


#pragma mark - CastMessage

BOOL CastMessage_ProtocolVersionIsValidValue(CastMessage_ProtocolVersion value) {
  switch (value) {
    case CastMessage_ProtocolVersionCASTV210:
      return YES;
    default:
      return NO;
  }
}

BOOL CastMessage_PayloadTypeIsValidValue(CastMessage_PayloadType value) {
  switch (value) {
    case CastMessage_PayloadTypeSTRING:
    case CastMessage_PayloadTypeBINARY:
      return YES;
    default:
      return NO;
  }
}

@interface CastMessage ()

@property CastMessage_ProtocolVersion protocolVersion;
@property (strong) NSString * sourceId;
@property (strong) NSString * destinationId;
@property (strong) NSString * namespace;
@property CastMessage_PayloadType payloadType;
@property (strong) NSString * payloadUtf8;
@property (strong) NSData * payloadBinary;

@end

@implementation CastMessage {
  BOOL _hasSourceId:1;
  BOOL _hasDestinationId:1;
  BOOL _hasNamespace:1;
  BOOL _hasPayloadUtf8:1;
  BOOL _hasPayloadBinary:1;
  BOOL _hasProtocolVersion:1;
  BOOL _hasPayloadType:1;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
    _protocolVersion = CastMessage_ProtocolVersionCASTV210;
    _sourceId = @"";
    _destinationId = @"";
    _namespace = @"";
    _payloadType = CastMessage_PayloadTypeSTRING;
    _payloadUtf8 = @"";
    _payloadBinary = [NSData data];
  return self;
}

+ (instancetype)defaultInstance {
  static id _sharedObject = nil;
  static dispatch_once_t onceToken;
  dispatch_once(&onceToken, ^{
    _sharedObject = [[self alloc] init];
  });
  return _sharedObject;
}

- (BOOL)hasProtocolVersion {
  return !!_hasProtocolVersion;
}
- (void)setHasProtocolVersion:(BOOL)value {
  _hasProtocolVersion = !!value;
}
- (BOOL)hasSourceId {
  return !!_hasSourceId;
}
- (void)setHasSourceId:(BOOL)value {
  _hasSourceId = !!value;
}
- (BOOL)hasDestinationId {
  return !!_hasDestinationId;
}
- (void)setHasDestinationId:(BOOL)value {
  _hasDestinationId = !!value;
}
- (BOOL)hasNamespace {
  return !!_hasNamespace;
}
- (void)setHasNamespace:(BOOL)value {
  _hasNamespace = !!value;
}
- (BOOL)hasPayloadType {
  return !!_hasPayloadType;
}
- (void)setHasPayloadType:(BOOL)value {
  _hasPayloadType = !!value;
}
- (BOOL)hasPayloadUtf8 {
  return !!_hasPayloadUtf8;
}
- (void)setHasPayloadUtf8:(BOOL)value {
  _hasPayloadUtf8 = !!value;
}
- (BOOL)hasPayloadBinary {
  return !!_hasPayloadBinary;
}
- (void)setHasPayloadBinary:(BOOL)value {
  _hasPayloadBinary = !!value;
}


- (BOOL)isInitialized {
  if (!self.hasProtocolVersion) {
    return NO;
  }
  if (!self.hasSourceId) {
    return NO;
  }
  if (!self.hasDestinationId) {
    return NO;
  }
  if (!self.hasNamespace) {
    return NO;
  }
  if (!self.hasPayloadType) {
    return NO;
  }
  return YES;
}

- (void)writeToCodedOutputStream:(PBCodedOutputStream*)output {
  if (self.hasProtocolVersion) {
    [output writeEnum:1 value:self.protocolVersion];
  }
  if (self.hasSourceId) {
    [output writeString:2 value:self.sourceId];
  }
  if (self.hasDestinationId) {
    [output writeString:3 value:self.destinationId];
  }
  if (self.hasNamespace) {
    [output writeString:4 value:self.namespace];
  }
  if (self.hasPayloadType) {
    [output writeEnum:5 value:self.payloadType];
  }
  if (self.hasPayloadUtf8) {
    [output writeString:6 value:self.payloadUtf8];
  }
  if (self.hasPayloadBinary) {
    [output writeData:7 value:self.payloadBinary];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t)serializedSize {
  int32_t size_ = _cachedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasProtocolVersion) {
    size_ += computeEnumSize(1, self.protocolVersion);
  }
  if (self.hasSourceId) {
    size_ += computeStringSize(2, self.sourceId);
  }
  if (self.hasDestinationId) {
    size_ += computeStringSize(3, self.destinationId);
  }
  if (self.hasNamespace) {
    size_ += computeStringSize(4, self.namespace);
  }
  if (self.hasPayloadType) {
    size_ += computeEnumSize(5, self.payloadType);
  }
  if (self.hasPayloadUtf8) {
    size_ += computeStringSize(6, self.payloadUtf8);
  }
  if (self.hasPayloadBinary) {
    size_ += computeDataSize(7, self.payloadBinary);
  }
  size_ += self.unknownFields.serializedSize;
  _cachedSerializedSize = size_;
  return size_;
}


+ (CastMessage_Builder*)builder {
  return [[CastMessage_Builder alloc] init];
}
+ (CastMessage_Builder*)builderWithPrototype:(CastMessage*)prototype {
  return [[CastMessage builder] mergeFrom:prototype];
}
- (CastMessage_Builder*)builder {
  return [CastMessage builder];
}
- (CastMessage_Builder*)toBuilder {
  return [CastMessage builderWithPrototype:self];
}

- (void)writeDescriptionTo:(NSMutableString*)output withIndent:(NSString*)indent {
  NSUInteger listCount; listCount = 0;
  if (self.hasProtocolVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"protocolVersion", @(self.protocolVersion)];
  }
  if (self.hasSourceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sourceId", self.sourceId];
  }
  if (self.hasDestinationId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"destinationId", self.destinationId];
  }
  if (self.hasNamespace) {
    [output appendFormat:@"%@%@: %@\n", indent, @"namespace", self.namespace];
  }
  if (self.hasPayloadType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"payloadType", @(self.payloadType)];
  }
  if (self.hasPayloadUtf8) {
    [output appendFormat:@"%@%@: %@\n", indent, @"payloadUtf8", self.payloadUtf8];
  }
  if (self.hasPayloadBinary) {
    [output appendFormat:@"%@%@: %@\n", indent, @"payloadBinary", self.payloadBinary];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}

- (BOOL)isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CastMessage class]]) {
    return NO;
  }
  CastMessage *otherMessage = other;
  return
      self.hasProtocolVersion == otherMessage.hasProtocolVersion &&
      (!self.hasProtocolVersion || self.protocolVersion == otherMessage.protocolVersion) &&
      self.hasSourceId == otherMessage.hasSourceId &&
      (!self.hasSourceId || [self.sourceId isEqual:otherMessage.sourceId]) &&
      self.hasDestinationId == otherMessage.hasDestinationId &&
      (!self.hasDestinationId || [self.destinationId isEqual:otherMessage.destinationId]) &&
      self.hasNamespace == otherMessage.hasNamespace &&
      (!self.hasNamespace || [self.namespace isEqual:otherMessage.namespace]) &&
      self.hasPayloadType == otherMessage.hasPayloadType &&
      (!self.hasPayloadType || self.payloadType == otherMessage.payloadType) &&
      self.hasPayloadUtf8 == otherMessage.hasPayloadUtf8 &&
      (!self.hasPayloadUtf8 || [self.payloadUtf8 isEqual:otherMessage.payloadUtf8]) &&
      self.hasPayloadBinary == otherMessage.hasPayloadBinary &&
      (!self.hasPayloadBinary || [self.payloadBinary isEqual:otherMessage.payloadBinary]) &&
      (self.unknownFields == otherMessage.unknownFields ||
       (self.unknownFields != nil &&
       [self.unknownFields isEqual:otherMessage.unknownFields]));
}

- (NSUInteger)hash {
  NSUInteger hashCode; hashCode = 7;
  NSUInteger listCount; listCount = 0;
  if (self.hasProtocolVersion) {
    hashCode = hashCode * 31 + self.protocolVersion;
  }
  if (self.hasSourceId) {
    hashCode = hashCode * 31 + [self.sourceId hash];
  }
  if (self.hasDestinationId) {
    hashCode = hashCode * 31 + [self.destinationId hash];
  }
  if (self.hasNamespace) {
    hashCode = hashCode * 31 + [self.namespace hash];
  }
  if (self.hasPayloadType) {
    hashCode = hashCode * 31 + self.payloadType;
  }
  if (self.hasPayloadUtf8) {
    hashCode = hashCode * 31 + [self.payloadUtf8 hash];
  }
  if (self.hasPayloadBinary) {
    hashCode = hashCode * 31 + [self.payloadBinary hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}

@end


@implementation CastMessage_Builder {
  CastMessage* _result;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  _result = [[CastMessage alloc] init];
  return self;
}

- (PBGeneratedMessage*)internalGetResult {
  return _result;
}
- (instancetype)clear {
  _result = [[CastMessage alloc] init];
  return self;
}
- (instancetype)clone {
  return [[[CastMessage_Builder alloc] init] mergeFrom:_result];
}

- (CastMessage*)defaultMessageInstance {
  return [CastMessage defaultInstance];
}

- (CastMessage*)build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CastMessage*)buildPartial {
  CastMessage* partial = _result;
  _result = nil;
  return partial;
}

- (instancetype)mergeFrom:(CastMessage*)other {
  if (other == [CastMessage defaultInstance]) {
    return self;
  }
  if (other.hasProtocolVersion) {
    [self setProtocolVersion:other.protocolVersion];
  }
  if (other.hasSourceId) {
    [self setSourceId:other.sourceId];
  }
  if (other.hasDestinationId) {
    [self setDestinationId:other.destinationId];
  }
  if (other.hasNamespace) {
    [self setNamespace:other.namespace];
  }
  if (other.hasPayloadType) {
    [self setPayloadType:other.payloadType];
  }
  if (other.hasPayloadUtf8) {
    [self setPayloadUtf8:other.payloadUtf8];
  }
  if (other.hasPayloadBinary) {
    [self setPayloadBinary:other.payloadBinary];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (instancetype)mergeFromCodedInputStream:(PBCodedInputStream*)input
                        extensionRegistry:(PBExtensionRegistry*)extensionRegistry
{
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input
                       unknownFields:unknownFields
                   extensionRegistry:extensionRegistry
                                 tag:tag])
        {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        int32_t value = [input readEnum];
        if (CastMessage_ProtocolVersionIsValidValue(value)) {
          [self setProtocolVersion:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 18: {
        [self setSourceId:[input readString]];
        break;
      }
      case 26: {
        [self setDestinationId:[input readString]];
        break;
      }
      case 34: {
        [self setNamespace:[input readString]];
        break;
      }
      case 40: {
        int32_t value = [input readEnum];
        if (CastMessage_PayloadTypeIsValidValue(value)) {
          [self setPayloadType:value];
        } else {
          [unknownFields mergeVarintField:5 value:value];
        }
        break;
      }
      case 50: {
        [self setPayloadUtf8:[input readString]];
        break;
      }
      case 58: {
        [self setPayloadBinary:[input readData]];
        break;
      }
    }
  }
}
- (BOOL)hasProtocolVersion {
  return _result.hasProtocolVersion;
}
- (CastMessage_ProtocolVersion)protocolVersion {
  return _result.protocolVersion;
}
- (CastMessage_Builder*)setProtocolVersion:(CastMessage_ProtocolVersion)value {
  _result.hasProtocolVersion = YES;
  _result.protocolVersion = value;
  return self;
}
- (CastMessage_Builder*)clearProtocolVersion {
  _result.hasProtocolVersion = NO;
  _result.protocolVersion = CastMessage_ProtocolVersionCASTV210;
  return self;
}
- (BOOL)hasSourceId {
  return _result.hasSourceId;
}
- (NSString *) sourceId {
  return _result.sourceId;
}
- (instancetype)setSourceId:(NSString *)value {
  _result.hasSourceId = YES;
  _result.sourceId = value;
  return self;
}
- (instancetype)clearSourceId {
  _result.hasSourceId = NO;
  _result.sourceId = @"";
  return self;
}
- (BOOL)hasDestinationId {
  return _result.hasDestinationId;
}
- (NSString *) destinationId {
  return _result.destinationId;
}
- (instancetype)setDestinationId:(NSString *)value {
  _result.hasDestinationId = YES;
  _result.destinationId = value;
  return self;
}
- (instancetype)clearDestinationId {
  _result.hasDestinationId = NO;
  _result.destinationId = @"";
  return self;
}
- (BOOL)hasNamespace {
  return _result.hasNamespace;
}
- (NSString *) namespace {
  return _result.namespace;
}
- (instancetype)setNamespace:(NSString *)value {
  _result.hasNamespace = YES;
  _result.namespace = value;
  return self;
}
- (instancetype)clearNamespace {
  _result.hasNamespace = NO;
  _result.namespace = @"";
  return self;
}
- (BOOL)hasPayloadType {
  return _result.hasPayloadType;
}
- (CastMessage_PayloadType)payloadType {
  return _result.payloadType;
}
- (CastMessage_Builder*)setPayloadType:(CastMessage_PayloadType)value {
  _result.hasPayloadType = YES;
  _result.payloadType = value;
  return self;
}
- (CastMessage_Builder*)clearPayloadType {
  _result.hasPayloadType = NO;
  _result.payloadType = CastMessage_PayloadTypeSTRING;
  return self;
}
- (BOOL)hasPayloadUtf8 {
  return _result.hasPayloadUtf8;
}
- (NSString *) payloadUtf8 {
  return _result.payloadUtf8;
}
- (instancetype)setPayloadUtf8:(NSString *)value {
  _result.hasPayloadUtf8 = YES;
  _result.payloadUtf8 = value;
  return self;
}
- (instancetype)clearPayloadUtf8 {
  _result.hasPayloadUtf8 = NO;
  _result.payloadUtf8 = @"";
  return self;
}
- (BOOL)hasPayloadBinary {
  return _result.hasPayloadBinary;
}
- (NSData *) payloadBinary {
  return _result.payloadBinary;
}
- (instancetype)setPayloadBinary:(NSData *)value {
  _result.hasPayloadBinary = YES;
  _result.payloadBinary = value;
  return self;
}
- (instancetype)clearPayloadBinary {
  _result.hasPayloadBinary = NO;
  _result.payloadBinary = [NSData data];
  return self;
}

@end


#pragma mark - AuthChallenge

@interface AuthChallenge ()


@end

@implementation AuthChallenge {
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  return self;
}

+ (instancetype)defaultInstance {
  static id _sharedObject = nil;
  static dispatch_once_t onceToken;
  dispatch_once(&onceToken, ^{
    _sharedObject = [[self alloc] init];
  });
  return _sharedObject;
}



- (BOOL)isInitialized {
  return YES;
}

- (void)writeToCodedOutputStream:(PBCodedOutputStream*)output {
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t)serializedSize {
  int32_t size_ = _cachedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  _cachedSerializedSize = size_;
  return size_;
}


+ (AuthChallenge_Builder*)builder {
  return [[AuthChallenge_Builder alloc] init];
}
+ (AuthChallenge_Builder*)builderWithPrototype:(AuthChallenge*)prototype {
  return [[AuthChallenge builder] mergeFrom:prototype];
}
- (AuthChallenge_Builder*)builder {
  return [AuthChallenge builder];
}
- (AuthChallenge_Builder*)toBuilder {
  return [AuthChallenge builderWithPrototype:self];
}

- (void)writeDescriptionTo:(NSMutableString*)output withIndent:(NSString*)indent {
  NSUInteger listCount; listCount = 0;
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}

- (BOOL)isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AuthChallenge class]]) {
    return NO;
  }
  AuthChallenge *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields ||
       (self.unknownFields != nil &&
       [self.unknownFields isEqual:otherMessage.unknownFields]));
}

- (NSUInteger)hash {
  NSUInteger hashCode; hashCode = 7;
  NSUInteger listCount; listCount = 0;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}

@end


@implementation AuthChallenge_Builder {
  AuthChallenge* _result;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  _result = [[AuthChallenge alloc] init];
  return self;
}

- (PBGeneratedMessage*)internalGetResult {
  return _result;
}
- (instancetype)clear {
  _result = [[AuthChallenge alloc] init];
  return self;
}
- (instancetype)clone {
  return [[[AuthChallenge_Builder alloc] init] mergeFrom:_result];
}

- (AuthChallenge*)defaultMessageInstance {
  return [AuthChallenge defaultInstance];
}

- (AuthChallenge*)build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AuthChallenge*)buildPartial {
  AuthChallenge* partial = _result;
  _result = nil;
  return partial;
}

- (instancetype)mergeFrom:(AuthChallenge*)other {
  if (other == [AuthChallenge defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (instancetype)mergeFromCodedInputStream:(PBCodedInputStream*)input
                        extensionRegistry:(PBExtensionRegistry*)extensionRegistry
{
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input
                       unknownFields:unknownFields
                   extensionRegistry:extensionRegistry
                                 tag:tag])
        {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}

@end


#pragma mark - AuthResponse

@interface AuthResponse ()

@property (strong) NSData * signature;
@property (strong) NSData * clientAuthCertificate;

@end

@implementation AuthResponse {
  BOOL _hasSignature:1;
  BOOL _hasClientAuthCertificate:1;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
    _signature = [NSData data];
    _clientAuthCertificate = [NSData data];
  return self;
}

+ (instancetype)defaultInstance {
  static id _sharedObject = nil;
  static dispatch_once_t onceToken;
  dispatch_once(&onceToken, ^{
    _sharedObject = [[self alloc] init];
  });
  return _sharedObject;
}

- (BOOL)hasSignature {
  return !!_hasSignature;
}
- (void)setHasSignature:(BOOL)value {
  _hasSignature = !!value;
}
- (BOOL)hasClientAuthCertificate {
  return !!_hasClientAuthCertificate;
}
- (void)setHasClientAuthCertificate:(BOOL)value {
  _hasClientAuthCertificate = !!value;
}


- (BOOL)isInitialized {
  if (!self.hasSignature) {
    return NO;
  }
  if (!self.hasClientAuthCertificate) {
    return NO;
  }
  return YES;
}

- (void)writeToCodedOutputStream:(PBCodedOutputStream*)output {
  if (self.hasSignature) {
    [output writeData:1 value:self.signature];
  }
  if (self.hasClientAuthCertificate) {
    [output writeData:2 value:self.clientAuthCertificate];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t)serializedSize {
  int32_t size_ = _cachedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSignature) {
    size_ += computeDataSize(1, self.signature);
  }
  if (self.hasClientAuthCertificate) {
    size_ += computeDataSize(2, self.clientAuthCertificate);
  }
  size_ += self.unknownFields.serializedSize;
  _cachedSerializedSize = size_;
  return size_;
}


+ (AuthResponse_Builder*)builder {
  return [[AuthResponse_Builder alloc] init];
}
+ (AuthResponse_Builder*)builderWithPrototype:(AuthResponse*)prototype {
  return [[AuthResponse builder] mergeFrom:prototype];
}
- (AuthResponse_Builder*)builder {
  return [AuthResponse builder];
}
- (AuthResponse_Builder*)toBuilder {
  return [AuthResponse builderWithPrototype:self];
}

- (void)writeDescriptionTo:(NSMutableString*)output withIndent:(NSString*)indent {
  NSUInteger listCount; listCount = 0;
  if (self.hasSignature) {
    [output appendFormat:@"%@%@: %@\n", indent, @"signature", self.signature];
  }
  if (self.hasClientAuthCertificate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientAuthCertificate", self.clientAuthCertificate];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}

- (BOOL)isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AuthResponse class]]) {
    return NO;
  }
  AuthResponse *otherMessage = other;
  return
      self.hasSignature == otherMessage.hasSignature &&
      (!self.hasSignature || [self.signature isEqual:otherMessage.signature]) &&
      self.hasClientAuthCertificate == otherMessage.hasClientAuthCertificate &&
      (!self.hasClientAuthCertificate || [self.clientAuthCertificate isEqual:otherMessage.clientAuthCertificate]) &&
      (self.unknownFields == otherMessage.unknownFields ||
       (self.unknownFields != nil &&
       [self.unknownFields isEqual:otherMessage.unknownFields]));
}

- (NSUInteger)hash {
  NSUInteger hashCode; hashCode = 7;
  NSUInteger listCount; listCount = 0;
  if (self.hasSignature) {
    hashCode = hashCode * 31 + [self.signature hash];
  }
  if (self.hasClientAuthCertificate) {
    hashCode = hashCode * 31 + [self.clientAuthCertificate hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}

@end


@implementation AuthResponse_Builder {
  AuthResponse* _result;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  _result = [[AuthResponse alloc] init];
  return self;
}

- (PBGeneratedMessage*)internalGetResult {
  return _result;
}
- (instancetype)clear {
  _result = [[AuthResponse alloc] init];
  return self;
}
- (instancetype)clone {
  return [[[AuthResponse_Builder alloc] init] mergeFrom:_result];
}

- (AuthResponse*)defaultMessageInstance {
  return [AuthResponse defaultInstance];
}

- (AuthResponse*)build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AuthResponse*)buildPartial {
  AuthResponse* partial = _result;
  _result = nil;
  return partial;
}

- (instancetype)mergeFrom:(AuthResponse*)other {
  if (other == [AuthResponse defaultInstance]) {
    return self;
  }
  if (other.hasSignature) {
    [self setSignature:other.signature];
  }
  if (other.hasClientAuthCertificate) {
    [self setClientAuthCertificate:other.clientAuthCertificate];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (instancetype)mergeFromCodedInputStream:(PBCodedInputStream*)input
                        extensionRegistry:(PBExtensionRegistry*)extensionRegistry
{
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input
                       unknownFields:unknownFields
                   extensionRegistry:extensionRegistry
                                 tag:tag])
        {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSignature:[input readData]];
        break;
      }
      case 18: {
        [self setClientAuthCertificate:[input readData]];
        break;
      }
    }
  }
}
- (BOOL)hasSignature {
  return _result.hasSignature;
}
- (NSData *) signature {
  return _result.signature;
}
- (instancetype)setSignature:(NSData *)value {
  _result.hasSignature = YES;
  _result.signature = value;
  return self;
}
- (instancetype)clearSignature {
  _result.hasSignature = NO;
  _result.signature = [NSData data];
  return self;
}
- (BOOL)hasClientAuthCertificate {
  return _result.hasClientAuthCertificate;
}
- (NSData *) clientAuthCertificate {
  return _result.clientAuthCertificate;
}
- (instancetype)setClientAuthCertificate:(NSData *)value {
  _result.hasClientAuthCertificate = YES;
  _result.clientAuthCertificate = value;
  return self;
}
- (instancetype)clearClientAuthCertificate {
  _result.hasClientAuthCertificate = NO;
  _result.clientAuthCertificate = [NSData data];
  return self;
}

@end


#pragma mark - AuthError

BOOL AuthError_ErrorTypeIsValidValue(AuthError_ErrorType value) {
  switch (value) {
    case AuthError_ErrorTypeINTERNALERROR:
    case AuthError_ErrorTypeNOTLS:
      return YES;
    default:
      return NO;
  }
}

@interface AuthError ()

@property AuthError_ErrorType errorType;

@end

@implementation AuthError {
  BOOL _hasErrorType:1;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
    _errorType = AuthError_ErrorTypeINTERNALERROR;
  return self;
}

+ (instancetype)defaultInstance {
  static id _sharedObject = nil;
  static dispatch_once_t onceToken;
  dispatch_once(&onceToken, ^{
    _sharedObject = [[self alloc] init];
  });
  return _sharedObject;
}

- (BOOL)hasErrorType {
  return !!_hasErrorType;
}
- (void)setHasErrorType:(BOOL)value {
  _hasErrorType = !!value;
}


- (BOOL)isInitialized {
  if (!self.hasErrorType) {
    return NO;
  }
  return YES;
}

- (void)writeToCodedOutputStream:(PBCodedOutputStream*)output {
  if (self.hasErrorType) {
    [output writeEnum:1 value:self.errorType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t)serializedSize {
  int32_t size_ = _cachedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasErrorType) {
    size_ += computeEnumSize(1, self.errorType);
  }
  size_ += self.unknownFields.serializedSize;
  _cachedSerializedSize = size_;
  return size_;
}


+ (AuthError_Builder*)builder {
  return [[AuthError_Builder alloc] init];
}
+ (AuthError_Builder*)builderWithPrototype:(AuthError*)prototype {
  return [[AuthError builder] mergeFrom:prototype];
}
- (AuthError_Builder*)builder {
  return [AuthError builder];
}
- (AuthError_Builder*)toBuilder {
  return [AuthError builderWithPrototype:self];
}

- (void)writeDescriptionTo:(NSMutableString*)output withIndent:(NSString*)indent {
  NSUInteger listCount; listCount = 0;
  if (self.hasErrorType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"errorType", @(self.errorType)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}

- (BOOL)isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AuthError class]]) {
    return NO;
  }
  AuthError *otherMessage = other;
  return
      self.hasErrorType == otherMessage.hasErrorType &&
      (!self.hasErrorType || self.errorType == otherMessage.errorType) &&
      (self.unknownFields == otherMessage.unknownFields ||
       (self.unknownFields != nil &&
       [self.unknownFields isEqual:otherMessage.unknownFields]));
}

- (NSUInteger)hash {
  NSUInteger hashCode; hashCode = 7;
  NSUInteger listCount; listCount = 0;
  if (self.hasErrorType) {
    hashCode = hashCode * 31 + self.errorType;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}

@end


@implementation AuthError_Builder {
  AuthError* _result;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  _result = [[AuthError alloc] init];
  return self;
}

- (PBGeneratedMessage*)internalGetResult {
  return _result;
}
- (instancetype)clear {
  _result = [[AuthError alloc] init];
  return self;
}
- (instancetype)clone {
  return [[[AuthError_Builder alloc] init] mergeFrom:_result];
}

- (AuthError*)defaultMessageInstance {
  return [AuthError defaultInstance];
}

- (AuthError*)build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AuthError*)buildPartial {
  AuthError* partial = _result;
  _result = nil;
  return partial;
}

- (instancetype)mergeFrom:(AuthError*)other {
  if (other == [AuthError defaultInstance]) {
    return self;
  }
  if (other.hasErrorType) {
    [self setErrorType:other.errorType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (instancetype)mergeFromCodedInputStream:(PBCodedInputStream*)input
                        extensionRegistry:(PBExtensionRegistry*)extensionRegistry
{
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input
                       unknownFields:unknownFields
                   extensionRegistry:extensionRegistry
                                 tag:tag])
        {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        int32_t value = [input readEnum];
        if (AuthError_ErrorTypeIsValidValue(value)) {
          [self setErrorType:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL)hasErrorType {
  return _result.hasErrorType;
}
- (AuthError_ErrorType)errorType {
  return _result.errorType;
}
- (AuthError_Builder*)setErrorType:(AuthError_ErrorType)value {
  _result.hasErrorType = YES;
  _result.errorType = value;
  return self;
}
- (AuthError_Builder*)clearErrorType {
  _result.hasErrorType = NO;
  _result.errorType = AuthError_ErrorTypeINTERNALERROR;
  return self;
}

@end


#pragma mark - DeviceAuthMessage

@interface DeviceAuthMessage ()

@property (strong) AuthChallenge* challenge;
@property (strong) AuthResponse* response;
@property (strong) AuthError* error;

@end

@implementation DeviceAuthMessage {
  BOOL _hasChallenge:1;
  BOOL _hasResponse:1;
  BOOL _hasError:1;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
    _challenge = [AuthChallenge defaultInstance];
    _response = [AuthResponse defaultInstance];
    _error = [AuthError defaultInstance];
  return self;
}

+ (instancetype)defaultInstance {
  static id _sharedObject = nil;
  static dispatch_once_t onceToken;
  dispatch_once(&onceToken, ^{
    _sharedObject = [[self alloc] init];
  });
  return _sharedObject;
}

- (BOOL)hasChallenge {
  return !!_hasChallenge;
}
- (void)setHasChallenge:(BOOL)value {
  _hasChallenge = !!value;
}

- (BOOL)hasResponse {
  return !!_hasResponse;
}
- (void)setHasResponse:(BOOL)value {
  _hasResponse = !!value;
}

- (BOOL)hasError {
  return !!_hasError;
}
- (void)setHasError:(BOOL)value {
  _hasError = !!value;
}



- (BOOL)isInitialized {
  if (self.hasResponse) {
    if (!self.response.isInitialized) {
      return NO;
    }
  }
  if (self.hasError) {
    if (!self.error.isInitialized) {
      return NO;
    }
  }
  return YES;
}

- (void)writeToCodedOutputStream:(PBCodedOutputStream*)output {
  if (self.hasChallenge) {
    [output writeMessage:1 value:self.challenge];
  }
  if (self.hasResponse) {
    [output writeMessage:2 value:self.response];
  }
  if (self.hasError) {
    [output writeMessage:3 value:self.error];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t)serializedSize {
  int32_t size_ = _cachedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasChallenge) {
    size_ += computeMessageSize(1, self.challenge);
  }
  if (self.hasResponse) {
    size_ += computeMessageSize(2, self.response);
  }
  if (self.hasError) {
    size_ += computeMessageSize(3, self.error);
  }
  size_ += self.unknownFields.serializedSize;
  _cachedSerializedSize = size_;
  return size_;
}


+ (DeviceAuthMessage_Builder*)builder {
  return [[DeviceAuthMessage_Builder alloc] init];
}
+ (DeviceAuthMessage_Builder*)builderWithPrototype:(DeviceAuthMessage*)prototype {
  return [[DeviceAuthMessage builder] mergeFrom:prototype];
}
- (DeviceAuthMessage_Builder*)builder {
  return [DeviceAuthMessage builder];
}
- (DeviceAuthMessage_Builder*)toBuilder {
  return [DeviceAuthMessage builderWithPrototype:self];
}

- (void)writeDescriptionTo:(NSMutableString*)output withIndent:(NSString*)indent {
  NSUInteger listCount; listCount = 0;
  if (self.hasChallenge) {
    [output appendFormat:@"%@%@ {\n", indent, @"challenge"];
    [self.challenge writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasResponse) {
    [output appendFormat:@"%@%@ {\n", indent, @"response"];
    [self.response writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasError) {
    [output appendFormat:@"%@%@ {\n", indent, @"error"];
    [self.error writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}

- (BOOL)isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[DeviceAuthMessage class]]) {
    return NO;
  }
  DeviceAuthMessage *otherMessage = other;
  return
      self.hasChallenge == otherMessage.hasChallenge &&
      (!self.hasChallenge || [self.challenge isEqual:otherMessage.challenge]) &&
      self.hasResponse == otherMessage.hasResponse &&
      (!self.hasResponse || [self.response isEqual:otherMessage.response]) &&
      self.hasError == otherMessage.hasError &&
      (!self.hasError || [self.error isEqual:otherMessage.error]) &&
      (self.unknownFields == otherMessage.unknownFields ||
       (self.unknownFields != nil &&
       [self.unknownFields isEqual:otherMessage.unknownFields]));
}

- (NSUInteger)hash {
  NSUInteger hashCode; hashCode = 7;
  NSUInteger listCount; listCount = 0;
  if (self.hasChallenge) {
    hashCode = hashCode * 31 + [self.challenge hash];
  }
  if (self.hasResponse) {
    hashCode = hashCode * 31 + [self.response hash];
  }
  if (self.hasError) {
    hashCode = hashCode * 31 + [self.error hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}

@end


@implementation DeviceAuthMessage_Builder {
  DeviceAuthMessage* _result;
}

- (instancetype)init {
  self = [super init];
  if (self == nil) {
    return nil;
  }
  _result = [[DeviceAuthMessage alloc] init];
  return self;
}

- (PBGeneratedMessage*)internalGetResult {
  return _result;
}
- (instancetype)clear {
  _result = [[DeviceAuthMessage alloc] init];
  return self;
}
- (instancetype)clone {
  return [[[DeviceAuthMessage_Builder alloc] init] mergeFrom:_result];
}

- (DeviceAuthMessage*)defaultMessageInstance {
  return [DeviceAuthMessage defaultInstance];
}

- (DeviceAuthMessage*)build {
  [self checkInitialized];
  return [self buildPartial];
}
- (DeviceAuthMessage*)buildPartial {
  DeviceAuthMessage* partial = _result;
  _result = nil;
  return partial;
}

- (instancetype)mergeFrom:(DeviceAuthMessage*)other {
  if (other == [DeviceAuthMessage defaultInstance]) {
    return self;
  }
  if (other.hasChallenge) {
    [self mergeChallenge:other.challenge];
  }
  if (other.hasResponse) {
    [self mergeResponse:other.response];
  }
  if (other.hasError) {
    [self mergeError:other.error];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (instancetype)mergeFromCodedInputStream:(PBCodedInputStream*)input
                        extensionRegistry:(PBExtensionRegistry*)extensionRegistry
{
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input
                       unknownFields:unknownFields
                   extensionRegistry:extensionRegistry
                                 tag:tag])
        {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        AuthChallenge_Builder* subBuilder = [AuthChallenge builder];
        if (self.hasChallenge) {
          [subBuilder mergeFrom:self.challenge];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setChallenge:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        AuthResponse_Builder* subBuilder = [AuthResponse builder];
        if (self.hasResponse) {
          [subBuilder mergeFrom:self.response];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setResponse:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        AuthError_Builder* subBuilder = [AuthError builder];
        if (self.hasError) {
          [subBuilder mergeFrom:self.error];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setError:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL)hasChallenge {
  return _result.hasChallenge;
}
- (AuthChallenge*)challenge {
  return _result.challenge;
}
- (instancetype)setChallenge:(AuthChallenge*)value {
  _result.hasChallenge = YES;
  _result.challenge = value;
  return self;
}
- (instancetype)setChallengeBuilder:(AuthChallenge_Builder*)builderForValue {
  return [self setChallenge:[builderForValue build]];
}
- (instancetype)mergeChallenge:(AuthChallenge*)value {
  if (_result.hasChallenge &&
      _result.challenge != [AuthChallenge defaultInstance]) {
    _result.challenge =
      [[[AuthChallenge builderWithPrototype:_result.challenge] mergeFrom:value] buildPartial];
  } else {
    _result.challenge = value;
  }
  _result.hasChallenge = YES;
  return self;
}
- (instancetype)clearChallenge {
  _result.hasChallenge = NO;
  _result.challenge = [AuthChallenge defaultInstance];
  return self;
}
- (BOOL)hasResponse {
  return _result.hasResponse;
}
- (AuthResponse*)response {
  return _result.response;
}
- (instancetype)setResponse:(AuthResponse*)value {
  _result.hasResponse = YES;
  _result.response = value;
  return self;
}
- (instancetype)setResponseBuilder:(AuthResponse_Builder*)builderForValue {
  return [self setResponse:[builderForValue build]];
}
- (instancetype)mergeResponse:(AuthResponse*)value {
  if (_result.hasResponse &&
      _result.response != [AuthResponse defaultInstance]) {
    _result.response =
      [[[AuthResponse builderWithPrototype:_result.response] mergeFrom:value] buildPartial];
  } else {
    _result.response = value;
  }
  _result.hasResponse = YES;
  return self;
}
- (instancetype)clearResponse {
  _result.hasResponse = NO;
  _result.response = [AuthResponse defaultInstance];
  return self;
}
- (BOOL)hasError {
  return _result.hasError;
}
- (AuthError*)error {
  return _result.error;
}
- (instancetype)setError:(AuthError*)value {
  _result.hasError = YES;
  _result.error = value;
  return self;
}
- (instancetype)setErrorBuilder:(AuthError_Builder*)builderForValue {
  return [self setError:[builderForValue build]];
}
- (instancetype)mergeError:(AuthError*)value {
  if (_result.hasError &&
      _result.error != [AuthError defaultInstance]) {
    _result.error =
      [[[AuthError builderWithPrototype:_result.error] mergeFrom:value] buildPartial];
  } else {
    _result.error = value;
  }
  _result.hasError = YES;
  return self;
}
- (instancetype)clearError {
  _result.hasError = NO;
  _result.error = [AuthError defaultInstance];
  return self;
}

@end


// @@protoc_insertion_point(global_scope)
